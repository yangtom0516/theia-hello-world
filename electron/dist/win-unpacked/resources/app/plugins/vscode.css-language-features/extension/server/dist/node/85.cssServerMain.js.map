{"version":3,"file":"85.cssServerMain.js","mappings":"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","sources":["webpack://vscode-css-languageserver/./src/cssServer.ts","webpack://vscode-css-languageserver/./src/customData.ts","webpack://vscode-css-languageserver/./src/languageModelCache.ts","webpack://vscode-css-languageserver/./src/node/cssServerMain.ts","webpack://vscode-css-languageserver/./src/node/nodeFs.ts","webpack://vscode-css-languageserver/./src/requests.ts","webpack://vscode-css-languageserver/./src/utils/documentContext.ts","webpack://vscode-css-languageserver/./src/utils/runner.ts","webpack://vscode-css-languageserver/./src/utils/strings.ts","webpack://vscode-css-languageserver/./src/utils/validation.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tConnection, TextDocuments, InitializeParams, InitializeResult, ServerCapabilities, ConfigurationRequest, WorkspaceFolder, TextDocumentSyncKind, NotificationType, Disposable, TextDocumentIdentifier, Range, FormattingOptions, TextEdit, Diagnostic\n} from 'vscode-languageserver';\nimport { URI } from 'vscode-uri';\nimport { getCSSLanguageService, getSCSSLanguageService, getLESSLanguageService, LanguageSettings, LanguageService, Stylesheet, TextDocument, Position } from 'vscode-css-languageservice';\nimport { getLanguageModelCache } from './languageModelCache';\nimport { runSafeAsync } from './utils/runner';\nimport { DiagnosticsSupport, registerDiagnosticsPullSupport, registerDiagnosticsPushSupport } from './utils/validation';\nimport { getDocumentContext } from './utils/documentContext';\nimport { fetchDataProviders } from './customData';\nimport { RequestService, getRequestService } from './requests';\n\nnamespace CustomDataChangedNotification {\n\texport const type: NotificationType<string[]> = new NotificationType('css/customDataChanged');\n}\n\nexport interface Settings {\n\tcss: LanguageSettings;\n\tless: LanguageSettings;\n\tscss: LanguageSettings;\n}\n\nexport interface RuntimeEnvironment {\n\treadonly file?: RequestService;\n\treadonly http?: RequestService;\n\treadonly timer: {\n\t\tsetImmediate(callback: (...args: any[]) => void, ...args: any[]): Disposable;\n\t\tsetTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): Disposable;\n\t};\n}\n\nexport function startServer(connection: Connection, runtime: RuntimeEnvironment) {\n\n\t// Create a text document manager.\n\tconst documents = new TextDocuments(TextDocument);\n\t// Make the text document manager listen on the connection\n\t// for open, change and close text document events\n\tdocuments.listen(connection);\n\n\tconst stylesheets = getLanguageModelCache<Stylesheet>(10, 60, document => getLanguageService(document).parseStylesheet(document));\n\tdocuments.onDidClose(e => {\n\t\tstylesheets.onDocumentRemoved(e.document);\n\t});\n\tconnection.onShutdown(() => {\n\t\tstylesheets.dispose();\n\t});\n\n\tlet scopedSettingsSupport = false;\n\tlet foldingRangeLimit = Number.MAX_VALUE;\n\tlet workspaceFolders: WorkspaceFolder[];\n\tlet formatterMaxNumberOfEdits = Number.MAX_VALUE;\n\n\tlet dataProvidersReady: Promise<any> = Promise.resolve();\n\n\tlet diagnosticsSupport: DiagnosticsSupport | undefined;\n\n\tconst languageServices: { [id: string]: LanguageService } = {};\n\n\tconst notReady = () => Promise.reject('Not Ready');\n\tlet requestService: RequestService = { getContent: notReady, stat: notReady, readDirectory: notReady };\n\n\t// After the server has started the client sends an initialize request. The server receives\n\t// in the passed params the rootPath of the workspace plus the client capabilities.\n\tconnection.onInitialize((params: InitializeParams): InitializeResult => {\n\n\t\tconst initializationOptions = params.initializationOptions as any || {};\n\n\t\tworkspaceFolders = (<any>params).workspaceFolders;\n\t\tif (!Array.isArray(workspaceFolders)) {\n\t\t\tworkspaceFolders = [];\n\t\t\tif (params.rootPath) {\n\t\t\t\tworkspaceFolders.push({ name: '', uri: URI.file(params.rootPath).toString(true) });\n\t\t\t}\n\t\t}\n\n\t\trequestService = getRequestService(initializationOptions?.handledSchemas || ['file'], connection, runtime);\n\n\t\tfunction getClientCapability<T>(name: string, def: T) {\n\t\t\tconst keys = name.split('.');\n\t\t\tlet c: any = params.capabilities;\n\t\t\tfor (let i = 0; c && i < keys.length; i++) {\n\t\t\t\tif (!c.hasOwnProperty(keys[i])) {\n\t\t\t\t\treturn def;\n\t\t\t\t}\n\t\t\t\tc = c[keys[i]];\n\t\t\t}\n\t\t\treturn c;\n\t\t}\n\t\tconst snippetSupport = !!getClientCapability('textDocument.completion.completionItem.snippetSupport', false);\n\t\tscopedSettingsSupport = !!getClientCapability('workspace.configuration', false);\n\t\tfoldingRangeLimit = getClientCapability('textDocument.foldingRange.rangeLimit', Number.MAX_VALUE);\n\n\t\tformatterMaxNumberOfEdits = initializationOptions?.customCapabilities?.rangeFormatting?.editLimit || Number.MAX_VALUE;\n\n\t\tlanguageServices.css = getCSSLanguageService({ fileSystemProvider: requestService, clientCapabilities: params.capabilities });\n\t\tlanguageServices.scss = getSCSSLanguageService({ fileSystemProvider: requestService, clientCapabilities: params.capabilities });\n\t\tlanguageServices.less = getLESSLanguageService({ fileSystemProvider: requestService, clientCapabilities: params.capabilities });\n\n\t\tconst supportsDiagnosticPull = getClientCapability('textDocument.diagnostic', undefined);\n\t\tif (supportsDiagnosticPull === undefined) {\n\t\t\tdiagnosticsSupport = registerDiagnosticsPushSupport(documents, connection, runtime, validateTextDocument);\n\t\t} else {\n\t\t\tdiagnosticsSupport = registerDiagnosticsPullSupport(documents, connection, runtime, validateTextDocument);\n\t\t}\n\n\t\tconst capabilities: ServerCapabilities = {\n\t\t\ttextDocumentSync: TextDocumentSyncKind.Incremental,\n\t\t\tcompletionProvider: snippetSupport ? { resolveProvider: false, triggerCharacters: ['/', '-', ':'] } : undefined,\n\t\t\thoverProvider: true,\n\t\t\tdocumentSymbolProvider: true,\n\t\t\treferencesProvider: true,\n\t\t\tdefinitionProvider: true,\n\t\t\tdocumentHighlightProvider: true,\n\t\t\tdocumentLinkProvider: {\n\t\t\t\tresolveProvider: false\n\t\t\t},\n\t\t\tcodeActionProvider: true,\n\t\t\trenameProvider: true,\n\t\t\tcolorProvider: {},\n\t\t\tfoldingRangeProvider: true,\n\t\t\tselectionRangeProvider: true,\n\t\t\tdiagnosticProvider: {\n\t\t\t\tdocumentSelector: null,\n\t\t\t\tinterFileDependencies: false,\n\t\t\t\tworkspaceDiagnostics: false\n\t\t\t},\n\t\t\tdocumentRangeFormattingProvider: initializationOptions?.provideFormatter === true,\n\t\t\tdocumentFormattingProvider: initializationOptions?.provideFormatter === true,\n\t\t};\n\t\treturn { capabilities };\n\t});\n\n\tfunction getLanguageService(document: TextDocument) {\n\t\tlet service = languageServices[document.languageId];\n\t\tif (!service) {\n\t\t\tconnection.console.log('Document type is ' + document.languageId + ', using css instead.');\n\t\t\tservice = languageServices['css'];\n\t\t}\n\t\treturn service;\n\t}\n\n\tlet documentSettings: { [key: string]: Thenable<LanguageSettings | undefined> } = {};\n\t// remove document settings on close\n\tdocuments.onDidClose(e => {\n\t\tdelete documentSettings[e.document.uri];\n\t});\n\tfunction getDocumentSettings(textDocument: TextDocument): Thenable<LanguageSettings | undefined> {\n\t\tif (scopedSettingsSupport) {\n\t\t\tlet promise = documentSettings[textDocument.uri];\n\t\t\tif (!promise) {\n\t\t\t\tconst configRequestParam = { items: [{ scopeUri: textDocument.uri, section: textDocument.languageId }] };\n\t\t\t\tpromise = connection.sendRequest(ConfigurationRequest.type, configRequestParam).then(s => s[0] as LanguageSettings | undefined);\n\t\t\t\tdocumentSettings[textDocument.uri] = promise;\n\t\t\t}\n\t\t\treturn promise;\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t// The settings have changed. Is send on server activation as well.\n\tconnection.onDidChangeConfiguration(change => {\n\t\tupdateConfiguration(change.settings as any);\n\t});\n\n\tfunction updateConfiguration(settings: any) {\n\t\tfor (const languageId in languageServices) {\n\t\t\tlanguageServices[languageId].configure(settings[languageId]);\n\t\t}\n\t\t// reset all document settings\n\t\tdocumentSettings = {};\n\t\tdiagnosticsSupport?.requestRefresh();\n\t}\n\n\tasync function validateTextDocument(textDocument: TextDocument): Promise<Diagnostic[]> {\n\t\tconst settingsPromise = getDocumentSettings(textDocument);\n\t\tconst [settings] = await Promise.all([settingsPromise, dataProvidersReady]);\n\n\t\tconst stylesheet = stylesheets.get(textDocument);\n\t\treturn getLanguageService(textDocument).doValidation(textDocument, stylesheet, settings);\n\t}\n\n\tfunction updateDataProviders(dataPaths: string[]) {\n\t\tdataProvidersReady = fetchDataProviders(dataPaths, requestService).then(customDataProviders => {\n\t\t\tfor (const lang in languageServices) {\n\t\t\t\tlanguageServices[lang].setDataProviders(true, customDataProviders);\n\t\t\t}\n\t\t});\n\t}\n\n\tconnection.onCompletion((textDocumentPosition, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(textDocumentPosition.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst [settings,] = await Promise.all([getDocumentSettings(document), dataProvidersReady]);\n\t\t\t\tconst styleSheet = stylesheets.get(document);\n\t\t\t\tconst documentContext = getDocumentContext(document.uri, workspaceFolders);\n\t\t\t\treturn getLanguageService(document).doComplete2(document, textDocumentPosition.position, styleSheet, documentContext, settings?.completion);\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing completions for ${textDocumentPosition.textDocument.uri}`, token);\n\t});\n\n\tconnection.onHover((textDocumentPosition, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(textDocumentPosition.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst [settings,] = await Promise.all([getDocumentSettings(document), dataProvidersReady]);\n\t\t\t\tconst styleSheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).doHover(document, textDocumentPosition.position, styleSheet, settings?.hover);\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing hover for ${textDocumentPosition.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDocumentSymbol((documentSymbolParams, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(documentSymbolParams.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).findDocumentSymbols2(document, stylesheet);\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing document symbols for ${documentSymbolParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDefinition((documentDefinitionParams, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(documentDefinitionParams.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).findDefinition(document, documentDefinitionParams.position, stylesheet);\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing definitions for ${documentDefinitionParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDocumentHighlight((documentHighlightParams, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(documentHighlightParams.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).findDocumentHighlights(document, documentHighlightParams.position, stylesheet);\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing document highlights for ${documentHighlightParams.textDocument.uri}`, token);\n\t});\n\n\n\tconnection.onDocumentLinks(async (documentLinkParams, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(documentLinkParams.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst documentContext = getDocumentContext(document.uri, workspaceFolders);\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).findDocumentLinks2(document, stylesheet, documentContext);\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing document links for ${documentLinkParams.textDocument.uri}`, token);\n\t});\n\n\n\tconnection.onReferences((referenceParams, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(referenceParams.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).findReferences(document, referenceParams.position, stylesheet);\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing references for ${referenceParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onCodeAction((codeActionParams, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(codeActionParams.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).doCodeActions(document, codeActionParams.range, codeActionParams.context, stylesheet);\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing code actions for ${codeActionParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDocumentColor((params, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).findDocumentColors(document, stylesheet);\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing document colors for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.onColorPresentation((params, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).getColorPresentations(document, stylesheet, params.color, params.range);\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing color presentations for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.onRenameRequest((renameParameters, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(renameParameters.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).doRename(document, renameParameters.position, renameParameters.newName, stylesheet);\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing renames for ${renameParameters.textDocument.uri}`, token);\n\t});\n\n\tconnection.onFoldingRanges((params, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\treturn getLanguageService(document).getFoldingRanges(document, { rangeLimit: foldingRangeLimit });\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing folding ranges for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.onSelectionRanges((params, token) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tconst positions: Position[] = params.positions;\n\n\t\t\tif (document) {\n\t\t\t\tawait dataProvidersReady;\n\t\t\t\tconst stylesheet = stylesheets.get(document);\n\t\t\t\treturn getLanguageService(document).getSelectionRanges(document, positions, stylesheet);\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing selection ranges for ${params.textDocument.uri}`, token);\n\t});\n\n\tasync function onFormat(textDocument: TextDocumentIdentifier, range: Range | undefined, options: FormattingOptions): Promise<TextEdit[]> {\n\t\tconst document = documents.get(textDocument.uri);\n\t\tif (document) {\n\t\t\tconst edits = getLanguageService(document).format(document, range ?? getFullRange(document), options);\n\t\t\tif (edits.length > formatterMaxNumberOfEdits) {\n\t\t\t\tconst newText = TextDocument.applyEdits(document, edits);\n\t\t\t\treturn [TextEdit.replace(getFullRange(document), newText)];\n\t\t\t}\n\t\t\treturn edits;\n\t\t}\n\t\treturn [];\n\t}\n\n\tconnection.onDocumentRangeFormatting((formatParams, token) => {\n\t\treturn runSafeAsync(runtime, () => onFormat(formatParams.textDocument, formatParams.range, formatParams.options), [], `Error while formatting range for ${formatParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDocumentFormatting((formatParams, token) => {\n\t\treturn runSafeAsync(runtime, () => onFormat(formatParams.textDocument, undefined, formatParams.options), [], `Error while formatting ${formatParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onNotification(CustomDataChangedNotification.type, updateDataProviders);\n\n\t// Listen on the connection\n\tconnection.listen();\n\n}\n\nfunction getFullRange(document: TextDocument): Range {\n\treturn Range.create(Position.create(0, 0), document.positionAt(document.getText().length));\n}\n\n\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ICSSDataProvider, newCSSDataProvider } from 'vscode-css-languageservice';\nimport { RequestService } from './requests';\n\nexport function fetchDataProviders(dataPaths: string[], requestService: RequestService): Promise<ICSSDataProvider[]> {\n\tconst providers = dataPaths.map(async p => {\n\t\ttry {\n\t\t\tconst content = await requestService.getContent(p);\n\t\t\treturn parseCSSData(content);\n\t\t} catch (e) {\n\t\t\treturn newCSSDataProvider({ version: 1 });\n\t\t}\n\t});\n\n\treturn Promise.all(providers);\n}\n\nfunction parseCSSData(source: string): ICSSDataProvider {\n\tlet rawData: any;\n\n\ttry {\n\t\trawData = JSON.parse(source);\n\t} catch (err) {\n\t\treturn newCSSDataProvider({ version: 1 });\n\t}\n\n\treturn newCSSDataProvider({\n\t\tversion: rawData.version || 1,\n\t\tproperties: rawData.properties || [],\n\t\tatDirectives: rawData.atDirectives || [],\n\t\tpseudoClasses: rawData.pseudoClasses || [],\n\t\tpseudoElements: rawData.pseudoElements || []\n\t});\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextDocument } from 'vscode-css-languageservice';\n\nexport interface LanguageModelCache<T> {\n\tget(document: TextDocument): T;\n\tonDocumentRemoved(document: TextDocument): void;\n\tdispose(): void;\n}\n\nexport function getLanguageModelCache<T>(maxEntries: number, cleanupIntervalTimeInSec: number, parse: (document: TextDocument) => T): LanguageModelCache<T> {\n\tlet languageModels: { [uri: string]: { version: number; languageId: string; cTime: number; languageModel: T } } = {};\n\tlet nModels = 0;\n\n\tlet cleanupInterval: NodeJS.Timeout | undefined = undefined;\n\tif (cleanupIntervalTimeInSec > 0) {\n\t\tcleanupInterval = setInterval(() => {\n\t\t\tconst cutoffTime = Date.now() - cleanupIntervalTimeInSec * 1000;\n\t\t\tconst uris = Object.keys(languageModels);\n\t\t\tfor (const uri of uris) {\n\t\t\t\tconst languageModelInfo = languageModels[uri];\n\t\t\t\tif (languageModelInfo.cTime < cutoffTime) {\n\t\t\t\t\tdelete languageModels[uri];\n\t\t\t\t\tnModels--;\n\t\t\t\t}\n\t\t\t}\n\t\t}, cleanupIntervalTimeInSec * 1000);\n\t}\n\n\treturn {\n\t\tget(document: TextDocument): T {\n\t\t\tconst version = document.version;\n\t\t\tconst languageId = document.languageId;\n\t\t\tconst languageModelInfo = languageModels[document.uri];\n\t\t\tif (languageModelInfo && languageModelInfo.version === version && languageModelInfo.languageId === languageId) {\n\t\t\t\tlanguageModelInfo.cTime = Date.now();\n\t\t\t\treturn languageModelInfo.languageModel;\n\t\t\t}\n\t\t\tconst languageModel = parse(document);\n\t\t\tlanguageModels[document.uri] = { languageModel, version, languageId, cTime: Date.now() };\n\t\t\tif (!languageModelInfo) {\n\t\t\t\tnModels++;\n\t\t\t}\n\n\t\t\tif (nModels === maxEntries) {\n\t\t\t\tlet oldestTime = Number.MAX_VALUE;\n\t\t\t\tlet oldestUri = null;\n\t\t\t\tfor (const uri in languageModels) {\n\t\t\t\t\tconst languageModelInfo = languageModels[uri];\n\t\t\t\t\tif (languageModelInfo.cTime < oldestTime) {\n\t\t\t\t\t\toldestUri = uri;\n\t\t\t\t\t\toldestTime = languageModelInfo.cTime;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oldestUri) {\n\t\t\t\t\tdelete languageModels[oldestUri];\n\t\t\t\t\tnModels--;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn languageModel;\n\n\t\t},\n\t\tonDocumentRemoved(document: TextDocument) {\n\t\t\tconst uri = document.uri;\n\t\t\tif (languageModels[uri]) {\n\t\t\t\tdelete languageModels[uri];\n\t\t\t\tnModels--;\n\t\t\t}\n\t\t},\n\t\tdispose() {\n\t\t\tif (typeof cleanupInterval !== 'undefined') {\n\t\t\t\tclearInterval(cleanupInterval);\n\t\t\t\tcleanupInterval = undefined;\n\t\t\t\tlanguageModels = {};\n\t\t\t\tnModels = 0;\n\t\t\t}\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createConnection, Connection, Disposable } from 'vscode-languageserver/node';\nimport { formatError } from '../utils/runner';\nimport { RuntimeEnvironment, startServer } from '../cssServer';\nimport { getNodeFSRequestService } from './nodeFs';\n\n// Create a connection for the server.\nconst connection: Connection = createConnection();\n\nconsole.log = connection.console.log.bind(connection.console);\nconsole.error = connection.console.error.bind(connection.console);\n\nprocess.on('unhandledRejection', (e: any) => {\n\tconnection.console.error(formatError(`Unhandled exception`, e));\n});\n\nconst runtime: RuntimeEnvironment = {\n\ttimer: {\n\t\tsetImmediate(callback: (...args: any[]) => void, ...args: any[]): Disposable {\n\t\t\tconst handle = setImmediate(callback, ...args);\n\t\t\treturn { dispose: () => clearImmediate(handle) };\n\t\t},\n\t\tsetTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): Disposable {\n\t\t\tconst handle = setTimeout(callback, ms, ...args);\n\t\t\treturn { dispose: () => clearTimeout(handle) };\n\t\t}\n\t},\n\tfile: getNodeFSRequestService()\n};\n\nstartServer(connection, runtime);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RequestService } from '../requests';\nimport { URI as Uri } from 'vscode-uri';\n\nimport * as fs from 'fs';\nimport { FileType } from 'vscode-css-languageservice';\n\nexport function getNodeFSRequestService(): RequestService {\n\tfunction ensureFileUri(location: string) {\n\t\tif (!location.startsWith('file://')) {\n\t\t\tthrow new Error('fileRequestService can only handle file URLs');\n\t\t}\n\t}\n\treturn {\n\t\tgetContent(location: string, encoding?: BufferEncoding) {\n\t\t\tensureFileUri(location);\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tconst uri = Uri.parse(location);\n\t\t\t\tfs.readFile(uri.fsPath, encoding, (err, buf) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn e(err);\n\t\t\t\t\t}\n\t\t\t\t\tc(buf.toString());\n\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\tstat(location: string) {\n\t\t\tensureFileUri(location);\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tconst uri = Uri.parse(location);\n\t\t\t\tfs.stat(uri.fsPath, (err, stats) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\t\t\t\treturn c({ type: FileType.Unknown, ctime: -1, mtime: -1, size: -1 });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn e(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet type = FileType.Unknown;\n\t\t\t\t\tif (stats.isFile()) {\n\t\t\t\t\t\ttype = FileType.File;\n\t\t\t\t\t} else if (stats.isDirectory()) {\n\t\t\t\t\t\ttype = FileType.Directory;\n\t\t\t\t\t} else if (stats.isSymbolicLink()) {\n\t\t\t\t\t\ttype = FileType.SymbolicLink;\n\t\t\t\t\t}\n\n\t\t\t\t\tc({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tctime: stats.ctime.getTime(),\n\t\t\t\t\t\tmtime: stats.mtime.getTime(),\n\t\t\t\t\t\tsize: stats.size\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\treadDirectory(location: string) {\n\t\t\tensureFileUri(location);\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tconst path = Uri.parse(location).fsPath;\n\n\t\t\t\tfs.readdir(path, { withFileTypes: true }, (err, children) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn e(err);\n\t\t\t\t\t}\n\t\t\t\t\tc(children.map(stat => {\n\t\t\t\t\t\tif (stat.isSymbolicLink()) {\n\t\t\t\t\t\t\treturn [stat.name, FileType.SymbolicLink];\n\t\t\t\t\t\t} else if (stat.isDirectory()) {\n\t\t\t\t\t\t\treturn [stat.name, FileType.Directory];\n\t\t\t\t\t\t} else if (stat.isFile()) {\n\t\t\t\t\t\t\treturn [stat.name, FileType.File];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [stat.name, FileType.Unknown];\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RequestType, Connection } from 'vscode-languageserver';\nimport { RuntimeEnvironment } from './cssServer';\n\nexport namespace FsContentRequest {\n\texport const type: RequestType<{ uri: string; encoding?: string }, string, any> = new RequestType('fs/content');\n}\nexport namespace FsStatRequest {\n\texport const type: RequestType<string, FileStat, any> = new RequestType('fs/stat');\n}\n\nexport namespace FsReadDirRequest {\n\texport const type: RequestType<string, [string, FileType][], any> = new RequestType('fs/readDir');\n}\n\nexport enum FileType {\n\t/**\n\t * The file type is unknown.\n\t */\n\tUnknown = 0,\n\t/**\n\t * A regular file.\n\t */\n\tFile = 1,\n\t/**\n\t * A directory.\n\t */\n\tDirectory = 2,\n\t/**\n\t * A symbolic link to a file.\n\t */\n\tSymbolicLink = 64\n}\nexport interface FileStat {\n\t/**\n\t * The type of the file, e.g. is a regular file, a directory, or symbolic link\n\t * to a file.\n\t */\n\ttype: FileType;\n\t/**\n\t * The creation timestamp in milliseconds elapsed since January 1, 1970 00:00:00 UTC.\n\t */\n\tctime: number;\n\t/**\n\t * The modification timestamp in milliseconds elapsed since January 1, 1970 00:00:00 UTC.\n\t */\n\tmtime: number;\n\t/**\n\t * The size in bytes.\n\t */\n\tsize: number;\n}\n\nexport interface RequestService {\n\tgetContent(uri: string, encoding?: string): Promise<string>;\n\n\tstat(uri: string): Promise<FileStat>;\n\treadDirectory(uri: string): Promise<[string, FileType][]>;\n}\n\n\nexport function getRequestService(handledSchemas: string[], connection: Connection, runtime: RuntimeEnvironment): RequestService {\n\tconst builtInHandlers: { [protocol: string]: RequestService | undefined } = {};\n\tfor (const protocol of handledSchemas) {\n\t\tif (protocol === 'file') {\n\t\t\tbuiltInHandlers[protocol] = runtime.file;\n\t\t} else if (protocol === 'http' || protocol === 'https') {\n\t\t\tbuiltInHandlers[protocol] = runtime.http;\n\t\t}\n\t}\n\treturn {\n\t\tasync stat(uri: string): Promise<FileStat> {\n\t\t\tconst handler = builtInHandlers[getScheme(uri)];\n\t\t\tif (handler) {\n\t\t\t\treturn handler.stat(uri);\n\t\t\t}\n\t\t\tconst res = await connection.sendRequest(FsStatRequest.type, uri.toString());\n\t\t\treturn res;\n\t\t},\n\t\treadDirectory(uri: string): Promise<[string, FileType][]> {\n\t\t\tconst handler = builtInHandlers[getScheme(uri)];\n\t\t\tif (handler) {\n\t\t\t\treturn handler.readDirectory(uri);\n\t\t\t}\n\t\t\treturn connection.sendRequest(FsReadDirRequest.type, uri.toString());\n\t\t},\n\t\tgetContent(uri: string, encoding?: string): Promise<string> {\n\t\t\tconst handler = builtInHandlers[getScheme(uri)];\n\t\t\tif (handler) {\n\t\t\t\treturn handler.getContent(uri, encoding);\n\t\t\t}\n\t\t\treturn connection.sendRequest(FsContentRequest.type, { uri: uri.toString(), encoding });\n\t\t}\n\t};\n}\n\nfunction getScheme(uri: string) {\n\treturn uri.substr(0, uri.indexOf(':'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DocumentContext } from 'vscode-css-languageservice';\nimport { endsWith, startsWith } from '../utils/strings';\nimport { WorkspaceFolder } from 'vscode-languageserver';\nimport { Utils, URI } from 'vscode-uri';\n\nexport function getDocumentContext(documentUri: string, workspaceFolders: WorkspaceFolder[]): DocumentContext {\n\tfunction getRootFolder(): string | undefined {\n\t\tfor (const folder of workspaceFolders) {\n\t\t\tlet folderURI = folder.uri;\n\t\t\tif (!endsWith(folderURI, '/')) {\n\t\t\t\tfolderURI = folderURI + '/';\n\t\t\t}\n\t\t\tif (startsWith(documentUri, folderURI)) {\n\t\t\t\treturn folderURI;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\treturn {\n\t\tresolveReference: (ref: string, base = documentUri) => {\n\t\t\tif (ref[0] === '/') { // resolve absolute path against the current workspace folder\n\t\t\t\tconst folderUri = getRootFolder();\n\t\t\t\tif (folderUri) {\n\t\t\t\t\treturn folderUri + ref.substring(1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst baseUri = URI.parse(base);\n\t\t\tconst baseUriDir = baseUri.path.endsWith('/') ? baseUri : Utils.dirname(baseUri);\n\t\t\treturn Utils.resolvePath(baseUriDir, ref).toString(true);\n\t\t},\n\t};\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResponseError, CancellationToken, LSPErrorCodes } from 'vscode-languageserver';\nimport { RuntimeEnvironment } from '../cssServer';\n\nexport function formatError(message: string, err: any): string {\n\tif (err instanceof Error) {\n\t\tconst error = <Error>err;\n\t\treturn `${message}: ${error.message}\\n${error.stack}`;\n\t} else if (typeof err === 'string') {\n\t\treturn `${message}: ${err}`;\n\t} else if (err) {\n\t\treturn `${message}: ${err.toString()}`;\n\t}\n\treturn message;\n}\n\nexport function runSafeAsync<T>(runtime: RuntimeEnvironment, func: () => Thenable<T>, errorVal: T, errorMessage: string, token: CancellationToken): Thenable<T | ResponseError<any>> {\n\treturn new Promise<T | ResponseError<any>>((resolve) => {\n\t\truntime.timer.setImmediate(() => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\tresolve(cancelValue());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn func().then(result => {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tresolve(cancelValue());\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t}, e => {\n\t\t\t\tconsole.error(formatError(errorMessage, e));\n\t\t\t\tresolve(errorVal);\n\t\t\t});\n\t\t});\n\t});\n}\n\nfunction cancelValue<E>() {\n\treturn new ResponseError<E>(LSPErrorCodes.RequestCancelled, 'Request cancelled');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.lastIndexOf(needle) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, Connection, Diagnostic, Disposable, DocumentDiagnosticParams, DocumentDiagnosticReport, DocumentDiagnosticReportKind, TextDocuments } from 'vscode-languageserver';\nimport { TextDocument } from 'vscode-css-languageservice';\nimport { formatError, runSafeAsync } from './runner';\nimport { RuntimeEnvironment } from '../cssServer';\n\nexport type Validator = (textDocument: TextDocument) => Promise<Diagnostic[]>;\nexport type DiagnosticsSupport = {\n\tdispose(): void;\n\trequestRefresh(): void;\n};\n\nexport function registerDiagnosticsPushSupport(documents: TextDocuments<TextDocument>, connection: Connection, runtime: RuntimeEnvironment, validate: Validator): DiagnosticsSupport {\n\n\tconst pendingValidationRequests: { [uri: string]: Disposable } = {};\n\tconst validationDelayMs = 500;\n\n\tconst disposables: Disposable[] = [];\n\n\t// The content of a text document has changed. This event is emitted\n\t// when the text document first opened or when its content has changed.\n\tdocuments.onDidChangeContent(change => {\n\t\ttriggerValidation(change.document);\n\t}, undefined, disposables);\n\n\t// a document has closed: clear all diagnostics\n\tdocuments.onDidClose(event => {\n\t\tcleanPendingValidation(event.document);\n\t\tconnection.sendDiagnostics({ uri: event.document.uri, diagnostics: [] });\n\t}, undefined, disposables);\n\n\tfunction cleanPendingValidation(textDocument: TextDocument): void {\n\t\tconst request = pendingValidationRequests[textDocument.uri];\n\t\tif (request) {\n\t\t\trequest.dispose();\n\t\t\tdelete pendingValidationRequests[textDocument.uri];\n\t\t}\n\t}\n\n\tfunction triggerValidation(textDocument: TextDocument): void {\n\t\tcleanPendingValidation(textDocument);\n\t\tconst request = pendingValidationRequests[textDocument.uri] = runtime.timer.setTimeout(async () => {\n\t\t\tif (request === pendingValidationRequests[textDocument.uri]) {\n\t\t\t\ttry {\n\t\t\t\t\tconst diagnostics = await validate(textDocument);\n\t\t\t\t\tif (request === pendingValidationRequests[textDocument.uri]) {\n\t\t\t\t\t\tconnection.sendDiagnostics({ uri: textDocument.uri, diagnostics });\n\t\t\t\t\t}\n\t\t\t\t\tdelete pendingValidationRequests[textDocument.uri];\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconnection.console.error(formatError(`Error while validating ${textDocument.uri}`, e));\n\t\t\t\t}\n\t\t\t}\n\t\t}, validationDelayMs);\n\t}\n\n\treturn {\n\t\trequestRefresh: () => {\n\t\t\tdocuments.all().forEach(triggerValidation);\n\t\t},\n\t\tdispose: () => {\n\t\t\tdisposables.forEach(d => d.dispose());\n\t\t\tdisposables.length = 0;\n\t\t\tconst keys = Object.keys(pendingValidationRequests);\n\t\t\tfor (const key of keys) {\n\t\t\t\tpendingValidationRequests[key].dispose();\n\t\t\t\tdelete pendingValidationRequests[key];\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function registerDiagnosticsPullSupport(documents: TextDocuments<TextDocument>, connection: Connection, runtime: RuntimeEnvironment, validate: Validator): DiagnosticsSupport {\n\n\tfunction newDocumentDiagnosticReport(diagnostics: Diagnostic[]): DocumentDiagnosticReport {\n\t\treturn {\n\t\t\tkind: DocumentDiagnosticReportKind.Full,\n\t\t\titems: diagnostics\n\t\t};\n\t}\n\n\tconst registration = connection.languages.diagnostics.on(async (params: DocumentDiagnosticParams, token: CancellationToken) => {\n\t\treturn runSafeAsync(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\treturn newDocumentDiagnosticReport(await validate(document));\n\t\t\t}\n\t\t\treturn newDocumentDiagnosticReport([]);\n\n\t\t}, newDocumentDiagnosticReport([]), `Error while computing diagnostics for ${params.textDocument.uri}`, token);\n\t});\n\n\tfunction requestRefresh(): void {\n\t\tconnection.languages.diagnostics.refresh();\n\t}\n\n\treturn {\n\t\trequestRefresh,\n\t\tdispose: () => {\n\t\t\tregistration.dispose();\n\t\t}\n\t};\n\n}\n"],"names":["connection","runtime","documents","TextDocuments","TextDocument","listen","stylesheets","getLanguageModelCache","document","getLanguageService","parseStylesheet","onDidClose","e","onDocumentRemoved","onShutdown","dispose","workspaceFolders","diagnosticsSupport","scopedSettingsSupport","foldingRangeLimit","Number","MAX_VALUE","formatterMaxNumberOfEdits","dataProvidersReady","Promise","resolve","languageServices","notReady","reject","requestService","getContent","stat","readDirectory","service","languageId","console","log","onInitialize","params","initializationOptions","getClientCapability","name","def","keys","split","c","capabilities","i","length","hasOwnProperty","Array","isArray","rootPath","push","uri","URI","file","toString","getRequestService","handledSchemas","snippetSupport","customCapabilities","rangeFormatting","editLimit","css","getCSSLanguageService","fileSystemProvider","clientCapabilities","scss","getSCSSLanguageService","less","getLESSLanguageService","supportsDiagnosticPull","undefined","registerDiagnosticsPushSupport","validateTextDocument","registerDiagnosticsPullSupport","textDocumentSync","TextDocumentSyncKind","Incremental","completionProvider","resolveProvider","triggerCharacters","hoverProvider","documentSymbolProvider","referencesProvider","definitionProvider","documentHighlightProvider","documentLinkProvider","codeActionProvider","renameProvider","colorProvider","foldingRangeProvider","selectionRangeProvider","diagnosticProvider","documentSelector","interFileDependencies","workspaceDiagnostics","documentRangeFormattingProvider","provideFormatter","documentFormattingProvider","documentSettings","getDocumentSettings","textDocument","promise","configRequestParam","items","scopeUri","section","sendRequest","ConfigurationRequest","type","then","s","async","settingsPromise","settings","all","stylesheet","get","doValidation","onFormat","range","options","edits","format","getFullRange","newText","applyEdits","TextEdit","replace","onDidChangeConfiguration","change","configure","requestRefresh","updateConfiguration","onCompletion","textDocumentPosition","token","runSafeAsync","styleSheet","documentContext","getDocumentContext","doComplete2","position","completion","onHover","doHover","hover","onDocumentSymbol","documentSymbolParams","findDocumentSymbols2","onDefinition","documentDefinitionParams","findDefinition","onDocumentHighlight","documentHighlightParams","findDocumentHighlights","onDocumentLinks","documentLinkParams","findDocumentLinks2","onReferences","referenceParams","findReferences","onCodeAction","codeActionParams","doCodeActions","context","onDocumentColor","findDocumentColors","onColorPresentation","getColorPresentations","color","onRenameRequest","renameParameters","doRename","newName","onFoldingRanges","getFoldingRanges","rangeLimit","onSelectionRanges","positions","getSelectionRanges","onDocumentRangeFormatting","formatParams","onDocumentFormatting","onNotification","CustomDataChangedNotification","dataPaths","fetchDataProviders","customDataProviders","lang","setDataProviders","Range","create","Position","positionAt","getText","NotificationType","providers","map","p","source","rawData","JSON","parse","err","newCSSDataProvider","version","properties","atDirectives","pseudoClasses","pseudoElements","parseCSSData","maxEntries","cleanupIntervalTimeInSec","cleanupInterval","languageModels","nModels","setInterval","cutoffTime","Date","now","uris","Object","cTime","languageModelInfo","languageModel","oldestTime","oldestUri","clearInterval","createConnection","bind","error","process","on","formatError","timer","setImmediate","callback","args","handle","clearImmediate","setTimeout","ms","clearTimeout","getNodeFSRequestService","startServer","ensureFileUri","location","startsWith","Error","encoding","fs","readFile","fsPath","buf","stats","code","FileType","Unknown","ctime","mtime","size","isFile","File","isDirectory","Directory","isSymbolicLink","SymbolicLink","getTime","path","readdir","withFileTypes","children","builtInHandlers","protocol","http","handler","getScheme","FsStatRequest","FsReadDirRequest","FsContentRequest","substr","indexOf","RequestType","documentUri","resolveReference","ref","base","folderUri","folder","folderURI","endsWith","getRootFolder","substring","baseUri","baseUriDir","Utils","dirname","resolvePath","func","errorVal","errorMessage","isCancellationRequested","result","cancelValue","message","stack","ResponseError","LSPErrorCodes","RequestCancelled","haystack","needle","diff","lastIndexOf","validate","pendingValidationRequests","disposables","cleanPendingValidation","request","triggerValidation","diagnostics","sendDiagnostics","onDidChangeContent","event","forEach","d","key","newDocumentDiagnosticReport","kind","DocumentDiagnosticReportKind","Full","registration","languages","refresh"],"sourceRoot":""}