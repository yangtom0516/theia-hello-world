{"version":3,"file":"extension.js","mappings":"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","sources":["webpack://references-view/./src/calls/index.ts","webpack://references-view/./src/calls/model.ts","webpack://references-view/./src/extension.ts","webpack://references-view/./src/highlights.ts","webpack://references-view/./src/navigation.ts","webpack://references-view/./src/references/index.ts","webpack://references-view/./src/references/model.ts","webpack://references-view/./src/tree.ts","webpack://references-view/./src/types/index.ts","webpack://references-view/./src/types/model.ts","webpack://references-view/./src/utils.ts","webpack://references-view/external commonjs \"vscode\"","webpack://references-view/webpack/bootstrap","webpack://references-view/webpack/startup"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { CallItem, CallsDirection, CallsTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichCallsDirection(context.workspaceState, CallsDirection.Incoming);\n\n\tfunction showCallHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new CallsTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setCallsDirection(value: CallsDirection, anchor: CallItem | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: CallsTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof CallItem) {\n\t\t\tnewInput = new CallsTreeInput(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (oldInput instanceof CallsTreeInput) {\n\t\t\tnewInput = new CallsTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showCallHierarchy', showCallHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showOutgoingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Outgoing, item)),\n\t\tvscode.commands.registerCommand('references-view.showIncomingCalls', (item: CallItem | unknown) => setCallsDirection(CallsDirection.Incoming, item)),\n\t\tvscode.commands.registerCommand('references-view.removeCallItem', removeCallItem)\n\t);\n}\n\nfunction removeCallItem(item: CallItem | unknown): void {\n\tif (item instanceof CallItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichCallsDirection {\n\n\tprivate static _key = 'references-view.callHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<'showIncoming' | 'showOutgoing'>('references-view.callHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: CallsDirection = CallsDirection.Outgoing,\n\t) {\n\t\tconst raw = _mem.get<number>(RichCallsDirection._key);\n\t\tif (typeof raw === 'number' && raw >= 0 && raw <= 1) {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: CallsDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(this._value === CallsDirection.Incoming ? 'showIncoming' : 'showOutgoing');\n\t\tthis._mem.update(RichCallsDirection._key, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { asResourceUrl, del, getThemeIcon, tail } from '../utils';\n\nexport class CallsTreeInput implements SymbolTreeInput<CallItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'callHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: CallsDirection,\n\t) {\n\t\tthis.title = direction === CallsDirection.Incoming\n\t\t\t? vscode.l10n.t('Callers Of')\n\t\t\t: vscode.l10n.t('Calls From');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.CallHierarchyItem[]>('vscode.prepareCallHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new CallsModel(this.direction, items ?? []);\n\t\tconst provider = new CallItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? vscode.l10n.t('No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): CallsTreeInput {\n\t\treturn new CallsTreeInput(location, this.direction);\n\t}\n}\n\n\nexport const enum CallsDirection {\n\tIncoming,\n\tOutgoing\n}\n\n\n\nexport class CallItem {\n\n\tchildren?: CallItem[];\n\n\tconstructor(\n\t\treadonly model: CallsModel,\n\t\treadonly item: vscode.CallHierarchyItem,\n\t\treadonly parent: CallItem | undefined,\n\t\treadonly locations: vscode.Location[] | undefined\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass CallsModel implements SymbolItemNavigation<CallItem>, SymbolItemEditorHighlights<CallItem>, SymbolItemDragAndDrop<CallItem> {\n\n\treadonly roots: CallItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<CallsModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: CallsDirection, items: vscode.CallHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new CallItem(this, item, undefined, undefined));\n\t}\n\n\tprivate async _resolveCalls(call: CallItem): Promise<CallItem[]> {\n\t\tif (this.direction === CallsDirection.Incoming) {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyIncomingCall[]>('vscode.provideIncomingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.from, call, item.fromRanges.map(range => new vscode.Location(item.from.uri, range)))) : [];\n\t\t} else {\n\t\t\tconst calls = await vscode.commands.executeCommand<vscode.CallHierarchyOutgoingCall[]>('vscode.provideOutgoingCalls', call.item);\n\t\t\treturn calls ? calls.map(item => new CallItem(this, item.to, call, item.fromRanges.map(range => new vscode.Location(call.item.uri, range)))) : [];\n\t\t}\n\t}\n\n\tasync getCallChildren(call: CallItem): Promise<CallItem[]> {\n\t\tif (!call.children) {\n\t\t\tcall.children = await this._resolveCalls(call);\n\t\t}\n\t\treturn call.children;\n\t}\n\n\t// -- navigation\n\n\tlocation(item: CallItem) {\n\t\treturn new vscode.Location(item.item.uri, item.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): CallItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: CallItem): CallItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: CallItem): CallItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: CallItem, fwd: boolean): CallItem | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- dnd\n\n\tgetDragUri(item: CallItem): vscode.Uri | undefined {\n\t\treturn asResourceUrl(item.item.uri, item.item.range);\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(item: CallItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tif (!item.locations) {\n\t\t\treturn item.item.uri.toString() === uri.toString() ? [item.item.selectionRange] : undefined;\n\t\t}\n\t\treturn item.locations\n\t\t\t.filter(loc => loc.uri.toString() === uri.toString())\n\t\t\t.map(loc => loc.range);\n\t}\n\n\tremove(item: CallItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass CallItemDataProvider implements vscode.TreeDataProvider<CallItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<CallItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: CallsModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof CallItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: CallItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.tooltip = item.label && element.item.detail ? `${item.label} - ${element.item.detail}` : item.label ? `${item.label}` : element.item.detail;\n\t\titem.contextValue = 'call-item';\n\t\titem.iconPath = getThemeIcon(element.item.kind);\n\n\t\ttype OpenArgs = [vscode.Uri, vscode.TextDocumentShowOptions];\n\t\tlet openArgs: OpenArgs;\n\n\t\tif (element.model.direction === CallsDirection.Outgoing) {\n\n\t\t\topenArgs = [element.item.uri, { selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) }];\n\n\t\t} else {\n\t\t\t// incoming call -> reveal first call instead of caller\n\t\t\tlet firstLoctionStart: vscode.Position | undefined;\n\t\t\tif (element.locations) {\n\t\t\t\tfor (const loc of element.locations) {\n\t\t\t\t\tif (loc.uri.toString() === element.item.uri.toString()) {\n\t\t\t\t\t\tfirstLoctionStart = firstLoctionStart?.isBefore(loc.range.start) ? firstLoctionStart : loc.range.start;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!firstLoctionStart) {\n\t\t\t\tfirstLoctionStart = element.item.selectionRange.start;\n\t\t\t}\n\t\t\topenArgs = [element.item.uri, { selection: new vscode.Range(firstLoctionStart, firstLoctionStart) }];\n\t\t}\n\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: vscode.l10n.t('Open Call'),\n\t\t\targuments: openArgs\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: CallItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getCallChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: CallItem) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport * as calls from './calls';\nimport * as references from './references';\nimport { SymbolTree, SymbolTreeInput } from './references-view';\nimport { SymbolsTree } from './tree';\nimport * as types from './types';\n\nexport function activate(context: vscode.ExtensionContext): SymbolTree {\n\n\tconst tree = new SymbolsTree();\n\n\treferences.register(tree, context);\n\tcalls.register(tree, context);\n\ttypes.register(tree, context);\n\n\tfunction setInput(input: SymbolTreeInput<unknown>) {\n\t\ttree.setInput(input);\n\t}\n\n\tfunction getInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn tree.getInput();\n\t}\n\n\treturn { setInput, getInput };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemEditorHighlights } from './references-view';\n\nexport class EditorHighlights<T> {\n\n\tprivate readonly _decorationType = vscode.window.createTextEditorDecorationType({\n\t\tbackgroundColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t\trangeBehavior: vscode.DecorationRangeBehavior.ClosedClosed,\n\t\toverviewRulerLane: vscode.OverviewRulerLane.Center,\n\t\toverviewRulerColor: new vscode.ThemeColor('editor.findMatchHighlightBackground'),\n\t});\n\n\tprivate readonly disposables: vscode.Disposable[] = [];\n\tprivate readonly _ignore = new Set<string>();\n\n\tconstructor(private readonly _view: vscode.TreeView<T>, private readonly _delegate: SymbolItemEditorHighlights<T>) {\n\t\tthis.disposables.push(\n\t\t\tvscode.workspace.onDidChangeTextDocument(e => this._ignore.add(e.document.uri.toString())),\n\t\t\tvscode.window.onDidChangeActiveTextEditor(() => _view.visible && this.update()),\n\t\t\t_view.onDidChangeVisibility(e => e.visible ? this._show() : this._hide()),\n\t\t\t_view.onDidChangeSelection(() => {\n\t\t\t\tif (_view.visible) {\n\t\t\t\t\tthis.update();\n\t\t\t\t}\n\t\t\t})\n\t\t);\n\t\tthis._show();\n\t}\n\n\tdispose() {\n\t\tvscode.Disposable.from(...this.disposables).dispose();\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tprivate _show(): void {\n\t\tconst { activeTextEditor: editor } = vscode.window;\n\t\tif (!editor || !editor.viewColumn) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._ignore.has(editor.document.uri.toString())) {\n\t\t\treturn;\n\t\t}\n\t\tconst [anchor] = this._view.selection;\n\t\tif (!anchor) {\n\t\t\treturn;\n\t\t}\n\t\tconst ranges = this._delegate.getEditorHighlights(anchor, editor.document.uri);\n\t\tif (ranges) {\n\t\t\teditor.setDecorations(this._decorationType, ranges);\n\t\t}\n\t}\n\n\tprivate _hide(): void {\n\t\tfor (const editor of vscode.window.visibleTextEditors) {\n\t\t\teditor.setDecorations(this._decorationType, []);\n\t\t}\n\t}\n\n\tupdate(): void {\n\t\tthis._hide();\n\t\tthis._show();\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemNavigation } from './references-view';\nimport { ContextKey } from './utils';\n\nexport class Navigation {\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxCanNavigate = new ContextKey<boolean>('references-view.canNavigate');\n\n\tprivate _delegate?: SymbolItemNavigation<unknown>;\n\n\tconstructor(private readonly _view: vscode.TreeView<unknown>) {\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.next', () => this.next(false)),\n\t\t\tvscode.commands.registerCommand('references-view.prev', () => this.previous(false)),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t}\n\n\tupdate(delegate: SymbolItemNavigation<unknown> | undefined) {\n\t\tthis._delegate = delegate;\n\t\tthis._ctxCanNavigate.set(Boolean(this._delegate));\n\t}\n\n\tprivate _anchor(): undefined | unknown {\n\t\tif (!this._delegate) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst [sel] = this._view.selection;\n\t\tif (sel) {\n\t\t\treturn sel;\n\t\t}\n\t\tif (!vscode.window.activeTextEditor) {\n\t\t\treturn undefined;\n\t\t}\n\t\treturn this._delegate.nearest(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active);\n\t}\n\n\tprivate _open(loc: vscode.Location, preserveFocus: boolean) {\n\t\tvscode.commands.executeCommand('vscode.open', loc.uri, {\n\t\t\tselection: new vscode.Selection(loc.range.start, loc.range.start),\n\t\t\tpreserveFocus\n\t\t});\n\t}\n\n\tprevious(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.previous(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n\n\tnext(preserveFocus: boolean): void {\n\t\tif (!this._delegate) {\n\t\t\treturn;\n\t\t}\n\t\tconst item = this._anchor();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\tconst newItem = this._delegate.next(item);\n\t\tconst newLocation = this._delegate.location(newItem);\n\t\tif (newLocation) {\n\t\t\tthis._view.reveal(newItem, { select: true, focus: true });\n\t\t\tthis._open(newLocation, preserveFocus);\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { FileItem, ReferenceItem, ReferencesModel, ReferencesTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tfunction findLocations(title: string, command: string) {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new ReferencesTreeInput(title, new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), command);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.findReferences', () => findLocations('References', 'vscode.executeReferenceProvider')),\n\t\tvscode.commands.registerCommand('references-view.findImplementations', () => findLocations('Implementations', 'vscode.executeImplementationProvider')),\n\t\t// --- legacy name\n\t\tvscode.commands.registerCommand('references-view.find', (...args: any[]) => vscode.commands.executeCommand('references-view.findReferences', ...args)),\n\t\tvscode.commands.registerCommand('references-view.removeReferenceItem', removeReferenceItem),\n\t\tvscode.commands.registerCommand('references-view.copy', copyCommand),\n\t\tvscode.commands.registerCommand('references-view.copyAll', copyAllCommand),\n\t\tvscode.commands.registerCommand('references-view.copyPath', copyPathCommand),\n\t);\n\n\n\t// --- references.preferredLocation setting\n\n\tlet showReferencesDisposable: vscode.Disposable | undefined;\n\tconst config = 'references.preferredLocation';\n\tfunction updateShowReferences(event?: vscode.ConfigurationChangeEvent) {\n\t\tif (event && !event.affectsConfiguration(config)) {\n\t\t\treturn;\n\t\t}\n\t\tconst value = vscode.workspace.getConfiguration().get<string>(config);\n\n\t\tshowReferencesDisposable?.dispose();\n\t\tshowReferencesDisposable = undefined;\n\n\t\tif (value === 'view') {\n\t\t\tshowReferencesDisposable = vscode.commands.registerCommand('editor.action.showReferences', async (uri: vscode.Uri, position: vscode.Position, locations: vscode.Location[]) => {\n\t\t\t\tconst input = new ReferencesTreeInput(vscode.l10n.t('References'), new vscode.Location(uri, position), 'vscode.executeReferenceProvider', locations);\n\t\t\t\ttree.setInput(input);\n\t\t\t});\n\t\t}\n\t}\n\tcontext.subscriptions.push(vscode.workspace.onDidChangeConfiguration(updateShowReferences));\n\tcontext.subscriptions.push({ dispose: () => showReferencesDisposable?.dispose() });\n\tupdateShowReferences();\n}\n\nconst copyAllCommand = async (item: ReferenceItem | FileItem | unknown) => {\n\tif (item instanceof ReferenceItem) {\n\t\tcopyCommand(item.file.model);\n\t} else if (item instanceof FileItem) {\n\t\tcopyCommand(item.model);\n\t}\n};\n\nfunction removeReferenceItem(item: FileItem | ReferenceItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\titem.remove();\n\t} else if (item instanceof ReferenceItem) {\n\t\titem.remove();\n\t}\n}\n\n\nasync function copyCommand(item: ReferencesModel | ReferenceItem | FileItem | unknown) {\n\tlet val: string | undefined;\n\tif (item instanceof ReferencesModel) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof ReferenceItem) {\n\t\tval = await item.asCopyText();\n\t} else if (item instanceof FileItem) {\n\t\tval = await item.asCopyText();\n\t}\n\tif (val) {\n\t\tawait vscode.env.clipboard.writeText(val);\n\t}\n}\n\nasync function copyPathCommand(item: FileItem | unknown) {\n\tif (item instanceof FileItem) {\n\t\tif (item.uri.scheme === 'file') {\n\t\t\tvscode.env.clipboard.writeText(item.uri.fsPath);\n\t\t} else {\n\t\t\tvscode.env.clipboard.writeText(item.uri.toString(true));\n\t\t}\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput, SymbolTreeModel } from '../references-view';\nimport { asResourceUrl, del, getPreviewChunks, tail } from '../utils';\n\nexport class ReferencesTreeInput implements SymbolTreeInput<FileItem | ReferenceItem> {\n\n\treadonly contextValue: string;\n\n\tconstructor(\n\t\treadonly title: string,\n\t\treadonly location: vscode.Location,\n\t\tprivate readonly _command: string,\n\t\tprivate readonly _result?: vscode.Location[] | vscode.LocationLink[]\n\t) {\n\t\tthis.contextValue = _command;\n\t}\n\n\tasync resolve(): Promise<SymbolTreeModel<FileItem | ReferenceItem> | undefined> {\n\n\t\tlet model: ReferencesModel;\n\t\tif (this._result) {\n\t\t\tmodel = new ReferencesModel(this._result);\n\t\t} else {\n\t\t\tconst resut = await Promise.resolve(vscode.commands.executeCommand<vscode.Location[] | vscode.LocationLink[]>(this._command, this.location.uri, this.location.range.start));\n\t\t\tmodel = new ReferencesModel(resut ?? []);\n\t\t}\n\n\t\tif (model.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst provider = new ReferencesTreeDataProvider(model);\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.message; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose(): void {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): ReferencesTreeInput {\n\t\treturn new ReferencesTreeInput(this.title, location, this._command);\n\t}\n}\n\nexport class ReferencesModel implements SymbolItemNavigation<FileItem | ReferenceItem>, SymbolItemEditorHighlights<FileItem | ReferenceItem>, SymbolItemDragAndDrop<FileItem | ReferenceItem> {\n\n\tprivate _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\treadonly items: FileItem[] = [];\n\n\tconstructor(locations: vscode.Location[] | vscode.LocationLink[]) {\n\t\tlet last: FileItem | undefined;\n\t\tfor (const item of locations.sort(ReferencesModel._compareLocations)) {\n\t\t\tconst loc = item instanceof vscode.Location\n\t\t\t\t? item\n\t\t\t\t: new vscode.Location(item.targetUri, item.targetRange);\n\n\t\t\tif (!last || ReferencesModel._compareUriIgnoreFragment(last.uri, loc.uri) !== 0) {\n\t\t\t\tlast = new FileItem(loc.uri.with({ fragment: '' }), [], this);\n\t\t\t\tthis.items.push(last);\n\t\t\t}\n\t\t\tlast.references.push(new ReferenceItem(loc, last));\n\t\t}\n\t}\n\n\tprivate static _compareUriIgnoreFragment(a: vscode.Uri, b: vscode.Uri): number {\n\t\tconst aStr = a.with({ fragment: '' }).toString();\n\t\tconst bStr = b.with({ fragment: '' }).toString();\n\t\tif (aStr < bStr) {\n\t\t\treturn -1;\n\t\t} else if (aStr > bStr) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn 0;\n\t}\n\n\tprivate static _compareLocations(a: vscode.Location | vscode.LocationLink, b: vscode.Location | vscode.LocationLink): number {\n\t\tconst aUri = a instanceof vscode.Location ? a.uri : a.targetUri;\n\t\tconst bUri = b instanceof vscode.Location ? b.uri : b.targetUri;\n\t\tif (aUri.toString() < bUri.toString()) {\n\t\t\treturn -1;\n\t\t} else if (aUri.toString() > bUri.toString()) {\n\t\t\treturn 1;\n\t\t}\n\n\t\tconst aRange = a instanceof vscode.Location ? a.range : a.targetRange;\n\t\tconst bRange = b instanceof vscode.Location ? b.range : b.targetRange;\n\t\tif (aRange.start.isBefore(bRange.start)) {\n\t\t\treturn -1;\n\t\t} else if (aRange.start.isAfter(bRange.start)) {\n\t\t\treturn 1;\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t}\n\n\t// --- adapter\n\n\tget message() {\n\t\tif (this.items.length === 0) {\n\t\t\treturn vscode.l10n.t('No results.');\n\t\t}\n\t\tconst total = this.items.reduce((prev, cur) => prev + cur.references.length, 0);\n\t\tconst files = this.items.length;\n\t\tif (total === 1 && files === 1) {\n\t\t\treturn vscode.l10n.t('{0} result in {1} file', total, files);\n\t\t} else if (total === 1) {\n\t\t\treturn vscode.l10n.t('{0} result in {1} files', total, files);\n\t\t} else if (files === 1) {\n\t\t\treturn vscode.l10n.t('{0} results in {1} file', total, files);\n\t\t} else {\n\t\t\treturn vscode.l10n.t('{0} results in {1} files', total, files);\n\t\t}\n\t}\n\n\tlocation(item: FileItem | ReferenceItem) {\n\t\treturn item instanceof ReferenceItem\n\t\t\t? item.location\n\t\t\t: new vscode.Location(item.uri, item.references[0]?.location.range ?? new vscode.Position(0, 0));\n\t}\n\n\tnearest(uri: vscode.Uri, position: vscode.Position): FileItem | ReferenceItem | undefined {\n\n\t\tif (this.items.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\t// NOTE: this.items is sorted by location (uri/range)\n\t\tfor (const item of this.items) {\n\t\t\tif (item.uri.toString() === uri.toString()) {\n\t\t\t\t// (1) pick the item at the request position\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.contains(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// (2) pick the first item after or last before the request position\n\t\t\t\tlet lastBefore: ReferenceItem | undefined;\n\t\t\t\tfor (const ref of item.references) {\n\t\t\t\t\tif (ref.location.range.end.isAfter(position)) {\n\t\t\t\t\t\treturn ref;\n\t\t\t\t\t}\n\t\t\t\t\tlastBefore = ref;\n\t\t\t\t}\n\t\t\t\tif (lastBefore) {\n\t\t\t\t\treturn lastBefore;\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t// (3) pick the file with the longest common prefix\n\t\tlet best = 0;\n\t\tconst bestValue = ReferencesModel._prefixLen(this.items[best].toString(), uri.toString());\n\n\t\tfor (let i = 1; i < this.items.length; i++) {\n\t\t\tconst value = ReferencesModel._prefixLen(this.items[i].uri.toString(), uri.toString());\n\t\t\tif (value > bestValue) {\n\t\t\t\tbest = i;\n\t\t\t}\n\t\t}\n\n\t\treturn this.items[best].references[0];\n\t}\n\n\tprivate static _prefixLen(a: string, b: string): number {\n\t\tlet pos = 0;\n\t\twhile (pos < a.length && pos < b.length && a.charCodeAt(pos) === b.charCodeAt(pos)) {\n\t\t\tpos += 1;\n\t\t}\n\t\treturn pos;\n\t}\n\n\tnext(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, true) ?? item;\n\t}\n\n\tprevious(item: FileItem | ReferenceItem): FileItem | ReferenceItem {\n\t\treturn this._move(item, false) ?? item;\n\t}\n\n\tprivate _move(item: FileItem | ReferenceItem, fwd: boolean): ReferenceItem | void {\n\n\t\tconst delta = fwd ? +1 : -1;\n\n\t\tconst _move = (item: FileItem): FileItem => {\n\t\t\tconst idx = (this.items.indexOf(item) + delta + this.items.length) % this.items.length;\n\t\t\treturn this.items[idx];\n\t\t};\n\n\t\tif (item instanceof FileItem) {\n\t\t\tif (fwd) {\n\t\t\t\treturn _move(item).references[0];\n\t\t\t} else {\n\t\t\t\treturn tail(_move(item).references);\n\t\t\t}\n\t\t}\n\n\t\tif (item instanceof ReferenceItem) {\n\t\t\tconst idx = item.file.references.indexOf(item) + delta;\n\t\t\tif (idx < 0) {\n\t\t\t\treturn tail(_move(item.file).references);\n\t\t\t} else if (idx >= item.file.references.length) {\n\t\t\t\treturn _move(item.file).references[0];\n\t\t\t} else {\n\t\t\t\treturn item.file.references[idx];\n\t\t\t}\n\t\t}\n\t}\n\n\tgetEditorHighlights(_item: FileItem | ReferenceItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\tconst file = this.items.find(file => file.uri.toString() === uri.toString());\n\t\treturn file?.references.map(ref => ref.location.range);\n\t}\n\n\tremove(item: FileItem | ReferenceItem) {\n\t\tif (item instanceof FileItem) {\n\t\t\tdel(this.items, item);\n\t\t\tthis._onDidChange.fire(undefined);\n\t\t} else {\n\t\t\tdel(item.file.references, item);\n\t\t\tif (item.file.references.length === 0) {\n\t\t\t\tdel(this.items, item.file);\n\t\t\t\tthis._onDidChange.fire(undefined);\n\t\t\t} else {\n\t\t\t\tthis._onDidChange.fire(item.file);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = '';\n\t\tfor (const item of this.items) {\n\t\t\tresult += `${await item.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n\n\tgetDragUri(item: FileItem | ReferenceItem): vscode.Uri | undefined {\n\t\tif (item instanceof FileItem) {\n\t\t\treturn item.uri;\n\t\t} else {\n\t\t\treturn asResourceUrl(item.file.uri, item.location.range);\n\t\t}\n\t}\n}\n\nclass ReferencesTreeDataProvider implements vscode.TreeDataProvider<FileItem | ReferenceItem> {\n\n\tprivate readonly _listener: vscode.Disposable;\n\tprivate readonly _onDidChange = new vscode.EventEmitter<FileItem | ReferenceItem | undefined>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tconstructor(private readonly _model: ReferencesModel) {\n\t\tthis._listener = _model.onDidChangeTreeData(() => this._onDidChange.fire(undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._onDidChange.dispose();\n\t\tthis._listener.dispose();\n\t}\n\n\tasync getTreeItem(element: FileItem | ReferenceItem) {\n\t\tif (element instanceof FileItem) {\n\t\t\t// files\n\t\t\tconst result = new vscode.TreeItem(element.uri);\n\t\t\tresult.contextValue = 'file-item';\n\t\t\tresult.description = true;\n\t\t\tresult.iconPath = vscode.ThemeIcon.File;\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\t\treturn result;\n\n\t\t} else {\n\t\t\t// references\n\t\t\tconst { range } = element.location;\n\t\t\tconst doc = await element.getDocument(true);\n\t\t\tconst { before, inside, after } = getPreviewChunks(doc, range);\n\n\t\t\tconst label: vscode.TreeItemLabel = {\n\t\t\t\tlabel: before + inside + after,\n\t\t\t\thighlights: [[before.length, before.length + inside.length]]\n\t\t\t};\n\n\t\t\tconst result = new vscode.TreeItem(label);\n\t\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\t\tresult.contextValue = 'reference-item';\n\t\t\tresult.command = {\n\t\t\t\tcommand: 'vscode.open',\n\t\t\t\ttitle: vscode.l10n.t('Open Reference'),\n\t\t\t\targuments: [\n\t\t\t\t\telement.location.uri,\n\t\t\t\t\t{ selection: range.with({ end: range.start }) } satisfies vscode.TextDocumentShowOptions\n\t\t\t\t]\n\t\t\t};\n\t\t\treturn result;\n\t\t}\n\t}\n\n\tasync getChildren(element?: FileItem | ReferenceItem) {\n\t\tif (!element) {\n\t\t\treturn this._model.items;\n\t\t}\n\t\tif (element instanceof FileItem) {\n\t\t\treturn element.references;\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tgetParent(element: FileItem | ReferenceItem) {\n\t\treturn element instanceof ReferenceItem ? element.file : undefined;\n\t}\n}\n\nexport class FileItem {\n\n\tconstructor(\n\t\treadonly uri: vscode.Uri,\n\t\treadonly references: Array<ReferenceItem>,\n\t\treadonly model: ReferencesModel\n\t) { }\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tlet result = `${vscode.workspace.asRelativePath(this.uri)}\\n`;\n\t\tfor (const ref of this.references) {\n\t\t\tresult += `  ${await ref.asCopyText()}\\n`;\n\t\t}\n\t\treturn result;\n\t}\n}\n\nexport class ReferenceItem {\n\n\tprivate _document: Thenable<vscode.TextDocument> | undefined;\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly file: FileItem,\n\t) { }\n\n\tasync getDocument(warmUpNext?: boolean) {\n\t\tif (!this._document) {\n\t\t\tthis._document = vscode.workspace.openTextDocument(this.location.uri);\n\t\t}\n\t\tif (warmUpNext) {\n\t\t\t// load next document once this document has been loaded\n\t\t\tconst next = this.file.model.next(this.file);\n\t\t\tif (next instanceof FileItem && next !== this.file) {\n\t\t\t\tvscode.workspace.openTextDocument(next.uri);\n\t\t\t} else if (next instanceof ReferenceItem) {\n\t\t\t\tvscode.workspace.openTextDocument(next.location.uri);\n\t\t\t}\n\t\t}\n\t\treturn this._document;\n\t}\n\n\t// --- adapter\n\n\tremove(): void {\n\t\tthis.file.model.remove(this);\n\t}\n\n\tasync asCopyText() {\n\t\tconst doc = await this.getDocument();\n\t\tconst chunks = getPreviewChunks(doc, this.location.range, 21, false);\n\t\treturn `${this.location.range.start.line + 1}, ${this.location.range.start.character + 1}: ${chunks.before + chunks.inside + chunks.after}`;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { EditorHighlights } from './highlights';\nimport { Navigation } from './navigation';\nimport { SymbolItemDragAndDrop, SymbolTreeInput } from './references-view';\nimport { ContextKey, isValidRequestPosition, WordAnchor } from './utils';\n\n\nexport class SymbolsTree {\n\n\treadonly viewId = 'references-view.tree';\n\n\tprivate readonly _ctxIsActive = new ContextKey<boolean>('reference-list.isActive');\n\tprivate readonly _ctxHasResult = new ContextKey<boolean>('reference-list.hasResult');\n\tprivate readonly _ctxInputSource = new ContextKey<string>('reference-list.source');\n\n\tprivate readonly _history = new TreeInputHistory(this);\n\tprivate readonly _provider = new TreeDataProviderDelegate();\n\tprivate readonly _dnd = new TreeDndDelegate();\n\tprivate readonly _tree: vscode.TreeView<unknown>;\n\tprivate readonly _navigation: Navigation;\n\n\tprivate _input?: SymbolTreeInput<unknown>;\n\tprivate _sessionDisposable?: vscode.Disposable;\n\n\tconstructor() {\n\t\tthis._tree = vscode.window.createTreeView<unknown>(this.viewId, {\n\t\t\ttreeDataProvider: this._provider,\n\t\t\tshowCollapseAll: true,\n\t\t\tdragAndDropController: this._dnd\n\t\t});\n\t\tthis._navigation = new Navigation(this._tree);\n\t}\n\n\tdispose(): void {\n\t\tthis._history.dispose();\n\t\tthis._tree.dispose();\n\t\tthis._sessionDisposable?.dispose();\n\t}\n\n\tgetInput(): SymbolTreeInput<unknown> | undefined {\n\t\treturn this._input;\n\t}\n\n\tasync setInput(input: SymbolTreeInput<unknown>) {\n\n\t\tif (!await isValidRequestPosition(input.location.uri, input.location.range.start)) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._ctxInputSource.set(input.contextValue);\n\t\tthis._ctxIsActive.set(true);\n\t\tthis._ctxHasResult.set(true);\n\t\tvscode.commands.executeCommand(`${this.viewId}.focus`);\n\n\t\tconst newInputKind = !this._input || Object.getPrototypeOf(this._input) !== Object.getPrototypeOf(input);\n\t\tthis._input = input;\n\t\tthis._sessionDisposable?.dispose();\n\n\t\tthis._tree.title = input.title;\n\t\tthis._tree.message = newInputKind ? undefined : this._tree.message;\n\n\t\tconst modelPromise = Promise.resolve(input.resolve());\n\n\t\t// set promise to tree data provider to trigger tree loading UI\n\t\tthis._provider.update(modelPromise.then(model => model?.provider ?? this._history));\n\t\tthis._dnd.update(modelPromise.then(model => model?.dnd));\n\n\t\tconst model = await modelPromise;\n\t\tif (this._input !== input) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!model) {\n\t\t\tthis.clearInput();\n\t\t\treturn;\n\t\t}\n\n\t\tthis._history.add(input);\n\t\tthis._tree.message = model.message;\n\n\t\t// navigation\n\t\tthis._navigation.update(model.navigation);\n\n\t\t// reveal & select\n\t\tconst selection = model.navigation?.nearest(input.location.uri, input.location.range.start);\n\t\tif (selection && this._tree.visible) {\n\t\t\tawait this._tree.reveal(selection, { select: true, focus: true, expand: true });\n\t\t}\n\n\t\tconst disposables: vscode.Disposable[] = [];\n\n\t\t// editor highlights\n\t\tlet highlights: EditorHighlights<unknown> | undefined;\n\t\tif (model.highlights) {\n\t\t\thighlights = new EditorHighlights(this._tree, model.highlights);\n\t\t\tdisposables.push(highlights);\n\t\t}\n\n\t\t// listener\n\t\tif (model.provider.onDidChangeTreeData) {\n\t\t\tdisposables.push(model.provider.onDidChangeTreeData(() => {\n\t\t\t\tthis._tree.title = input.title;\n\t\t\t\tthis._tree.message = model.message;\n\t\t\t\thighlights?.update();\n\t\t\t}));\n\t\t}\n\t\tif (typeof model.dispose === 'function') {\n\t\t\tdisposables.push(new vscode.Disposable(() => model.dispose!()));\n\t\t}\n\t\tthis._sessionDisposable = vscode.Disposable.from(...disposables);\n\t}\n\n\tclearInput(): void {\n\t\tthis._sessionDisposable?.dispose();\n\t\tthis._input = undefined;\n\t\tthis._ctxHasResult.set(false);\n\t\tthis._ctxInputSource.reset();\n\t\tthis._tree.title = vscode.l10n.t('References');\n\t\tthis._tree.message = this._history.size === 0\n\t\t\t? vscode.l10n.t('No results.')\n\t\t\t: vscode.l10n.t('No results. Try running a previous search again:');\n\t\tthis._provider.update(Promise.resolve(this._history));\n\t}\n}\n\n// --- tree data\n\ninterface ActiveTreeDataProviderWrapper {\n\tprovider: Promise<vscode.TreeDataProvider<any>>;\n}\n\nclass TreeDataProviderDelegate implements vscode.TreeDataProvider<undefined> {\n\n\tprovider?: Promise<vscode.TreeDataProvider<any>>;\n\n\tprivate _sessionDispoables?: vscode.Disposable;\n\tprivate _onDidChange = new vscode.EventEmitter<any>();\n\n\treadonly onDidChangeTreeData = this._onDidChange.event;\n\n\tupdate(provider: Promise<vscode.TreeDataProvider<any>>) {\n\n\t\tthis._sessionDispoables?.dispose();\n\t\tthis._sessionDispoables = undefined;\n\n\t\tthis._onDidChange.fire(undefined);\n\n\t\tthis.provider = provider;\n\n\t\tprovider.then(value => {\n\t\t\tif (this.provider === provider && value.onDidChangeTreeData) {\n\t\t\t\tthis._sessionDispoables = value.onDidChangeTreeData(this._onDidChange.fire, this._onDidChange);\n\t\t\t}\n\t\t}).catch(err => {\n\t\t\tthis.provider = undefined;\n\t\t\tconsole.error(err);\n\t\t});\n\t}\n\n\tasync getTreeItem(element: unknown) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getTreeItem(element);\n\t}\n\n\tasync getChildren(parent?: unknown | undefined) {\n\t\tthis._assertProvider();\n\t\treturn (await this.provider).getChildren(parent);\n\t}\n\n\tasync getParent(element: unknown) {\n\t\tthis._assertProvider();\n\t\tconst provider = await this.provider;\n\t\treturn provider.getParent ? provider.getParent(element) : undefined;\n\t}\n\n\tprivate _assertProvider(): asserts this is ActiveTreeDataProviderWrapper {\n\t\tif (!this.provider) {\n\t\t\tthrow new Error('MISSING provider');\n\t\t}\n\t}\n}\n\n// --- tree dnd\n\nclass TreeDndDelegate implements vscode.TreeDragAndDropController<undefined> {\n\n\tprivate _delegate: SymbolItemDragAndDrop<undefined> | undefined;\n\n\treadonly dropMimeTypes: string[] = [];\n\n\treadonly dragMimeTypes: string[] = ['text/uri-list'];\n\n\tupdate(delegate: Promise<SymbolItemDragAndDrop<unknown> | undefined>) {\n\t\tthis._delegate = undefined;\n\t\tdelegate.then(value => this._delegate = value);\n\t}\n\n\thandleDrag(source: undefined[], data: vscode.DataTransfer) {\n\t\tif (this._delegate) {\n\t\t\tconst urls: string[] = [];\n\t\t\tfor (const item of source) {\n\t\t\t\tconst uri = this._delegate.getDragUri(item);\n\t\t\t\tif (uri) {\n\t\t\t\t\turls.push(uri.toString());\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (urls.length > 0) {\n\t\t\t\tdata.set('text/uri-list', new vscode.DataTransferItem(urls.join('\\r\\n')));\n\t\t\t}\n\t\t}\n\t}\n\n\thandleDrop(): void | Thenable<void> {\n\t\tthrow new Error('Method not implemented.');\n\t}\n}\n\n// --- history\n\nclass HistoryItem {\n\n\treadonly description: string;\n\n\tconstructor(\n\t\treadonly key: string,\n\t\treadonly word: string,\n\t\treadonly anchor: WordAnchor,\n\t\treadonly input: SymbolTreeInput<unknown>,\n\t) {\n\t\tthis.description = `${vscode.workspace.asRelativePath(input.location.uri)} • ${input.title.toLocaleLowerCase()}`;\n\t}\n}\n\nclass TreeInputHistory implements vscode.TreeDataProvider<HistoryItem> {\n\n\tprivate readonly _onDidChangeTreeData = new vscode.EventEmitter<HistoryItem | undefined>();\n\treadonly onDidChangeTreeData = this._onDidChangeTreeData.event;\n\n\tprivate readonly _disposables: vscode.Disposable[] = [];\n\tprivate readonly _ctxHasHistory = new ContextKey<boolean>('reference-list.hasHistory');\n\tprivate readonly _inputs = new Map<string, HistoryItem>();\n\n\tconstructor(private readonly _tree: SymbolsTree) {\n\n\t\tthis._disposables.push(\n\t\t\tvscode.commands.registerCommand('references-view.clear', () => _tree.clearInput()),\n\t\t\tvscode.commands.registerCommand('references-view.clearHistory', () => {\n\t\t\t\tthis.clear();\n\t\t\t\t_tree.clearInput();\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refind', (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.refresh', () => {\n\t\t\t\tconst item = Array.from(this._inputs.values()).pop();\n\t\t\t\tif (item) {\n\t\t\t\t\tthis._reRunHistoryItem(item);\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('_references-view.showHistoryItem', async (item) => {\n\t\t\t\tif (item instanceof HistoryItem) {\n\t\t\t\t\tconst position = item.anchor.guessedTrackedPosition() ?? item.input.location.range.start;\n\t\t\t\t\tawait vscode.commands.executeCommand('vscode.open', item.input.location.uri, { selection: new vscode.Range(position, position) });\n\t\t\t\t}\n\t\t\t}),\n\t\t\tvscode.commands.registerCommand('references-view.pickFromHistory', async () => {\n\t\t\t\tinterface HistoryPick extends vscode.QuickPickItem {\n\t\t\t\t\titem: HistoryItem;\n\t\t\t\t}\n\t\t\t\tconst entries = await this.getChildren();\n\t\t\t\tconst picks = entries.map((item): HistoryPick => ({\n\t\t\t\t\tlabel: item.word,\n\t\t\t\t\tdescription: item.description,\n\t\t\t\t\titem\n\t\t\t\t}));\n\t\t\t\tconst pick = await vscode.window.showQuickPick(picks, { placeHolder: vscode.l10n.t('Select previous reference search') });\n\t\t\t\tif (pick) {\n\t\t\t\t\tthis._reRunHistoryItem(pick.item);\n\t\t\t\t}\n\t\t\t}),\n\t\t);\n\t}\n\n\tdispose(): void {\n\t\tvscode.Disposable.from(...this._disposables).dispose();\n\t\tthis._onDidChangeTreeData.dispose();\n\t}\n\n\tprivate _reRunHistoryItem(item: HistoryItem): void {\n\t\tthis._inputs.delete(item.key);\n\t\tconst newPosition = item.anchor.guessedTrackedPosition();\n\t\tlet newInput = item.input;\n\t\t// create a new input when having a tracked position which is\n\t\t// different than the original position.\n\t\tif (newPosition && !item.input.location.range.start.isEqual(newPosition)) {\n\t\t\tnewInput = item.input.with(new vscode.Location(item.input.location.uri, newPosition));\n\t\t}\n\t\tthis._tree.setInput(newInput);\n\t}\n\n\tasync add(input: SymbolTreeInput<unknown>) {\n\n\t\tconst doc = await vscode.workspace.openTextDocument(input.location.uri);\n\n\t\tconst anchor = new WordAnchor(doc, input.location.range.start);\n\t\tconst range = doc.getWordRangeAtPosition(input.location.range.start) ?? doc.getWordRangeAtPosition(input.location.range.start, /[^\\s]+/);\n\t\tconst word = range ? doc.getText(range) : '???';\n\n\t\tconst item = new HistoryItem(JSON.stringify([range?.start ?? input.location.range.start, input.location.uri, input.title]), word, anchor, input);\n\t\t// use filo-ordering of native maps\n\t\tthis._inputs.delete(item.key);\n\t\tthis._inputs.set(item.key, item);\n\t\tthis._ctxHasHistory.set(true);\n\t}\n\n\tclear(): void {\n\t\tthis._inputs.clear();\n\t\tthis._ctxHasHistory.set(false);\n\t\tthis._onDidChangeTreeData.fire(undefined);\n\t}\n\n\tget size() {\n\t\treturn this._inputs.size;\n\t}\n\n\t// --- tree data provider\n\n\tgetTreeItem(item: HistoryItem): vscode.TreeItem {\n\t\tconst result = new vscode.TreeItem(item.word);\n\t\tresult.description = item.description;\n\t\tresult.command = { command: '_references-view.showHistoryItem', arguments: [item], title: vscode.l10n.t('Rerun') };\n\t\tresult.collapsibleState = vscode.TreeItemCollapsibleState.None;\n\t\tresult.contextValue = 'history-item';\n\t\treturn result;\n\t}\n\n\tgetChildren() {\n\t\treturn Promise.all([...this._inputs.values()].reverse());\n\t}\n\n\tgetParent() {\n\t\treturn undefined;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolsTree } from '../tree';\nimport { ContextKey } from '../utils';\nimport { TypeHierarchyDirection, TypeItem, TypesTreeInput } from './model';\n\nexport function register(tree: SymbolsTree, context: vscode.ExtensionContext): void {\n\n\tconst direction = new RichTypesDirection(context.workspaceState, TypeHierarchyDirection.Subtypes);\n\n\tfunction showTypeHierarchy() {\n\t\tif (vscode.window.activeTextEditor) {\n\t\t\tconst input = new TypesTreeInput(new vscode.Location(vscode.window.activeTextEditor.document.uri, vscode.window.activeTextEditor.selection.active), direction.value);\n\t\t\ttree.setInput(input);\n\t\t}\n\t}\n\n\tfunction setTypeHierarchyDirection(value: TypeHierarchyDirection, anchor: TypeItem | vscode.Location | unknown) {\n\t\tdirection.value = value;\n\n\t\tlet newInput: TypesTreeInput | undefined;\n\t\tconst oldInput = tree.getInput();\n\t\tif (anchor instanceof TypeItem) {\n\t\t\tnewInput = new TypesTreeInput(new vscode.Location(anchor.item.uri, anchor.item.selectionRange.start), direction.value);\n\t\t} else if (anchor instanceof vscode.Location) {\n\t\t\tnewInput = new TypesTreeInput(anchor, direction.value);\n\t\t} else if (oldInput instanceof TypesTreeInput) {\n\t\t\tnewInput = new TypesTreeInput(oldInput.location, direction.value);\n\t\t}\n\t\tif (newInput) {\n\t\t\ttree.setInput(newInput);\n\t\t}\n\t}\n\n\tcontext.subscriptions.push(\n\t\tvscode.commands.registerCommand('references-view.showTypeHierarchy', showTypeHierarchy),\n\t\tvscode.commands.registerCommand('references-view.showSupertypes', (item: TypeItem | vscode.Location | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Supertypes, item)),\n\t\tvscode.commands.registerCommand('references-view.showSubtypes', (item: TypeItem | vscode.Location | unknown) => setTypeHierarchyDirection(TypeHierarchyDirection.Subtypes, item)),\n\t\tvscode.commands.registerCommand('references-view.removeTypeItem', removeTypeItem)\n\t);\n}\n\nfunction removeTypeItem(item: TypeItem | unknown): void {\n\tif (item instanceof TypeItem) {\n\t\titem.remove();\n\t}\n}\n\nclass RichTypesDirection {\n\n\tprivate static _key = 'references-view.typeHierarchyMode';\n\n\tprivate _ctxMode = new ContextKey<TypeHierarchyDirection>('references-view.typeHierarchyMode');\n\n\tconstructor(\n\t\tprivate _mem: vscode.Memento,\n\t\tprivate _value: TypeHierarchyDirection = TypeHierarchyDirection.Subtypes,\n\t) {\n\t\tconst raw = _mem.get<TypeHierarchyDirection>(RichTypesDirection._key);\n\t\tif (typeof raw === 'string') {\n\t\t\tthis.value = raw;\n\t\t} else {\n\t\t\tthis.value = _value;\n\t\t}\n\t}\n\n\tget value() {\n\t\treturn this._value;\n\t}\n\n\tset value(value: TypeHierarchyDirection) {\n\t\tthis._value = value;\n\t\tthis._ctxMode.set(value);\n\t\tthis._mem.update(RichTypesDirection._key, value);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\nimport { SymbolItemDragAndDrop, SymbolItemEditorHighlights, SymbolItemNavigation, SymbolTreeInput } from '../references-view';\nimport { asResourceUrl, del, getThemeIcon, tail } from '../utils';\n\nexport class TypesTreeInput implements SymbolTreeInput<TypeItem> {\n\n\treadonly title: string;\n\treadonly contextValue: string = 'typeHierarchy';\n\n\tconstructor(\n\t\treadonly location: vscode.Location,\n\t\treadonly direction: TypeHierarchyDirection,\n\t) {\n\t\tthis.title = direction === TypeHierarchyDirection.Supertypes\n\t\t\t? vscode.l10n.t('Supertypes Of')\n\t\t\t: vscode.l10n.t('Subtypes Of');\n\t}\n\n\tasync resolve() {\n\n\t\tconst items = await Promise.resolve(vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.prepareTypeHierarchy', this.location.uri, this.location.range.start));\n\t\tconst model = new TypesModel(this.direction, items ?? []);\n\t\tconst provider = new TypeItemDataProvider(model);\n\n\t\tif (model.roots.length === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\treturn {\n\t\t\tprovider,\n\t\t\tget message() { return model.roots.length === 0 ? vscode.l10n.t('No results.') : undefined; },\n\t\t\tnavigation: model,\n\t\t\thighlights: model,\n\t\t\tdnd: model,\n\t\t\tdispose() {\n\t\t\t\tprovider.dispose();\n\t\t\t}\n\t\t};\n\t}\n\n\twith(location: vscode.Location): TypesTreeInput {\n\t\treturn new TypesTreeInput(location, this.direction);\n\t}\n}\n\n\nexport const enum TypeHierarchyDirection {\n\tSubtypes = 'subtypes',\n\tSupertypes = 'supertypes'\n}\n\n\nexport class TypeItem {\n\n\tchildren?: TypeItem[];\n\n\tconstructor(\n\t\treadonly model: TypesModel,\n\t\treadonly item: vscode.TypeHierarchyItem,\n\t\treadonly parent: TypeItem | undefined,\n\t) { }\n\n\tremove(): void {\n\t\tthis.model.remove(this);\n\t}\n}\n\nclass TypesModel implements SymbolItemNavigation<TypeItem>, SymbolItemEditorHighlights<TypeItem>, SymbolItemDragAndDrop<TypeItem> {\n\n\treadonly roots: TypeItem[] = [];\n\n\tprivate readonly _onDidChange = new vscode.EventEmitter<TypesModel>();\n\treadonly onDidChange = this._onDidChange.event;\n\n\tconstructor(readonly direction: TypeHierarchyDirection, items: vscode.TypeHierarchyItem[]) {\n\t\tthis.roots = items.map(item => new TypeItem(this, item, undefined));\n\t}\n\n\tprivate async _resolveTypes(currentType: TypeItem): Promise<TypeItem[]> {\n\t\tif (this.direction === TypeHierarchyDirection.Supertypes) {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSupertypes', currentType.item);\n\t\t\treturn types ? types.map(item => new TypeItem(this, item, currentType)) : [];\n\t\t} else {\n\t\t\tconst types = await vscode.commands.executeCommand<vscode.TypeHierarchyItem[]>('vscode.provideSubtypes', currentType.item);\n\t\t\treturn types ? types.map(item => new TypeItem(this, item, currentType)) : [];\n\t\t}\n\t}\n\n\tasync getTypeChildren(item: TypeItem): Promise<TypeItem[]> {\n\t\tif (!item.children) {\n\t\t\titem.children = await this._resolveTypes(item);\n\t\t}\n\t\treturn item.children;\n\t}\n\n\t// -- dnd\n\n\tgetDragUri(item: TypeItem): vscode.Uri | undefined {\n\t\treturn asResourceUrl(item.item.uri, item.item.range);\n\t}\n\n\t// -- navigation\n\n\tlocation(currentType: TypeItem) {\n\t\treturn new vscode.Location(currentType.item.uri, currentType.item.range);\n\t}\n\n\tnearest(uri: vscode.Uri, _position: vscode.Position): TypeItem | undefined {\n\t\treturn this.roots.find(item => item.item.uri.toString() === uri.toString()) ?? this.roots[0];\n\t}\n\n\tnext(from: TypeItem): TypeItem {\n\t\treturn this._move(from, true) ?? from;\n\t}\n\n\tprevious(from: TypeItem): TypeItem {\n\t\treturn this._move(from, false) ?? from;\n\t}\n\n\tprivate _move(item: TypeItem, fwd: boolean): TypeItem | void {\n\t\tif (item.children?.length) {\n\t\t\treturn fwd ? item.children[0] : tail(item.children);\n\t\t}\n\t\tconst array = this.roots.includes(item) ? this.roots : item.parent?.children;\n\t\tif (array?.length) {\n\t\t\tconst idx = array.indexOf(item);\n\t\t\tconst delta = fwd ? 1 : -1;\n\t\t\treturn array[idx + delta + array.length % array.length];\n\t\t}\n\t}\n\n\t// --- highlights\n\n\tgetEditorHighlights(currentType: TypeItem, uri: vscode.Uri): vscode.Range[] | undefined {\n\t\treturn currentType.item.uri.toString() === uri.toString() ? [currentType.item.selectionRange] : undefined;\n\t}\n\n\tremove(item: TypeItem) {\n\t\tconst isInRoot = this.roots.includes(item);\n\t\tconst siblings = isInRoot ? this.roots : item.parent?.children;\n\t\tif (siblings) {\n\t\t\tdel(siblings, item);\n\t\t\tthis._onDidChange.fire(this);\n\t\t}\n\t}\n}\n\nclass TypeItemDataProvider implements vscode.TreeDataProvider<TypeItem> {\n\n\tprivate readonly _emitter = new vscode.EventEmitter<TypeItem | undefined>();\n\treadonly onDidChangeTreeData = this._emitter.event;\n\n\tprivate readonly _modelListener: vscode.Disposable;\n\n\tconstructor(private _model: TypesModel) {\n\t\tthis._modelListener = _model.onDidChange(e => this._emitter.fire(e instanceof TypeItem ? e : undefined));\n\t}\n\n\tdispose(): void {\n\t\tthis._emitter.dispose();\n\t\tthis._modelListener.dispose();\n\t}\n\n\tgetTreeItem(element: TypeItem): vscode.TreeItem {\n\n\t\tconst item = new vscode.TreeItem(element.item.name);\n\t\titem.description = element.item.detail;\n\t\titem.contextValue = 'type-item';\n\t\titem.iconPath = getThemeIcon(element.item.kind);\n\t\titem.command = {\n\t\t\tcommand: 'vscode.open',\n\t\t\ttitle: vscode.l10n.t('Open Type'),\n\t\t\targuments: [\n\t\t\t\telement.item.uri,\n\t\t\t\t{ selection: element.item.selectionRange.with({ end: element.item.selectionRange.start }) } satisfies vscode.TextDocumentShowOptions\n\t\t\t]\n\t\t};\n\t\titem.collapsibleState = vscode.TreeItemCollapsibleState.Collapsed;\n\t\treturn item;\n\t}\n\n\tgetChildren(element?: TypeItem | undefined) {\n\t\treturn element\n\t\t\t? this._model.getTypeChildren(element)\n\t\t\t: this._model.roots;\n\t}\n\n\tgetParent(element: TypeItem) {\n\t\treturn element.parent;\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport * as vscode from 'vscode';\n\nexport function del<T>(array: T[], e: T): void {\n\tconst idx = array.indexOf(e);\n\tif (idx >= 0) {\n\t\tarray.splice(idx, 1);\n\t}\n}\n\nexport function tail<T>(array: T[]): T | undefined {\n\treturn array[array.length - 1];\n}\n\nexport function asResourceUrl(uri: vscode.Uri, range: vscode.Range): vscode.Uri {\n\treturn uri.with({ fragment: `L${1 + range.start.line},${1 + range.start.character}-${1 + range.end.line},${1 + range.end.character}` });\n}\n\nexport async function isValidRequestPosition(uri: vscode.Uri, position: vscode.Position) {\n\tconst doc = await vscode.workspace.openTextDocument(uri);\n\tlet range = doc.getWordRangeAtPosition(position);\n\tif (!range) {\n\t\trange = doc.getWordRangeAtPosition(position, /[^\\s]+/);\n\t}\n\treturn Boolean(range);\n}\n\nexport function getPreviewChunks(doc: vscode.TextDocument, range: vscode.Range, beforeLen: number = 8, trim: boolean = true) {\n\tconst previewStart = range.start.with({ character: Math.max(0, range.start.character - beforeLen) });\n\tconst wordRange = doc.getWordRangeAtPosition(previewStart);\n\tlet before = doc.getText(new vscode.Range(wordRange ? wordRange.start : previewStart, range.start));\n\tconst inside = doc.getText(range);\n\tconst previewEnd = range.end.translate(0, 331);\n\tlet after = doc.getText(new vscode.Range(range.end, previewEnd));\n\tif (trim) {\n\t\tbefore = before.replace(/^\\s*/g, '');\n\t\tafter = after.replace(/\\s*$/g, '');\n\t}\n\treturn { before, inside, after };\n}\n\nexport class ContextKey<V> {\n\n\tconstructor(readonly name: string) { }\n\n\tasync set(value: V) {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, value);\n\t}\n\n\tasync reset() {\n\t\tawait vscode.commands.executeCommand('setContext', this.name, undefined);\n\t}\n}\n\nexport class WordAnchor {\n\n\tprivate readonly _version: number;\n\tprivate readonly _word: string | undefined;\n\n\tconstructor(private readonly _doc: vscode.TextDocument, private readonly _position: vscode.Position) {\n\t\tthis._version = _doc.version;\n\t\tthis._word = this._getAnchorWord(_doc, _position);\n\t}\n\n\tprivate _getAnchorWord(doc: vscode.TextDocument, pos: vscode.Position): string | undefined {\n\t\tconst range = doc.getWordRangeAtPosition(pos) || doc.getWordRangeAtPosition(pos, /[^\\s]+/);\n\t\treturn range && doc.getText(range);\n\t}\n\n\tguessedTrackedPosition(): vscode.Position | undefined {\n\t\t// funky entry\n\t\tif (!this._word) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes\n\t\tif (this._version === this._doc.version) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// no changes here...\n\t\tconst wordNow = this._getAnchorWord(this._doc, this._position);\n\t\tif (this._word === wordNow) {\n\t\t\treturn this._position;\n\t\t}\n\n\t\t// changes: search _word downwards and upwards\n\t\tconst startLine = this._position.line;\n\t\tlet i = 0;\n\t\tlet line: number;\n\t\tlet checked: boolean;\n\t\tdo {\n\t\t\tchecked = false;\n\t\t\t// nth line down\n\t\t\tline = startLine + i;\n\t\t\tif (line < this._doc.lineCount) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t\ti += 1;\n\t\t\t// nth line up\n\t\t\tline = startLine - i;\n\t\t\tif (line >= 0) {\n\t\t\t\tchecked = true;\n\t\t\t\tconst ch = this._doc.lineAt(line).text.indexOf(this._word);\n\t\t\t\tif (ch >= 0) {\n\t\t\t\t\treturn new vscode.Position(line, ch);\n\t\t\t\t}\n\t\t\t}\n\t\t} while (i < 100 && checked);\n\n\t\t// fallback\n\t\treturn this._position;\n\t}\n}\n\n// vscode.SymbolKind.File === 0, Module === 1, etc...\nconst _themeIconIds = [\n\t'symbol-file', 'symbol-module', 'symbol-namespace', 'symbol-package', 'symbol-class', 'symbol-method',\n\t'symbol-property', 'symbol-field', 'symbol-constructor', 'symbol-enum', 'symbol-interface',\n\t'symbol-function', 'symbol-variable', 'symbol-constant', 'symbol-string', 'symbol-number', 'symbol-boolean',\n\t'symbol-array', 'symbol-object', 'symbol-key', 'symbol-null', 'symbol-enum-member', 'symbol-struct',\n\t'symbol-event', 'symbol-operator', 'symbol-type-parameter'\n];\n\nexport function getThemeIcon(kind: vscode.SymbolKind): vscode.ThemeIcon | undefined {\n\tconst id = _themeIconIds[kind];\n\treturn id ? new vscode.ThemeIcon(id) : undefined;\n}\n","module.exports = require(\"vscode\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(256);\n"],"names":["tree","context","direction","RichCallsDirection","workspaceState","setCallsDirection","value","anchor","newInput","oldInput","getInput","CallItem","CallsTreeInput","vscode","Location","item","uri","selectionRange","start","location","setInput","subscriptions","push","commands","registerCommand","window","activeTextEditor","input","document","selection","active","removeCallItem","remove","constructor","_mem","_value","_ctxMode","ContextKey","raw","get","_key","this","set","update","contextValue","title","l10n","t","resolve","items","Promise","executeCommand","range","model","CallsModel","provider","CallItemDataProvider","roots","length","message","undefined","navigation","highlights","dnd","dispose","parent","locations","_onDidChange","EventEmitter","onDidChange","event","map","_resolveCalls","call","calls","from","fromRanges","to","getCallChildren","children","nearest","_position","find","toString","next","_move","previous","fwd","tail","array","includes","idx","indexOf","getDragUri","asResourceUrl","getEditorHighlights","filter","loc","siblings","del","fire","_model","_emitter","onDidChangeTreeData","_modelListener","e","getTreeItem","element","TreeItem","name","openArgs","description","detail","tooltip","label","iconPath","getThemeIcon","kind","with","end","firstLoctionStart","isBefore","Range","command","arguments","collapsibleState","TreeItemCollapsibleState","Collapsed","getChildren","getParent","SymbolsTree","references","register","types","_view","_delegate","_decorationType","createTextEditorDecorationType","backgroundColor","ThemeColor","rangeBehavior","DecorationRangeBehavior","ClosedClosed","overviewRulerLane","OverviewRulerLane","Center","overviewRulerColor","disposables","_ignore","Set","workspace","onDidChangeTextDocument","add","onDidChangeActiveTextEditor","visible","onDidChangeVisibility","_show","_hide","onDidChangeSelection","Disposable","editor","visibleTextEditors","setDecorations","viewColumn","has","ranges","_disposables","_ctxCanNavigate","delegate","Boolean","_anchor","sel","_open","preserveFocus","Selection","newItem","newLocation","reveal","select","focus","findLocations","ReferencesTreeInput","showReferencesDisposable","args","removeReferenceItem","copyCommand","copyAllCommand","copyPathCommand","config","updateShowReferences","affectsConfiguration","getConfiguration","async","position","onDidChangeConfiguration","ReferenceItem","file","FileItem","val","ReferencesModel","asCopyText","env","clipboard","writeText","scheme","fsPath","_command","_result","resut","ReferencesTreeDataProvider","last","sort","_compareLocations","targetUri","targetRange","_compareUriIgnoreFragment","fragment","a","b","aStr","bStr","aUri","bUri","aRange","bRange","isAfter","total","reduce","prev","cur","files","Position","ref","contains","lastBefore","best","bestValue","_prefixLen","i","pos","charCodeAt","delta","_item","result","_listener","ThemeIcon","File","doc","getDocument","before","inside","after","getPreviewChunks","None","asRelativePath","warmUpNext","_document","openTextDocument","chunks","line","character","viewId","_ctxIsActive","_ctxHasResult","_ctxInputSource","_history","TreeInputHistory","_provider","TreeDataProviderDelegate","_dnd","TreeDndDelegate","_tree","createTreeView","treeDataProvider","showCollapseAll","dragAndDropController","_navigation","Navigation","_sessionDisposable","_input","isValidRequestPosition","clearInput","newInputKind","Object","getPrototypeOf","modelPromise","then","expand","EditorHighlights","reset","size","_sessionDispoables","catch","err","console","error","_assertProvider","Error","dropMimeTypes","dragMimeTypes","handleDrag","source","data","urls","DataTransferItem","join","handleDrop","HistoryItem","key","word","toLocaleLowerCase","_onDidChangeTreeData","_ctxHasHistory","_inputs","Map","clear","_reRunHistoryItem","Array","values","pop","guessedTrackedPosition","picks","pick","showQuickPick","placeHolder","delete","newPosition","isEqual","WordAnchor","getWordRangeAtPosition","getText","JSON","stringify","all","reverse","RichTypesDirection","setTypeHierarchyDirection","TypeItem","TypesTreeInput","removeTypeItem","TypesModel","TypeItemDataProvider","_resolveTypes","currentType","getTypeChildren","splice","beforeLen","trim","previewStart","Math","max","wordRange","previewEnd","translate","replace","id","_themeIconIds","_doc","_version","version","_word","_getAnchorWord","wordNow","startLine","checked","lineCount","ch","lineAt","text","module","exports","require","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","__webpack_modules__"],"sourceRoot":""}