{"version":3,"file":"421.htmlServerMain.js","mappings":"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","sources":["webpack://vscode-html-languageserver/./src/customData.ts","webpack://vscode-html-languageserver/./src/htmlServer.ts","webpack://vscode-html-languageserver/./src/languageModelCache.ts","webpack://vscode-html-languageserver/./src/modes/cssMode.ts","webpack://vscode-html-languageserver/./src/modes/embeddedSupport.ts","webpack://vscode-html-languageserver/./src/modes/formatting.ts","webpack://vscode-html-languageserver/./src/modes/htmlFolding.ts","webpack://vscode-html-languageserver/./src/modes/htmlMode.ts","webpack://vscode-html-languageserver/./src/modes/javascriptMode.ts","webpack://vscode-html-languageserver/./src/modes/javascriptSemanticTokens.ts","webpack://vscode-html-languageserver/./src/modes/languageModes.ts","webpack://vscode-html-languageserver/./src/modes/selectionRanges.ts","webpack://vscode-html-languageserver/./src/modes/semanticTokens.ts","webpack://vscode-html-languageserver/./src/node/htmlServerMain.ts","webpack://vscode-html-languageserver/./src/node/nodeFs.ts","webpack://vscode-html-languageserver/./src/requests.ts","webpack://vscode-html-languageserver/./src/utils/arrays.ts","webpack://vscode-html-languageserver/./src/utils/documentContext.ts","webpack://vscode-html-languageserver/./src/utils/positions.ts","webpack://vscode-html-languageserver/./src/utils/runner.ts","webpack://vscode-html-languageserver/./src/utils/strings.ts","webpack://vscode-html-languageserver/./src/utils/validation.ts"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { IHTMLDataProvider, newHTMLDataProvider } from 'vscode-html-languageservice';\nimport { CustomDataRequestService } from './htmlServer';\n\nexport function fetchHTMLDataProviders(dataPaths: string[], requestService: CustomDataRequestService): Promise<IHTMLDataProvider[]> {\n\tconst providers = dataPaths.map(async p => {\n\t\ttry {\n\t\t\tconst content = await requestService.getContent(p);\n\t\t\treturn parseHTMLData(p, content);\n\t\t} catch (e) {\n\t\t\treturn newHTMLDataProvider(p, { version: 1 });\n\t\t}\n\t});\n\n\treturn Promise.all(providers);\n}\n\nfunction parseHTMLData(id: string, source: string): IHTMLDataProvider {\n\tlet rawData: any;\n\n\ttry {\n\t\trawData = JSON.parse(source);\n\t} catch (err) {\n\t\treturn newHTMLDataProvider(id, { version: 1 });\n\t}\n\n\treturn newHTMLDataProvider(id, {\n\t\tversion: rawData.version || 1,\n\t\ttags: rawData.tags || [],\n\t\tglobalAttributes: rawData.globalAttributes || [],\n\t\tvalueSets: rawData.valueSets || []\n\t});\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport {\n\tConnection, TextDocuments, InitializeParams, InitializeResult, RequestType,\n\tDocumentRangeFormattingRequest, Disposable, ServerCapabilities,\n\tConfigurationRequest, ConfigurationParams, DidChangeWorkspaceFoldersNotification,\n\tDocumentColorRequest, ColorPresentationRequest, TextDocumentSyncKind, NotificationType, RequestType0, DocumentFormattingRequest, FormattingOptions, TextEdit\n} from 'vscode-languageserver';\nimport {\n\tgetLanguageModes, LanguageModes, Settings, TextDocument, Position, Diagnostic, WorkspaceFolder, ColorInformation,\n\tRange, DocumentLink, SymbolInformation, TextDocumentIdentifier, isCompletionItemData\n} from './modes/languageModes';\n\nimport { format } from './modes/formatting';\nimport { pushAll } from './utils/arrays';\nimport { getDocumentContext } from './utils/documentContext';\nimport { URI } from 'vscode-uri';\nimport { formatError, runSafe } from './utils/runner';\nimport { DiagnosticsSupport, registerDiagnosticsPullSupport, registerDiagnosticsPushSupport } from './utils/validation';\n\nimport { getFoldingRanges } from './modes/htmlFolding';\nimport { fetchHTMLDataProviders } from './customData';\nimport { getSelectionRanges } from './modes/selectionRanges';\nimport { SemanticTokenProvider, newSemanticTokenProvider } from './modes/semanticTokens';\nimport { FileSystemProvider, getFileSystemProvider } from './requests';\n\nnamespace CustomDataChangedNotification {\n\texport const type: NotificationType<string[]> = new NotificationType('html/customDataChanged');\n}\n\nnamespace CustomDataContent {\n\texport const type: RequestType<string, string, any> = new RequestType('html/customDataContent');\n}\n\ninterface AutoInsertParams {\n\t/**\n\t * The auto insert kind\n\t */\n\tkind: 'autoQuote' | 'autoClose';\n\t/**\n\t * The text document.\n\t */\n\ttextDocument: TextDocumentIdentifier;\n\t/**\n\t * The position inside the text document.\n\t */\n\tposition: Position;\n}\n\nnamespace AutoInsertRequest {\n\texport const type: RequestType<AutoInsertParams, string, any> = new RequestType('html/autoInsert');\n}\n\n// experimental: semantic tokens\ninterface SemanticTokenParams {\n\ttextDocument: TextDocumentIdentifier;\n\tranges?: Range[];\n}\nnamespace SemanticTokenRequest {\n\texport const type: RequestType<SemanticTokenParams, number[] | null, any> = new RequestType('html/semanticTokens');\n}\nnamespace SemanticTokenLegendRequest {\n\texport const type: RequestType0<{ types: string[]; modifiers: string[] } | null, any> = new RequestType0('html/semanticTokenLegend');\n}\n\nexport interface RuntimeEnvironment {\n\tfileFs?: FileSystemProvider;\n\tconfigureHttpRequests?(proxy: string | undefined, strictSSL: boolean): void;\n\treadonly timer: {\n\t\tsetImmediate(callback: (...args: any[]) => void, ...args: any[]): Disposable;\n\t\tsetTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): Disposable;\n\t};\n}\n\n\nexport interface CustomDataRequestService {\n\tgetContent(uri: string): Promise<string>;\n}\n\n\nexport function startServer(connection: Connection, runtime: RuntimeEnvironment) {\n\n\t// Create a text document manager.\n\tconst documents = new TextDocuments(TextDocument);\n\t// Make the text document manager listen on the connection\n\t// for open, change and close text document events\n\tdocuments.listen(connection);\n\n\tlet workspaceFolders: WorkspaceFolder[] = [];\n\n\tlet languageModes: LanguageModes;\n\n\tlet diagnosticsSupport: DiagnosticsSupport | undefined;\n\n\tlet clientSnippetSupport = false;\n\tlet dynamicFormatterRegistration = false;\n\tlet scopedSettingsSupport = false;\n\tlet workspaceFoldersSupport = false;\n\tlet foldingRangeLimit = Number.MAX_VALUE;\n\tlet formatterMaxNumberOfEdits = Number.MAX_VALUE;\n\n\tconst customDataRequestService: CustomDataRequestService = {\n\t\tgetContent(uri: string) {\n\t\t\treturn connection.sendRequest(CustomDataContent.type, uri);\n\t\t}\n\t};\n\n\tlet globalSettings: Settings = {};\n\tlet documentSettings: { [key: string]: Thenable<Settings> } = {};\n\t// remove document settings on close\n\tdocuments.onDidClose(e => {\n\t\tdelete documentSettings[e.document.uri];\n\t});\n\n\tfunction getDocumentSettings(textDocument: TextDocument, needsDocumentSettings: () => boolean): Thenable<Settings | undefined> {\n\t\tif (scopedSettingsSupport && needsDocumentSettings()) {\n\t\t\tlet promise = documentSettings[textDocument.uri];\n\t\t\tif (!promise) {\n\t\t\t\tconst scopeUri = textDocument.uri;\n\t\t\t\tconst sections = ['css', 'html', 'javascript', 'js/ts'];\n\t\t\t\tconst configRequestParam: ConfigurationParams = { items: sections.map(section => ({ scopeUri, section })) };\n\t\t\t\tpromise = connection.sendRequest(ConfigurationRequest.type, configRequestParam).then(s => ({ css: s[0], html: s[1], javascript: s[2], 'js/ts': s[3] }));\n\t\t\t\tdocumentSettings[textDocument.uri] = promise;\n\t\t\t}\n\t\t\treturn promise;\n\t\t}\n\t\treturn Promise.resolve(undefined);\n\t}\n\n\t// After the server has started the client sends an initialize request. The server receives\n\t// in the passed params the rootPath of the workspace plus the client capabilities\n\tconnection.onInitialize((params: InitializeParams): InitializeResult => {\n\t\tconst initializationOptions = params.initializationOptions as any || {};\n\n\t\tworkspaceFolders = (<any>params).workspaceFolders;\n\t\tif (!Array.isArray(workspaceFolders)) {\n\t\t\tworkspaceFolders = [];\n\t\t\tif (params.rootPath) {\n\t\t\t\tworkspaceFolders.push({ name: '', uri: URI.file(params.rootPath).toString() });\n\t\t\t}\n\t\t}\n\n\t\tconst handledSchemas = initializationOptions?.handledSchemas as string[] ?? ['file'];\n\n\t\tconst fileSystemProvider = getFileSystemProvider(handledSchemas, connection, runtime);\n\n\t\tconst workspace = {\n\t\t\tget settings() { return globalSettings; },\n\t\t\tget folders() { return workspaceFolders; }\n\t\t};\n\n\t\tlanguageModes = getLanguageModes(initializationOptions?.embeddedLanguages || { css: true, javascript: true }, workspace, params.capabilities, fileSystemProvider);\n\n\t\tconst dataPaths: string[] = initializationOptions?.dataPaths || [];\n\t\tfetchHTMLDataProviders(dataPaths, customDataRequestService).then(dataProviders => {\n\t\t\tlanguageModes.updateDataProviders(dataProviders);\n\t\t});\n\n\t\tdocuments.onDidClose(e => {\n\t\t\tlanguageModes.onDocumentRemoved(e.document);\n\t\t});\n\t\tconnection.onShutdown(() => {\n\t\t\tlanguageModes.dispose();\n\t\t});\n\n\t\tfunction getClientCapability<T>(name: string, def: T) {\n\t\t\tconst keys = name.split('.');\n\t\t\tlet c: any = params.capabilities;\n\t\t\tfor (let i = 0; c && i < keys.length; i++) {\n\t\t\t\tif (!c.hasOwnProperty(keys[i])) {\n\t\t\t\t\treturn def;\n\t\t\t\t}\n\t\t\t\tc = c[keys[i]];\n\t\t\t}\n\t\t\treturn c;\n\t\t}\n\n\t\tclientSnippetSupport = getClientCapability('textDocument.completion.completionItem.snippetSupport', false);\n\t\tdynamicFormatterRegistration = getClientCapability('textDocument.rangeFormatting.dynamicRegistration', false) && (typeof initializationOptions?.provideFormatter !== 'boolean');\n\t\tscopedSettingsSupport = getClientCapability('workspace.configuration', false);\n\t\tworkspaceFoldersSupport = getClientCapability('workspace.workspaceFolders', false);\n\t\tfoldingRangeLimit = getClientCapability('textDocument.foldingRange.rangeLimit', Number.MAX_VALUE);\n\t\tformatterMaxNumberOfEdits = initializationOptions?.customCapabilities?.rangeFormatting?.editLimit || Number.MAX_VALUE;\n\n\t\tconst supportsDiagnosticPull = getClientCapability('textDocument.diagnostic', undefined);\n\t\tif (supportsDiagnosticPull === undefined) {\n\t\t\tdiagnosticsSupport = registerDiagnosticsPushSupport(documents, connection, runtime, validateTextDocument);\n\t\t} else {\n\t\t\tdiagnosticsSupport = registerDiagnosticsPullSupport(documents, connection, runtime, validateTextDocument);\n\t\t}\n\n\t\tconst capabilities: ServerCapabilities = {\n\t\t\ttextDocumentSync: TextDocumentSyncKind.Incremental,\n\t\t\tcompletionProvider: clientSnippetSupport ? { resolveProvider: true, triggerCharacters: ['.', ':', '<', '\"', '=', '/'] } : undefined,\n\t\t\thoverProvider: true,\n\t\t\tdocumentHighlightProvider: true,\n\t\t\tdocumentRangeFormattingProvider: initializationOptions?.provideFormatter === true,\n\t\t\tdocumentFormattingProvider: initializationOptions?.provideFormatter === true,\n\t\t\tdocumentLinkProvider: { resolveProvider: false },\n\t\t\tdocumentSymbolProvider: true,\n\t\t\tdefinitionProvider: true,\n\t\t\tsignatureHelpProvider: { triggerCharacters: ['('] },\n\t\t\treferencesProvider: true,\n\t\t\tcolorProvider: {},\n\t\t\tfoldingRangeProvider: true,\n\t\t\tselectionRangeProvider: true,\n\t\t\trenameProvider: true,\n\t\t\tlinkedEditingRangeProvider: true,\n\t\t\tdiagnosticProvider: {\n\t\t\t\tdocumentSelector: null,\n\t\t\t\tinterFileDependencies: false,\n\t\t\t\tworkspaceDiagnostics: false\n\t\t\t}\n\t\t};\n\t\treturn { capabilities };\n\t});\n\n\tconnection.onInitialized(() => {\n\t\tif (workspaceFoldersSupport) {\n\t\t\tconnection.client.register(DidChangeWorkspaceFoldersNotification.type);\n\n\t\t\tconnection.onNotification(DidChangeWorkspaceFoldersNotification.type, e => {\n\t\t\t\tconst toAdd = e.event.added;\n\t\t\t\tconst toRemove = e.event.removed;\n\t\t\t\tconst updatedFolders = [];\n\t\t\t\tif (workspaceFolders) {\n\t\t\t\t\tfor (const folder of workspaceFolders) {\n\t\t\t\t\t\tif (!toRemove.some(r => r.uri === folder.uri) && !toAdd.some(r => r.uri === folder.uri)) {\n\t\t\t\t\t\t\tupdatedFolders.push(folder);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tworkspaceFolders = updatedFolders.concat(toAdd);\n\t\t\t\tdiagnosticsSupport?.requestRefresh();\n\t\t\t});\n\t\t}\n\t});\n\n\tlet formatterRegistrations: Thenable<Disposable>[] | null = null;\n\n\t// The settings have changed. Is send on server activation as well.\n\tconnection.onDidChangeConfiguration((change) => {\n\t\tglobalSettings = change.settings as Settings;\n\t\tdocumentSettings = {}; // reset all document settings\n\t\tdiagnosticsSupport?.requestRefresh();\n\n\t\t// dynamically enable & disable the formatter\n\t\tif (dynamicFormatterRegistration) {\n\t\t\tconst enableFormatter = globalSettings && globalSettings.html && globalSettings.html.format && globalSettings.html.format.enable;\n\t\t\tif (enableFormatter) {\n\t\t\t\tif (!formatterRegistrations) {\n\t\t\t\t\tconst documentSelector = [{ language: 'html' }, { language: 'handlebars' }];\n\t\t\t\t\tformatterRegistrations = [\n\t\t\t\t\t\tconnection.client.register(DocumentRangeFormattingRequest.type, { documentSelector }),\n\t\t\t\t\t\tconnection.client.register(DocumentFormattingRequest.type, { documentSelector })\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t} else if (formatterRegistrations) {\n\t\t\t\tformatterRegistrations.forEach(p => p.then(r => r.dispose()));\n\t\t\t\tformatterRegistrations = null;\n\t\t\t}\n\t\t}\n\t});\n\n\tfunction isValidationEnabled(languageId: string, settings: Settings = globalSettings) {\n\t\tconst validationSettings = settings && settings.html && settings.html.validate;\n\t\tif (validationSettings) {\n\t\t\treturn languageId === 'css' && validationSettings.styles !== false || languageId === 'javascript' && validationSettings.scripts !== false;\n\t\t}\n\t\treturn true;\n\t}\n\n\tasync function validateTextDocument(textDocument: TextDocument): Promise<Diagnostic[]> {\n\t\ttry {\n\t\t\tconst version = textDocument.version;\n\t\t\tconst diagnostics: Diagnostic[] = [];\n\t\t\tif (textDocument.languageId === 'html') {\n\t\t\t\tconst modes = languageModes.getAllModesInDocument(textDocument);\n\t\t\t\tconst settings = await getDocumentSettings(textDocument, () => modes.some(m => !!m.doValidation));\n\t\t\t\tconst latestTextDocument = documents.get(textDocument.uri);\n\t\t\t\tif (latestTextDocument && latestTextDocument.version === version) { // check no new version has come in after in after the async op\n\t\t\t\t\tfor (const mode of modes) {\n\t\t\t\t\t\tif (mode.doValidation && isValidationEnabled(mode.getId(), settings)) {\n\t\t\t\t\t\t\tpushAll(diagnostics, await mode.doValidation(latestTextDocument, settings));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn diagnostics;\n\t\t\t\t}\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconnection.console.error(formatError(`Error while validating ${textDocument.uri}`, e));\n\t\t}\n\t\treturn [];\n\t}\n\n\tconnection.onCompletion(async (textDocumentPosition, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(textDocumentPosition.textDocument.uri);\n\t\t\tif (!document) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst mode = languageModes.getModeAtPosition(document, textDocumentPosition.position);\n\t\t\tif (!mode || !mode.doComplete) {\n\t\t\t\treturn { isIncomplete: true, items: [] };\n\t\t\t}\n\t\t\tconst doComplete = mode.doComplete;\n\n\t\t\tconst settings = await getDocumentSettings(document, () => doComplete.length > 2);\n\t\t\tconst documentContext = getDocumentContext(document.uri, workspaceFolders);\n\t\t\treturn doComplete(document, textDocumentPosition.position, documentContext, settings);\n\n\t\t}, null, `Error while computing completions for ${textDocumentPosition.textDocument.uri}`, token);\n\t});\n\n\tconnection.onCompletionResolve((item, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst data = item.data;\n\t\t\tif (isCompletionItemData(data)) {\n\t\t\t\tconst mode = languageModes.getMode(data.languageId);\n\t\t\t\tconst document = documents.get(data.uri);\n\t\t\t\tif (mode && mode.doResolve && document) {\n\t\t\t\t\treturn mode.doResolve(document, item);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn item;\n\t\t}, item, `Error while resolving completion proposal`, token);\n\t});\n\n\tconnection.onHover((textDocumentPosition, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(textDocumentPosition.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst mode = languageModes.getModeAtPosition(document, textDocumentPosition.position);\n\t\t\t\tconst doHover = mode?.doHover;\n\t\t\t\tif (doHover) {\n\t\t\t\t\tconst settings = await getDocumentSettings(document, () => doHover.length > 2);\n\t\t\t\t\treturn doHover(document, textDocumentPosition.position, settings);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing hover for ${textDocumentPosition.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDocumentHighlight((documentHighlightParams, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(documentHighlightParams.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst mode = languageModes.getModeAtPosition(document, documentHighlightParams.position);\n\t\t\t\tif (mode && mode.findDocumentHighlight) {\n\t\t\t\t\treturn mode.findDocumentHighlight(document, documentHighlightParams.position);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing document highlights for ${documentHighlightParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDefinition((definitionParams, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(definitionParams.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst mode = languageModes.getModeAtPosition(document, definitionParams.position);\n\t\t\t\tif (mode && mode.findDefinition) {\n\t\t\t\t\treturn mode.findDefinition(document, definitionParams.position);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t}, null, `Error while computing definitions for ${definitionParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onReferences((referenceParams, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(referenceParams.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst mode = languageModes.getModeAtPosition(document, referenceParams.position);\n\t\t\t\tif (mode && mode.findReferences) {\n\t\t\t\t\treturn mode.findReferences(document, referenceParams.position);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing references for ${referenceParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onSignatureHelp((signatureHelpParms, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(signatureHelpParms.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst mode = languageModes.getModeAtPosition(document, signatureHelpParms.position);\n\t\t\t\tif (mode && mode.doSignatureHelp) {\n\t\t\t\t\treturn mode.doSignatureHelp(document, signatureHelpParms.position);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing signature help for ${signatureHelpParms.textDocument.uri}`, token);\n\t});\n\n\tasync function onFormat(textDocument: TextDocumentIdentifier, range: Range | undefined, options: FormattingOptions): Promise<TextEdit[]> {\n\t\tconst document = documents.get(textDocument.uri);\n\t\tif (document) {\n\t\t\tlet settings = await getDocumentSettings(document, () => true);\n\t\t\tif (!settings) {\n\t\t\t\tsettings = globalSettings;\n\t\t\t}\n\t\t\tconst unformattedTags: string = settings && settings.html && settings.html.format && settings.html.format.unformatted || '';\n\t\t\tconst enabledModes = { css: !unformattedTags.match(/\\bstyle\\b/), javascript: !unformattedTags.match(/\\bscript\\b/) };\n\n\t\t\tconst edits = await format(languageModes, document, range ?? getFullRange(document), options, settings, enabledModes);\n\t\t\tif (edits.length > formatterMaxNumberOfEdits) {\n\t\t\t\tconst newText = TextDocument.applyEdits(document, edits);\n\t\t\t\treturn [TextEdit.replace(getFullRange(document), newText)];\n\t\t\t}\n\t\t\treturn edits;\n\t\t}\n\t\treturn [];\n\t}\n\n\tconnection.onDocumentRangeFormatting((formatParams, token) => {\n\t\treturn runSafe(runtime, () => onFormat(formatParams.textDocument, formatParams.range, formatParams.options), [], `Error while formatting range for ${formatParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDocumentFormatting((formatParams, token) => {\n\t\treturn runSafe(runtime, () => onFormat(formatParams.textDocument, undefined, formatParams.options), [], `Error while formatting ${formatParams.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDocumentLinks((documentLinkParam, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(documentLinkParam.textDocument.uri);\n\t\t\tconst links: DocumentLink[] = [];\n\t\t\tif (document) {\n\t\t\t\tconst documentContext = getDocumentContext(document.uri, workspaceFolders);\n\t\t\t\tfor (const m of languageModes.getAllModesInDocument(document)) {\n\t\t\t\t\tif (m.findDocumentLinks) {\n\t\t\t\t\t\tpushAll(links, await m.findDocumentLinks(document, documentContext));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn links;\n\t\t}, [], `Error while document links for ${documentLinkParam.textDocument.uri}`, token);\n\t});\n\n\tconnection.onDocumentSymbol((documentSymbolParms, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(documentSymbolParms.textDocument.uri);\n\t\t\tconst symbols: SymbolInformation[] = [];\n\t\t\tif (document) {\n\t\t\t\tfor (const m of languageModes.getAllModesInDocument(document)) {\n\t\t\t\t\tif (m.findDocumentSymbols) {\n\t\t\t\t\t\tpushAll(symbols, await m.findDocumentSymbols(document));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn symbols;\n\t\t}, [], `Error while computing document symbols for ${documentSymbolParms.textDocument.uri}`, token);\n\t});\n\n\tconnection.onRequest(DocumentColorRequest.type, (params, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst infos: ColorInformation[] = [];\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tfor (const m of languageModes.getAllModesInDocument(document)) {\n\t\t\t\t\tif (m.findDocumentColors) {\n\t\t\t\t\t\tpushAll(infos, await m.findDocumentColors(document));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn infos;\n\t\t}, [], `Error while computing document colors for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.onRequest(ColorPresentationRequest.type, (params, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst mode = languageModes.getModeAtPosition(document, params.range.start);\n\t\t\t\tif (mode && mode.getColorPresentations) {\n\t\t\t\t\treturn mode.getColorPresentations(document, params.color, params.range);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing color presentations for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.onRequest(AutoInsertRequest.type, (params, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst pos = params.position;\n\t\t\t\tif (pos.character > 0) {\n\t\t\t\t\tconst mode = languageModes.getModeAtPosition(document, Position.create(pos.line, pos.character - 1));\n\t\t\t\t\tif (mode && mode.doAutoInsert) {\n\t\t\t\t\t\treturn mode.doAutoInsert(document, pos, params.kind);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing auto insert actions for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.onFoldingRanges((params, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\treturn getFoldingRanges(languageModes, document, foldingRangeLimit, token);\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing folding regions for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.onSelectionRanges((params, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\treturn getSelectionRanges(languageModes, document, params.positions);\n\t\t\t}\n\t\t\treturn [];\n\t\t}, [], `Error while computing selection ranges for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.onRenameRequest((params, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tconst position: Position = params.position;\n\n\t\t\tif (document) {\n\t\t\t\tconst mode = languageModes.getModeAtPosition(document, params.position);\n\n\t\t\t\tif (mode && mode.doRename) {\n\t\t\t\t\treturn mode.doRename(document, position, params.newName);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing rename for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.languages.onLinkedEditingRange((params, token) => {\n\t\treturn <any> /* todo remove when microsoft/vscode-languageserver-node#700 fixed */ runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\tconst pos = params.position;\n\t\t\t\tif (pos.character > 0) {\n\t\t\t\t\tconst mode = languageModes.getModeAtPosition(document, Position.create(pos.line, pos.character - 1));\n\t\t\t\t\tif (mode && mode.doLinkedEditing) {\n\t\t\t\t\t\tconst ranges = await mode.doLinkedEditing(document, pos);\n\t\t\t\t\t\tif (ranges) {\n\t\t\t\t\t\t\treturn { ranges };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing synced regions for ${params.textDocument.uri}`, token);\n\t});\n\n\tlet semanticTokensProvider: SemanticTokenProvider | undefined;\n\tfunction getSemanticTokenProvider() {\n\t\tif (!semanticTokensProvider) {\n\t\t\tsemanticTokensProvider = newSemanticTokenProvider(languageModes);\n\t\t}\n\t\treturn semanticTokensProvider;\n\t}\n\n\tconnection.onRequest(SemanticTokenRequest.type, (params, token) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\treturn getSemanticTokenProvider().getSemanticTokens(document, params.ranges);\n\t\t\t}\n\t\t\treturn null;\n\t\t}, null, `Error while computing semantic tokens for ${params.textDocument.uri}`, token);\n\t});\n\n\tconnection.onRequest(SemanticTokenLegendRequest.type, token => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\treturn getSemanticTokenProvider().legend;\n\t\t}, null, `Error while computing semantic tokens legend`, token);\n\t});\n\n\tconnection.onNotification(CustomDataChangedNotification.type, dataPaths => {\n\t\tfetchHTMLDataProviders(dataPaths, customDataRequestService).then(dataProviders => {\n\t\t\tlanguageModes.updateDataProviders(dataProviders);\n\t\t});\n\t});\n\n\t// Listen on the connection\n\tconnection.listen();\n}\n\nfunction getFullRange(document: TextDocument): Range {\n\treturn Range.create(Position.create(0, 0), document.positionAt(document.getText().length));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextDocument } from 'vscode-html-languageservice';\n\nexport interface LanguageModelCache<T> {\n\tget(document: TextDocument): T;\n\tonDocumentRemoved(document: TextDocument): void;\n\tdispose(): void;\n}\n\nexport function getLanguageModelCache<T>(maxEntries: number, cleanupIntervalTimeInSec: number, parse: (document: TextDocument) => T): LanguageModelCache<T> {\n\tlet languageModels: { [uri: string]: { version: number; languageId: string; cTime: number; languageModel: T } } = {};\n\tlet nModels = 0;\n\n\tlet cleanupInterval: NodeJS.Timeout | undefined = undefined;\n\tif (cleanupIntervalTimeInSec > 0) {\n\t\tcleanupInterval = setInterval(() => {\n\t\t\tconst cutoffTime = Date.now() - cleanupIntervalTimeInSec * 1000;\n\t\t\tconst uris = Object.keys(languageModels);\n\t\t\tfor (const uri of uris) {\n\t\t\t\tconst languageModelInfo = languageModels[uri];\n\t\t\t\tif (languageModelInfo.cTime < cutoffTime) {\n\t\t\t\t\tdelete languageModels[uri];\n\t\t\t\t\tnModels--;\n\t\t\t\t}\n\t\t\t}\n\t\t}, cleanupIntervalTimeInSec * 1000);\n\t}\n\n\treturn {\n\t\tget(document: TextDocument): T {\n\t\t\tconst version = document.version;\n\t\t\tconst languageId = document.languageId;\n\t\t\tconst languageModelInfo = languageModels[document.uri];\n\t\t\tif (languageModelInfo && languageModelInfo.version === version && languageModelInfo.languageId === languageId) {\n\t\t\t\tlanguageModelInfo.cTime = Date.now();\n\t\t\t\treturn languageModelInfo.languageModel;\n\t\t\t}\n\t\t\tconst languageModel = parse(document);\n\t\t\tlanguageModels[document.uri] = { languageModel, version, languageId, cTime: Date.now() };\n\t\t\tif (!languageModelInfo) {\n\t\t\t\tnModels++;\n\t\t\t}\n\n\t\t\tif (nModels === maxEntries) {\n\t\t\t\tlet oldestTime = Number.MAX_VALUE;\n\t\t\t\tlet oldestUri = null;\n\t\t\t\tfor (const uri in languageModels) {\n\t\t\t\t\tconst languageModelInfo = languageModels[uri];\n\t\t\t\t\tif (languageModelInfo.cTime < oldestTime) {\n\t\t\t\t\t\toldestUri = uri;\n\t\t\t\t\t\toldestTime = languageModelInfo.cTime;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (oldestUri) {\n\t\t\t\t\tdelete languageModels[oldestUri];\n\t\t\t\t\tnModels--;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn languageModel;\n\n\t\t},\n\t\tonDocumentRemoved(document: TextDocument) {\n\t\t\tconst uri = document.uri;\n\t\t\tif (languageModels[uri]) {\n\t\t\t\tdelete languageModels[uri];\n\t\t\t\tnModels--;\n\t\t\t}\n\t\t},\n\t\tdispose() {\n\t\t\tif (typeof cleanupInterval !== 'undefined') {\n\t\t\t\tclearInterval(cleanupInterval);\n\t\t\t\tcleanupInterval = undefined;\n\t\t\t\tlanguageModels = {};\n\t\t\t\tnModels = 0;\n\t\t\t}\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LanguageModelCache, getLanguageModelCache } from '../languageModelCache';\nimport { Stylesheet, LanguageService as CSSLanguageService } from 'vscode-css-languageservice';\nimport { LanguageMode, Workspace, Color, TextDocument, Position, Range, CompletionList, DocumentContext, Diagnostic } from './languageModes';\nimport { HTMLDocumentRegions, CSS_STYLE_RULE } from './embeddedSupport';\n\nexport function getCSSMode(cssLanguageService: CSSLanguageService, documentRegions: LanguageModelCache<HTMLDocumentRegions>, workspace: Workspace): LanguageMode {\n\tconst embeddedCSSDocuments = getLanguageModelCache<TextDocument>(10, 60, document => documentRegions.get(document).getEmbeddedDocument('css'));\n\tconst cssStylesheets = getLanguageModelCache<Stylesheet>(10, 60, document => cssLanguageService.parseStylesheet(document));\n\n\treturn {\n\t\tgetId() {\n\t\t\treturn 'css';\n\t\t},\n\t\tasync doValidation(document: TextDocument, settings = workspace.settings) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn (cssLanguageService.doValidation(embedded, cssStylesheets.get(embedded), settings && settings.css) as Diagnostic[]);\n\t\t},\n\t\tasync doComplete(document: TextDocument, position: Position, documentContext: DocumentContext, _settings = workspace.settings) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\tconst stylesheet = cssStylesheets.get(embedded);\n\t\t\treturn cssLanguageService.doComplete2(embedded, position, stylesheet, documentContext, _settings?.css?.completion) || CompletionList.create();\n\t\t},\n\t\tasync doHover(document: TextDocument, position: Position, settings = workspace.settings) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn cssLanguageService.doHover(embedded, position, cssStylesheets.get(embedded), settings?.css?.hover);\n\t\t},\n\t\tasync findDocumentHighlight(document: TextDocument, position: Position) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn cssLanguageService.findDocumentHighlights(embedded, position, cssStylesheets.get(embedded));\n\t\t},\n\t\tasync findDocumentSymbols(document: TextDocument) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn cssLanguageService.findDocumentSymbols(embedded, cssStylesheets.get(embedded)).filter(s => s.name !== CSS_STYLE_RULE);\n\t\t},\n\t\tasync findDefinition(document: TextDocument, position: Position) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn cssLanguageService.findDefinition(embedded, position, cssStylesheets.get(embedded));\n\t\t},\n\t\tasync findReferences(document: TextDocument, position: Position) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn cssLanguageService.findReferences(embedded, position, cssStylesheets.get(embedded));\n\t\t},\n\t\tasync findDocumentColors(document: TextDocument) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn cssLanguageService.findDocumentColors(embedded, cssStylesheets.get(embedded));\n\t\t},\n\t\tasync getColorPresentations(document: TextDocument, color: Color, range: Range) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn cssLanguageService.getColorPresentations(embedded, cssStylesheets.get(embedded), color, range);\n\t\t},\n\t\tasync getFoldingRanges(document: TextDocument) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn cssLanguageService.getFoldingRanges(embedded, {});\n\t\t},\n\t\tasync getSelectionRange(document: TextDocument, position: Position) {\n\t\t\tconst embedded = embeddedCSSDocuments.get(document);\n\t\t\treturn cssLanguageService.getSelectionRanges(embedded, [position], cssStylesheets.get(embedded))[0];\n\t\t},\n\t\tonDocumentRemoved(document: TextDocument) {\n\t\t\tembeddedCSSDocuments.onDocumentRemoved(document);\n\t\t\tcssStylesheets.onDocumentRemoved(document);\n\t\t},\n\t\tdispose() {\n\t\t\tembeddedCSSDocuments.dispose();\n\t\t\tcssStylesheets.dispose();\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextDocument, Position, LanguageService, TokenType, Range } from './languageModes';\n\nexport interface LanguageRange extends Range {\n\tlanguageId: string | undefined;\n\tattributeValue?: boolean;\n}\n\nexport interface HTMLDocumentRegions {\n\tgetEmbeddedDocument(languageId: string, ignoreAttributeValues?: boolean): TextDocument;\n\tgetLanguageRanges(range: Range): LanguageRange[];\n\tgetLanguageAtPosition(position: Position): string | undefined;\n\tgetLanguagesInDocument(): string[];\n\tgetImportedScripts(): string[];\n}\n\nexport const CSS_STYLE_RULE = '__';\n\ninterface EmbeddedRegion { languageId: string | undefined; start: number; end: number; attributeValue?: boolean }\n\n\nexport function getDocumentRegions(languageService: LanguageService, document: TextDocument): HTMLDocumentRegions {\n\tconst regions: EmbeddedRegion[] = [];\n\tconst scanner = languageService.createScanner(document.getText());\n\tlet lastTagName: string = '';\n\tlet lastAttributeName: string | null = null;\n\tlet languageIdFromType: string | undefined = undefined;\n\tconst importedScripts: string[] = [];\n\n\tlet token = scanner.scan();\n\twhile (token !== TokenType.EOS) {\n\t\tswitch (token) {\n\t\t\tcase TokenType.StartTag:\n\t\t\t\tlastTagName = scanner.getTokenText();\n\t\t\t\tlastAttributeName = null;\n\t\t\t\tlanguageIdFromType = 'javascript';\n\t\t\t\tbreak;\n\t\t\tcase TokenType.Styles:\n\t\t\t\tregions.push({ languageId: 'css', start: scanner.getTokenOffset(), end: scanner.getTokenEnd() });\n\t\t\t\tbreak;\n\t\t\tcase TokenType.Script:\n\t\t\t\tregions.push({ languageId: languageIdFromType, start: scanner.getTokenOffset(), end: scanner.getTokenEnd() });\n\t\t\t\tbreak;\n\t\t\tcase TokenType.AttributeName:\n\t\t\t\tlastAttributeName = scanner.getTokenText();\n\t\t\t\tbreak;\n\t\t\tcase TokenType.AttributeValue:\n\t\t\t\tif (lastAttributeName === 'src' && lastTagName.toLowerCase() === 'script') {\n\t\t\t\t\tlet value = scanner.getTokenText();\n\t\t\t\t\tif (value[0] === '\\'' || value[0] === '\"') {\n\t\t\t\t\t\tvalue = value.substr(1, value.length - 1);\n\t\t\t\t\t}\n\t\t\t\t\timportedScripts.push(value);\n\t\t\t\t} else if (lastAttributeName === 'type' && lastTagName.toLowerCase() === 'script') {\n\t\t\t\t\tif (/[\"'](module|(text|application)\\/(java|ecma)script|text\\/babel)[\"']/.test(scanner.getTokenText())) {\n\t\t\t\t\t\tlanguageIdFromType = 'javascript';\n\t\t\t\t\t} else if (/[\"']text\\/typescript[\"']/.test(scanner.getTokenText())) {\n\t\t\t\t\t\tlanguageIdFromType = 'typescript';\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlanguageIdFromType = undefined;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst attributeLanguageId = getAttributeLanguage(lastAttributeName!);\n\t\t\t\t\tif (attributeLanguageId) {\n\t\t\t\t\t\tlet start = scanner.getTokenOffset();\n\t\t\t\t\t\tlet end = scanner.getTokenEnd();\n\t\t\t\t\t\tconst firstChar = document.getText()[start];\n\t\t\t\t\t\tif (firstChar === '\\'' || firstChar === '\"') {\n\t\t\t\t\t\t\tstart++;\n\t\t\t\t\t\t\tend--;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tregions.push({ languageId: attributeLanguageId, start, end, attributeValue: true });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tlastAttributeName = null;\n\t\t\t\tbreak;\n\t\t}\n\t\ttoken = scanner.scan();\n\t}\n\treturn {\n\t\tgetLanguageRanges: (range: Range) => getLanguageRanges(document, regions, range),\n\t\tgetEmbeddedDocument: (languageId: string, ignoreAttributeValues: boolean) => getEmbeddedDocument(document, regions, languageId, ignoreAttributeValues),\n\t\tgetLanguageAtPosition: (position: Position) => getLanguageAtPosition(document, regions, position),\n\t\tgetLanguagesInDocument: () => getLanguagesInDocument(document, regions),\n\t\tgetImportedScripts: () => importedScripts\n\t};\n}\n\n\nfunction getLanguageRanges(document: TextDocument, regions: EmbeddedRegion[], range: Range): LanguageRange[] {\n\tconst result: LanguageRange[] = [];\n\tlet currentPos = range ? range.start : Position.create(0, 0);\n\tlet currentOffset = range ? document.offsetAt(range.start) : 0;\n\tconst endOffset = range ? document.offsetAt(range.end) : document.getText().length;\n\tfor (const region of regions) {\n\t\tif (region.end > currentOffset && region.start < endOffset) {\n\t\t\tconst start = Math.max(region.start, currentOffset);\n\t\t\tconst startPos = document.positionAt(start);\n\t\t\tif (currentOffset < region.start) {\n\t\t\t\tresult.push({\n\t\t\t\t\tstart: currentPos,\n\t\t\t\t\tend: startPos,\n\t\t\t\t\tlanguageId: 'html'\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst end = Math.min(region.end, endOffset);\n\t\t\tconst endPos = document.positionAt(end);\n\t\t\tif (end > region.start) {\n\t\t\t\tresult.push({\n\t\t\t\t\tstart: startPos,\n\t\t\t\t\tend: endPos,\n\t\t\t\t\tlanguageId: region.languageId,\n\t\t\t\t\tattributeValue: region.attributeValue\n\t\t\t\t});\n\t\t\t}\n\t\t\tcurrentOffset = end;\n\t\t\tcurrentPos = endPos;\n\t\t}\n\t}\n\tif (currentOffset < endOffset) {\n\t\tconst endPos = range ? range.end : document.positionAt(endOffset);\n\t\tresult.push({\n\t\t\tstart: currentPos,\n\t\t\tend: endPos,\n\t\t\tlanguageId: 'html'\n\t\t});\n\t}\n\treturn result;\n}\n\nfunction getLanguagesInDocument(_document: TextDocument, regions: EmbeddedRegion[]): string[] {\n\tconst result = [];\n\tfor (const region of regions) {\n\t\tif (region.languageId && result.indexOf(region.languageId) === -1) {\n\t\t\tresult.push(region.languageId);\n\t\t\tif (result.length === 3) {\n\t\t\t\treturn result;\n\t\t\t}\n\t\t}\n\t}\n\tresult.push('html');\n\treturn result;\n}\n\nfunction getLanguageAtPosition(document: TextDocument, regions: EmbeddedRegion[], position: Position): string | undefined {\n\tconst offset = document.offsetAt(position);\n\tfor (const region of regions) {\n\t\tif (region.start <= offset) {\n\t\t\tif (offset <= region.end) {\n\t\t\t\treturn region.languageId;\n\t\t\t}\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t}\n\treturn 'html';\n}\n\nfunction getEmbeddedDocument(document: TextDocument, contents: EmbeddedRegion[], languageId: string, ignoreAttributeValues: boolean): TextDocument {\n\tlet currentPos = 0;\n\tconst oldContent = document.getText();\n\tlet result = '';\n\tlet lastSuffix = '';\n\tfor (const c of contents) {\n\t\tif (c.languageId === languageId && (!ignoreAttributeValues || !c.attributeValue)) {\n\t\t\tresult = substituteWithWhitespace(result, currentPos, c.start, oldContent, lastSuffix, getPrefix(c));\n\t\t\tresult += updateContent(c, oldContent.substring(c.start, c.end));\n\t\t\tcurrentPos = c.end;\n\t\t\tlastSuffix = getSuffix(c);\n\t\t}\n\t}\n\tresult = substituteWithWhitespace(result, currentPos, oldContent.length, oldContent, lastSuffix, '');\n\treturn TextDocument.create(document.uri, languageId, document.version, result);\n}\n\nfunction getPrefix(c: EmbeddedRegion) {\n\tif (c.attributeValue) {\n\t\tswitch (c.languageId) {\n\t\t\tcase 'css': return CSS_STYLE_RULE + '{';\n\t\t}\n\t}\n\treturn '';\n}\nfunction getSuffix(c: EmbeddedRegion) {\n\tif (c.attributeValue) {\n\t\tswitch (c.languageId) {\n\t\t\tcase 'css': return '}';\n\t\t\tcase 'javascript': return ';';\n\t\t}\n\t}\n\treturn '';\n}\nfunction updateContent(c: EmbeddedRegion, content: string): string {\n\tif (!c.attributeValue && c.languageId === 'javascript') {\n\t\treturn content.replace(`<!--`, `/* `).replace(`-->`, ` */`);\n\t}\n\treturn content;\n}\n\nfunction substituteWithWhitespace(result: string, start: number, end: number, oldContent: string, before: string, after: string) {\n\tresult += before;\n\tlet accumulatedWS = -before.length; // start with a negative value to account for the before string\n\tfor (let i = start; i < end; i++) {\n\t\tconst ch = oldContent[i];\n\t\tif (ch === '\\n' || ch === '\\r') {\n\t\t\t// only write new lines, skip the whitespace\n\t\t\taccumulatedWS = 0;\n\t\t\tresult += ch;\n\t\t} else {\n\t\t\taccumulatedWS++;\n\t\t}\n\t}\n\tresult = append(result, ' ', accumulatedWS - after.length);\n\tresult += after;\n\treturn result;\n}\n\nfunction append(result: string, str: string, n: number): string {\n\twhile (n > 0) {\n\t\tif (n & 1) {\n\t\t\tresult += str;\n\t\t}\n\t\tn >>= 1;\n\t\tstr += str;\n\t}\n\treturn result;\n}\n\nfunction getAttributeLanguage(attributeName: string): string | null {\n\tconst match = attributeName.match(/^(style)$|^(on\\w+)$/i);\n\tif (!match) {\n\t\treturn null;\n\t}\n\treturn match[1] ? 'css' : 'javascript';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LanguageModes, Settings, LanguageModeRange, TextDocument, Range, TextEdit, FormattingOptions, Position } from './languageModes';\nimport { pushAll } from '../utils/arrays';\nimport { isEOL } from '../utils/strings';\n\nexport async function format(languageModes: LanguageModes, document: TextDocument, formatRange: Range, formattingOptions: FormattingOptions, settings: Settings | undefined, enabledModes: { [mode: string]: boolean }) {\n\tconst result: TextEdit[] = [];\n\n\tconst endPos = formatRange.end;\n\tlet endOffset = document.offsetAt(endPos);\n\tconst content = document.getText();\n\tif (endPos.character === 0 && endPos.line > 0 && endOffset !== content.length) {\n\t\t// if selection ends after a new line, exclude that new line\n\t\tconst prevLineStart = document.offsetAt(Position.create(endPos.line - 1, 0));\n\t\twhile (isEOL(content, endOffset - 1) && endOffset > prevLineStart) {\n\t\t\tendOffset--;\n\t\t}\n\t\tformatRange = Range.create(formatRange.start, document.positionAt(endOffset));\n\t}\n\n\n\t// run the html formatter on the full range and pass the result content to the embedded formatters.\n\t// from the final content create a single edit\n\t// advantages of this approach are\n\t//  - correct indents in the html document\n\t//  - correct initial indent for embedded formatters\n\t//  - no worrying of overlapping edits\n\n\t// make sure we start in html\n\tconst allRanges = languageModes.getModesInRange(document, formatRange);\n\tlet i = 0;\n\tlet startPos = formatRange.start;\n\tconst isHTML = (range: LanguageModeRange) => range.mode && range.mode.getId() === 'html';\n\n\twhile (i < allRanges.length && !isHTML(allRanges[i])) {\n\t\tconst range = allRanges[i];\n\t\tif (!range.attributeValue && range.mode && range.mode.format) {\n\t\t\tconst edits = await range.mode.format(document, Range.create(startPos, range.end), formattingOptions, settings);\n\t\t\tpushAll(result, edits);\n\t\t}\n\t\tstartPos = range.end;\n\t\ti++;\n\t}\n\tif (i === allRanges.length) {\n\t\treturn result;\n\t}\n\t// modify the range\n\tformatRange = Range.create(startPos, formatRange.end);\n\n\t// perform a html format and apply changes to a new document\n\tconst htmlMode = languageModes.getMode('html')!;\n\tconst htmlEdits = await htmlMode.format!(document, formatRange, formattingOptions, settings);\n\tlet htmlFormattedContent = TextDocument.applyEdits(document, htmlEdits);\n\tif (formattingOptions.insertFinalNewline && endOffset === content.length && !htmlFormattedContent.endsWith('\\n')) {\n\t\thtmlFormattedContent = htmlFormattedContent + '\\n';\n\t\thtmlEdits.push(TextEdit.insert(endPos, '\\n'));\n\t}\n\tconst newDocument = TextDocument.create(document.uri + '.tmp', document.languageId, document.version, htmlFormattedContent);\n\ttry {\n\t\t// run embedded formatters on html formatted content: - formatters see correct initial indent\n\t\tconst afterFormatRangeLength = document.getText().length - document.offsetAt(formatRange.end); // length of unchanged content after replace range\n\t\tconst newFormatRange = Range.create(formatRange.start, newDocument.positionAt(htmlFormattedContent.length - afterFormatRangeLength));\n\t\tconst embeddedRanges = languageModes.getModesInRange(newDocument, newFormatRange);\n\n\t\tconst embeddedEdits: TextEdit[] = [];\n\n\t\tfor (const r of embeddedRanges) {\n\t\t\tconst mode = r.mode;\n\t\t\tif (mode && mode.format && enabledModes[mode.getId()] && !r.attributeValue) {\n\t\t\t\tconst edits = await mode.format(newDocument, r, formattingOptions, settings);\n\t\t\t\tfor (const edit of edits) {\n\t\t\t\t\tembeddedEdits.push(edit);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (embeddedEdits.length === 0) {\n\t\t\tpushAll(result, htmlEdits);\n\t\t\treturn result;\n\t\t}\n\n\t\t// apply all embedded format edits and create a single edit for all changes\n\t\tconst resultContent = TextDocument.applyEdits(newDocument, embeddedEdits);\n\t\tconst resultReplaceText = resultContent.substring(document.offsetAt(formatRange.start), resultContent.length - afterFormatRangeLength);\n\n\t\tresult.push(TextEdit.replace(formatRange, resultReplaceText));\n\t\treturn result;\n\t} finally {\n\t\tlanguageModes.onDocumentRemoved(newDocument);\n\t}\n\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextDocument, FoldingRange, Position, Range, LanguageModes, LanguageMode } from './languageModes';\nimport { CancellationToken } from 'vscode-languageserver';\n\nexport async function getFoldingRanges(languageModes: LanguageModes, document: TextDocument, maxRanges: number | undefined, _cancellationToken: CancellationToken | null): Promise<FoldingRange[]> {\n\tconst htmlMode = languageModes.getMode('html');\n\tconst range = Range.create(Position.create(0, 0), Position.create(document.lineCount, 0));\n\tlet result: FoldingRange[] = [];\n\tif (htmlMode && htmlMode.getFoldingRanges) {\n\t\tresult.push(... await htmlMode.getFoldingRanges(document));\n\t}\n\n\t// cache folding ranges per mode\n\tconst rangesPerMode: { [mode: string]: FoldingRange[] } = Object.create(null);\n\tconst getRangesForMode = async (mode: LanguageMode) => {\n\t\tif (mode.getFoldingRanges) {\n\t\t\tlet ranges = rangesPerMode[mode.getId()];\n\t\t\tif (!Array.isArray(ranges)) {\n\t\t\t\tranges = await mode.getFoldingRanges(document) || [];\n\t\t\t\trangesPerMode[mode.getId()] = ranges;\n\t\t\t}\n\t\t\treturn ranges;\n\t\t}\n\t\treturn [];\n\t};\n\n\tconst modeRanges = languageModes.getModesInRange(document, range);\n\tfor (const modeRange of modeRanges) {\n\t\tconst mode = modeRange.mode;\n\t\tif (mode && mode !== htmlMode && !modeRange.attributeValue) {\n\t\t\tconst ranges = await getRangesForMode(mode);\n\t\t\tresult.push(...ranges.filter(r => r.startLine >= modeRange.start.line && r.endLine < modeRange.end.line));\n\t\t}\n\t}\n\tif (maxRanges && result.length > maxRanges) {\n\t\tresult = limitRanges(result, maxRanges);\n\t}\n\treturn result;\n}\n\nfunction limitRanges(ranges: FoldingRange[], maxRanges: number) {\n\tranges = ranges.sort((r1, r2) => {\n\t\tlet diff = r1.startLine - r2.startLine;\n\t\tif (diff === 0) {\n\t\t\tdiff = r1.endLine - r2.endLine;\n\t\t}\n\t\treturn diff;\n\t});\n\n\t// compute each range's nesting level in 'nestingLevels'.\n\t// count the number of ranges for each level in 'nestingLevelCounts'\n\tlet top: FoldingRange | undefined = undefined;\n\tconst previous: FoldingRange[] = [];\n\tconst nestingLevels: number[] = [];\n\tconst nestingLevelCounts: number[] = [];\n\n\tconst setNestingLevel = (index: number, level: number) => {\n\t\tnestingLevels[index] = level;\n\t\tif (level < 30) {\n\t\t\tnestingLevelCounts[level] = (nestingLevelCounts[level] || 0) + 1;\n\t\t}\n\t};\n\n\t// compute nesting levels and sanitize\n\tfor (let i = 0; i < ranges.length; i++) {\n\t\tconst entry = ranges[i];\n\t\tif (!top) {\n\t\t\ttop = entry;\n\t\t\tsetNestingLevel(i, 0);\n\t\t} else {\n\t\t\tif (entry.startLine > top.startLine) {\n\t\t\t\tif (entry.endLine <= top.endLine) {\n\t\t\t\t\tprevious.push(top);\n\t\t\t\t\ttop = entry;\n\t\t\t\t\tsetNestingLevel(i, previous.length);\n\t\t\t\t} else if (entry.startLine > top.endLine) {\n\t\t\t\t\tdo {\n\t\t\t\t\t\ttop = previous.pop();\n\t\t\t\t\t} while (top && entry.startLine > top.endLine);\n\t\t\t\t\tif (top) {\n\t\t\t\t\t\tprevious.push(top);\n\t\t\t\t\t}\n\t\t\t\t\ttop = entry;\n\t\t\t\t\tsetNestingLevel(i, previous.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\tlet entries = 0;\n\tlet maxLevel = 0;\n\tfor (let i = 0; i < nestingLevelCounts.length; i++) {\n\t\tconst n = nestingLevelCounts[i];\n\t\tif (n) {\n\t\t\tif (n + entries > maxRanges) {\n\t\t\t\tmaxLevel = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tentries += n;\n\t\t}\n\t}\n\tconst result = [];\n\tfor (let i = 0; i < ranges.length; i++) {\n\t\tconst level = nestingLevels[i];\n\t\tif (typeof level === 'number') {\n\t\t\tif (level < maxLevel || (level === maxLevel && entries++ < maxRanges)) {\n\t\t\t\tresult.push(ranges[i]);\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getLanguageModelCache } from '../languageModelCache';\nimport {\n\tLanguageService as HTMLLanguageService, HTMLDocument, DocumentContext, FormattingOptions,\n\tHTMLFormatConfiguration, SelectionRange,\n\tTextDocument, Position, Range, FoldingRange,\n\tLanguageMode, Workspace, Settings\n} from './languageModes';\n\nexport function getHTMLMode(htmlLanguageService: HTMLLanguageService, workspace: Workspace): LanguageMode {\n\tconst htmlDocuments = getLanguageModelCache<HTMLDocument>(10, 60, document => htmlLanguageService.parseHTMLDocument(document));\n\treturn {\n\t\tgetId() {\n\t\t\treturn 'html';\n\t\t},\n\t\tasync getSelectionRange(document: TextDocument, position: Position): Promise<SelectionRange> {\n\t\t\treturn htmlLanguageService.getSelectionRanges(document, [position])[0];\n\t\t},\n\t\tdoComplete(document: TextDocument, position: Position, documentContext: DocumentContext, settings = workspace.settings) {\n\t\t\tconst htmlSettings = settings?.html;\n\t\t\tconst options = merge(htmlSettings?.suggest, {});\n\t\t\toptions.hideAutoCompleteProposals = htmlSettings?.autoClosingTags === true;\n\t\t\toptions.attributeDefaultValue = htmlSettings?.completion?.attributeDefaultValue ?? 'doublequotes';\n\n\t\t\tconst htmlDocument = htmlDocuments.get(document);\n\t\t\tconst completionList = htmlLanguageService.doComplete2(document, position, htmlDocument, documentContext, options);\n\t\t\treturn completionList;\n\t\t},\n\t\tasync doHover(document: TextDocument, position: Position, settings?: Settings) {\n\t\t\treturn htmlLanguageService.doHover(document, position, htmlDocuments.get(document), settings?.html?.hover);\n\t\t},\n\t\tasync findDocumentHighlight(document: TextDocument, position: Position) {\n\t\t\treturn htmlLanguageService.findDocumentHighlights(document, position, htmlDocuments.get(document));\n\t\t},\n\t\tasync findDocumentLinks(document: TextDocument, documentContext: DocumentContext) {\n\t\t\treturn htmlLanguageService.findDocumentLinks(document, documentContext);\n\t\t},\n\t\tasync findDocumentSymbols(document: TextDocument) {\n\t\t\treturn htmlLanguageService.findDocumentSymbols(document, htmlDocuments.get(document));\n\t\t},\n\t\tasync format(document: TextDocument, range: Range, formatParams: FormattingOptions, settings = workspace.settings) {\n\t\t\tconst formatSettings: HTMLFormatConfiguration = merge(settings?.html?.format, {});\n\t\t\tif (formatSettings.contentUnformatted) {\n\t\t\t\tformatSettings.contentUnformatted = formatSettings.contentUnformatted + ',script';\n\t\t\t} else {\n\t\t\t\tformatSettings.contentUnformatted = 'script';\n\t\t\t}\n\t\t\tmerge(formatParams, formatSettings);\n\t\t\treturn htmlLanguageService.format(document, range, formatSettings);\n\t\t},\n\t\tasync getFoldingRanges(document: TextDocument): Promise<FoldingRange[]> {\n\t\t\treturn htmlLanguageService.getFoldingRanges(document);\n\t\t},\n\t\tasync doAutoInsert(document: TextDocument, position: Position, kind: 'autoQuote' | 'autoClose', settings = workspace.settings) {\n\t\t\tconst offset = document.offsetAt(position);\n\t\t\tconst text = document.getText();\n\t\t\tif (kind === 'autoQuote') {\n\t\t\t\tif (offset > 0 && text.charAt(offset - 1) === '=') {\n\t\t\t\t\tconst htmlSettings = settings?.html;\n\t\t\t\t\tconst options = merge(htmlSettings?.suggest, {});\n\t\t\t\t\toptions.attributeDefaultValue = htmlSettings?.completion?.attributeDefaultValue ?? 'doublequotes';\n\n\t\t\t\t\treturn htmlLanguageService.doQuoteComplete(document, position, htmlDocuments.get(document), options);\n\t\t\t\t}\n\t\t\t} else if (kind === 'autoClose') {\n\t\t\t\tif (offset > 0 && text.charAt(offset - 1).match(/[>\\/]/g)) {\n\t\t\t\t\treturn htmlLanguageService.doTagComplete(document, position, htmlDocuments.get(document));\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tasync doRename(document: TextDocument, position: Position, newName: string) {\n\t\t\tconst htmlDocument = htmlDocuments.get(document);\n\t\t\treturn htmlLanguageService.doRename(document, position, newName, htmlDocument);\n\t\t},\n\t\tasync onDocumentRemoved(document: TextDocument) {\n\t\t\thtmlDocuments.onDocumentRemoved(document);\n\t\t},\n\t\tasync findMatchingTagPosition(document: TextDocument, position: Position) {\n\t\t\tconst htmlDocument = htmlDocuments.get(document);\n\t\t\treturn htmlLanguageService.findMatchingTagPosition(document, position, htmlDocument);\n\t\t},\n\t\tasync doLinkedEditing(document: TextDocument, position: Position) {\n\t\t\tconst htmlDocument = htmlDocuments.get(document);\n\t\t\treturn htmlLanguageService.findLinkedEditingRanges(document, position, htmlDocument);\n\t\t},\n\t\tdispose() {\n\t\t\thtmlDocuments.dispose();\n\t\t}\n\t};\n}\n\nfunction merge(src: any, dst: any): any {\n\tif (src) {\n\t\tfor (const key in src) {\n\t\t\tif (src.hasOwnProperty(key)) {\n\t\t\t\tdst[key] = src[key];\n\t\t\t}\n\t\t}\n\t}\n\treturn dst;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LanguageModelCache, getLanguageModelCache } from '../languageModelCache';\nimport {\n\tSymbolInformation, SymbolKind, CompletionItem, Location, SignatureHelp, SignatureInformation, ParameterInformation,\n\tDefinition, TextEdit, TextDocument, Diagnostic, DiagnosticSeverity, Range, CompletionItemKind, Hover,\n\tDocumentHighlight, DocumentHighlightKind, CompletionList, Position, FormattingOptions, FoldingRange, FoldingRangeKind, SelectionRange,\n\tLanguageMode, Settings, SemanticTokenData, Workspace, DocumentContext, CompletionItemData, isCompletionItemData\n} from './languageModes';\nimport { getWordAtText, isWhitespaceOnly, repeat } from '../utils/strings';\nimport { HTMLDocumentRegions } from './embeddedSupport';\n\nimport * as ts from 'typescript';\nimport { getSemanticTokens, getSemanticTokenLegend } from './javascriptSemanticTokens';\n\nconst JS_WORD_REGEX = /(-?\\d*\\.\\d\\w*)|([^\\`\\~\\!\\@\\#\\%\\^\\&\\*\\(\\)\\-\\=\\+\\[\\{\\]\\}\\\\\\|\\;\\:\\'\\\"\\,\\.\\<\\>\\/\\?\\s]+)/g;\n\nfunction getLanguageServiceHost(scriptKind: ts.ScriptKind) {\n\tconst compilerOptions: ts.CompilerOptions = { allowNonTsExtensions: true, allowJs: true, lib: ['lib.es2020.full.d.ts'], target: ts.ScriptTarget.Latest, moduleResolution: ts.ModuleResolutionKind.Classic, experimentalDecorators: false };\n\n\tlet currentTextDocument = TextDocument.create('init', 'javascript', 1, '');\n\tconst jsLanguageService = import(/* webpackChunkName: \"javascriptLibs\" */ './javascriptLibs.js').then(libs => {\n\t\tconst host: ts.LanguageServiceHost = {\n\t\t\tgetCompilationSettings: () => compilerOptions,\n\t\t\tgetScriptFileNames: () => [currentTextDocument.uri, 'jquery'],\n\t\t\tgetScriptKind: (fileName) => {\n\t\t\t\tif (fileName === currentTextDocument.uri) {\n\t\t\t\t\treturn scriptKind;\n\t\t\t\t}\n\t\t\t\treturn fileName.substr(fileName.length - 2) === 'ts' ? ts.ScriptKind.TS : ts.ScriptKind.JS;\n\t\t\t},\n\t\t\tgetScriptVersion: (fileName: string) => {\n\t\t\t\tif (fileName === currentTextDocument.uri) {\n\t\t\t\t\treturn String(currentTextDocument.version);\n\t\t\t\t}\n\t\t\t\treturn '1'; // default lib an jquery.d.ts are static\n\t\t\t},\n\t\t\tgetScriptSnapshot: (fileName: string) => {\n\t\t\t\tlet text = '';\n\t\t\t\tif (fileName === currentTextDocument.uri) {\n\t\t\t\t\ttext = currentTextDocument.getText();\n\t\t\t\t} else {\n\t\t\t\t\ttext = libs.loadLibrary(fileName);\n\t\t\t\t}\n\t\t\t\treturn {\n\t\t\t\t\tgetText: (start, end) => text.substring(start, end),\n\t\t\t\t\tgetLength: () => text.length,\n\t\t\t\t\tgetChangeRange: () => undefined\n\t\t\t\t};\n\t\t\t},\n\t\t\tgetCurrentDirectory: () => '',\n\t\t\tgetDefaultLibFileName: (_options: ts.CompilerOptions) => 'es2020.full',\n\t\t\treadFile: (path: string, _encoding?: string | undefined): string | undefined => {\n\t\t\t\tif (path === currentTextDocument.uri) {\n\t\t\t\t\treturn currentTextDocument.getText();\n\t\t\t\t} else {\n\t\t\t\t\treturn libs.loadLibrary(path);\n\t\t\t\t}\n\t\t\t},\n\t\t\tfileExists: (path: string): boolean => {\n\t\t\t\tif (path === currentTextDocument.uri) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else {\n\t\t\t\t\treturn !!libs.loadLibrary(path);\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectoryExists: (path: string): boolean => {\n\t\t\t\t// typescript tries to first find libraries in node_modules/@types and node_modules/@typescript\n\t\t\t\t// there's no node_modules in our setup\n\t\t\t\tif (path.startsWith('node_modules')) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\treturn true;\n\n\t\t\t}\n\t\t};\n\t\treturn ts.createLanguageService(host);\n\t});\n\treturn {\n\t\tasync getLanguageService(jsDocument: TextDocument): Promise<ts.LanguageService> {\n\t\t\tcurrentTextDocument = jsDocument;\n\t\t\treturn jsLanguageService;\n\t\t},\n\t\tgetCompilationSettings() {\n\t\t\treturn compilerOptions;\n\t\t},\n\t\tdispose() {\n\t\t\tjsLanguageService.then(s => s.dispose());\n\t\t}\n\t};\n}\n\nconst ignoredErrors = [\n\t1108,  /* A_return_statement_can_only_be_used_within_a_function_body_1108 */\n\t2792, /* Cannot_find_module_0_Did_you_mean_to_set_the_moduleResolution_option_to_node_or_to_add_aliases_to_the_paths_option */\n];\n\nexport function getJavaScriptMode(documentRegions: LanguageModelCache<HTMLDocumentRegions>, languageId: 'javascript' | 'typescript', workspace: Workspace): LanguageMode {\n\tconst jsDocuments = getLanguageModelCache<TextDocument>(10, 60, document => documentRegions.get(document).getEmbeddedDocument(languageId));\n\n\tconst host = getLanguageServiceHost(languageId === 'javascript' ? ts.ScriptKind.JS : ts.ScriptKind.TS);\n\tconst globalSettings: Settings = {};\n\n\tfunction updateHostSettings(settings: Settings) {\n\t\tconst hostSettings = host.getCompilationSettings();\n\t\thostSettings.experimentalDecorators = settings?.['js/ts']?.implicitProjectConfig?.experimentalDecorators;\n\t\thostSettings.strictNullChecks = settings?.['js/ts']?.implicitProjectConfig.strictNullChecks;\n\t}\n\n\treturn {\n\t\tgetId() {\n\t\t\treturn languageId;\n\t\t},\n\t\tasync doValidation(document: TextDocument, settings = workspace.settings): Promise<Diagnostic[]> {\n\t\t\tupdateHostSettings(settings);\n\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst languageService = await host.getLanguageService(jsDocument);\n\t\t\tconst syntaxDiagnostics: ts.Diagnostic[] = languageService.getSyntacticDiagnostics(jsDocument.uri);\n\t\t\tconst semanticDiagnostics = languageService.getSemanticDiagnostics(jsDocument.uri);\n\t\t\treturn syntaxDiagnostics.concat(semanticDiagnostics).filter(d => !ignoredErrors.includes(d.code)).map((diag: ts.Diagnostic): Diagnostic => {\n\t\t\t\treturn {\n\t\t\t\t\trange: convertRange(jsDocument, diag),\n\t\t\t\t\tseverity: DiagnosticSeverity.Error,\n\t\t\t\t\tsource: languageId,\n\t\t\t\t\tmessage: ts.flattenDiagnosticMessageText(diag.messageText, '\\n')\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tasync doComplete(document: TextDocument, position: Position, _documentContext: DocumentContext): Promise<CompletionList> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tconst offset = jsDocument.offsetAt(position);\n\t\t\tconst completions = jsLanguageService.getCompletionsAtPosition(jsDocument.uri, offset, { includeExternalModuleExports: false, includeInsertTextCompletions: false });\n\t\t\tif (!completions) {\n\t\t\t\treturn { isIncomplete: false, items: [] };\n\t\t\t}\n\t\t\tconst replaceRange = convertRange(jsDocument, getWordAtText(jsDocument.getText(), offset, JS_WORD_REGEX));\n\t\t\treturn {\n\t\t\t\tisIncomplete: false,\n\t\t\t\titems: completions.entries.map(entry => {\n\t\t\t\t\tconst data: CompletionItemData = { // data used for resolving item details (see 'doResolve')\n\t\t\t\t\t\tlanguageId,\n\t\t\t\t\t\turi: document.uri,\n\t\t\t\t\t\toffset: offset\n\t\t\t\t\t};\n\t\t\t\t\treturn {\n\t\t\t\t\t\turi: document.uri,\n\t\t\t\t\t\tposition: position,\n\t\t\t\t\t\tlabel: entry.name,\n\t\t\t\t\t\tsortText: entry.sortText,\n\t\t\t\t\t\tkind: convertKind(entry.kind),\n\t\t\t\t\t\ttextEdit: TextEdit.replace(replaceRange, entry.name),\n\t\t\t\t\t\tdata\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t};\n\t\t},\n\t\tasync doResolve(document: TextDocument, item: CompletionItem): Promise<CompletionItem> {\n\t\t\tif (isCompletionItemData(item.data)) {\n\t\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\t\tconst details = jsLanguageService.getCompletionEntryDetails(jsDocument.uri, item.data.offset, item.label, undefined, undefined, undefined, undefined);\n\t\t\t\tif (details) {\n\t\t\t\t\titem.detail = ts.displayPartsToString(details.displayParts);\n\t\t\t\t\titem.documentation = ts.displayPartsToString(details.documentation);\n\t\t\t\t\tdelete item.data;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn item;\n\t\t},\n\t\tasync doHover(document: TextDocument, position: Position): Promise<Hover | null> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tconst info = jsLanguageService.getQuickInfoAtPosition(jsDocument.uri, jsDocument.offsetAt(position));\n\t\t\tif (info) {\n\t\t\t\tconst contents = ts.displayPartsToString(info.displayParts);\n\t\t\t\treturn {\n\t\t\t\t\trange: convertRange(jsDocument, info.textSpan),\n\t\t\t\t\tcontents: ['```typescript', contents, '```'].join('\\n')\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tasync doSignatureHelp(document: TextDocument, position: Position): Promise<SignatureHelp | null> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tconst signHelp = jsLanguageService.getSignatureHelpItems(jsDocument.uri, jsDocument.offsetAt(position), undefined);\n\t\t\tif (signHelp) {\n\t\t\t\tconst ret: SignatureHelp = {\n\t\t\t\t\tactiveSignature: signHelp.selectedItemIndex,\n\t\t\t\t\tactiveParameter: signHelp.argumentIndex,\n\t\t\t\t\tsignatures: []\n\t\t\t\t};\n\t\t\t\tsignHelp.items.forEach(item => {\n\n\t\t\t\t\tconst signature: SignatureInformation = {\n\t\t\t\t\t\tlabel: '',\n\t\t\t\t\t\tdocumentation: undefined,\n\t\t\t\t\t\tparameters: []\n\t\t\t\t\t};\n\n\t\t\t\t\tsignature.label += ts.displayPartsToString(item.prefixDisplayParts);\n\t\t\t\t\titem.parameters.forEach((p, i, a) => {\n\t\t\t\t\t\tconst label = ts.displayPartsToString(p.displayParts);\n\t\t\t\t\t\tconst parameter: ParameterInformation = {\n\t\t\t\t\t\t\tlabel: label,\n\t\t\t\t\t\t\tdocumentation: ts.displayPartsToString(p.documentation)\n\t\t\t\t\t\t};\n\t\t\t\t\t\tsignature.label += label;\n\t\t\t\t\t\tsignature.parameters!.push(parameter);\n\t\t\t\t\t\tif (i < a.length - 1) {\n\t\t\t\t\t\t\tsignature.label += ts.displayPartsToString(item.separatorDisplayParts);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tsignature.label += ts.displayPartsToString(item.suffixDisplayParts);\n\t\t\t\t\tret.signatures.push(signature);\n\t\t\t\t});\n\t\t\t\treturn ret;\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tasync doRename(document: TextDocument, position: Position, newName: string) {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tconst jsDocumentPosition = jsDocument.offsetAt(position);\n\t\t\tconst { canRename } = jsLanguageService.getRenameInfo(jsDocument.uri, jsDocumentPosition);\n\t\t\tif (!canRename) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tconst renameInfos = jsLanguageService.findRenameLocations(jsDocument.uri, jsDocumentPosition, false, false);\n\n\t\t\tconst edits: TextEdit[] = [];\n\t\t\trenameInfos?.map(renameInfo => {\n\t\t\t\tedits.push({\n\t\t\t\t\trange: convertRange(jsDocument, renameInfo.textSpan),\n\t\t\t\t\tnewText: newName,\n\t\t\t\t});\n\t\t\t});\n\n\t\t\treturn {\n\t\t\t\tchanges: { [document.uri]: edits },\n\t\t\t};\n\t\t},\n\t\tasync findDocumentHighlight(document: TextDocument, position: Position): Promise<DocumentHighlight[]> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tconst highlights = jsLanguageService.getDocumentHighlights(jsDocument.uri, jsDocument.offsetAt(position), [jsDocument.uri]);\n\t\t\tconst out: DocumentHighlight[] = [];\n\t\t\tfor (const entry of highlights || []) {\n\t\t\t\tfor (const highlight of entry.highlightSpans) {\n\t\t\t\t\tout.push({\n\t\t\t\t\t\trange: convertRange(jsDocument, highlight.textSpan),\n\t\t\t\t\t\tkind: highlight.kind === 'writtenReference' ? DocumentHighlightKind.Write : DocumentHighlightKind.Text\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn out;\n\t\t},\n\t\tasync findDocumentSymbols(document: TextDocument): Promise<SymbolInformation[]> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tconst items = jsLanguageService.getNavigationBarItems(jsDocument.uri);\n\t\t\tif (items) {\n\t\t\t\tconst result: SymbolInformation[] = [];\n\t\t\t\tconst existing = Object.create(null);\n\t\t\t\tconst collectSymbols = (item: ts.NavigationBarItem, containerLabel?: string) => {\n\t\t\t\t\tconst sig = item.text + item.kind + item.spans[0].start;\n\t\t\t\t\tif (item.kind !== 'script' && !existing[sig]) {\n\t\t\t\t\t\tconst symbol: SymbolInformation = {\n\t\t\t\t\t\t\tname: item.text,\n\t\t\t\t\t\t\tkind: convertSymbolKind(item.kind),\n\t\t\t\t\t\t\tlocation: {\n\t\t\t\t\t\t\t\turi: document.uri,\n\t\t\t\t\t\t\t\trange: convertRange(jsDocument, item.spans[0])\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\tcontainerName: containerLabel\n\t\t\t\t\t\t};\n\t\t\t\t\t\texisting[sig] = true;\n\t\t\t\t\t\tresult.push(symbol);\n\t\t\t\t\t\tcontainerLabel = item.text;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (item.childItems && item.childItems.length > 0) {\n\t\t\t\t\t\tfor (const child of item.childItems) {\n\t\t\t\t\t\t\tcollectSymbols(child, containerLabel);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t\titems.forEach(item => collectSymbols(item));\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t\tasync findDefinition(document: TextDocument, position: Position): Promise<Definition | null> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tconst definition = jsLanguageService.getDefinitionAtPosition(jsDocument.uri, jsDocument.offsetAt(position));\n\t\t\tif (definition) {\n\t\t\t\treturn definition.filter(d => d.fileName === jsDocument.uri).map(d => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\turi: document.uri,\n\t\t\t\t\t\trange: convertRange(jsDocument, d.textSpan)\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\tasync findReferences(document: TextDocument, position: Position): Promise<Location[]> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tconst references = jsLanguageService.getReferencesAtPosition(jsDocument.uri, jsDocument.offsetAt(position));\n\t\t\tif (references) {\n\t\t\t\treturn references.filter(d => d.fileName === jsDocument.uri).map(d => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\turi: document.uri,\n\t\t\t\t\t\trange: convertRange(jsDocument, d.textSpan)\n\t\t\t\t\t};\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t\tasync getSelectionRange(document: TextDocument, position: Position): Promise<SelectionRange> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tfunction convertSelectionRange(selectionRange: ts.SelectionRange): SelectionRange {\n\t\t\t\tconst parent = selectionRange.parent ? convertSelectionRange(selectionRange.parent) : undefined;\n\t\t\t\treturn SelectionRange.create(convertRange(jsDocument, selectionRange.textSpan), parent);\n\t\t\t}\n\t\t\tconst range = jsLanguageService.getSmartSelectionRange(jsDocument.uri, jsDocument.offsetAt(position));\n\t\t\treturn convertSelectionRange(range);\n\t\t},\n\t\tasync format(document: TextDocument, range: Range, formatParams: FormattingOptions, settings: Settings = globalSettings): Promise<TextEdit[]> {\n\t\t\tconst jsDocument = documentRegions.get(document).getEmbeddedDocument('javascript', true);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\n\t\t\tconst formatterSettings = settings && settings.javascript && settings.javascript.format;\n\n\t\t\tconst initialIndentLevel = computeInitialIndent(document, range, formatParams);\n\t\t\tconst formatSettings = convertOptions(formatParams, formatterSettings, initialIndentLevel + 1);\n\t\t\tconst start = jsDocument.offsetAt(range.start);\n\t\t\tlet end = jsDocument.offsetAt(range.end);\n\t\t\tlet lastLineRange = null;\n\t\t\tif (range.end.line > range.start.line && (range.end.character === 0 || isWhitespaceOnly(jsDocument.getText().substr(end - range.end.character, range.end.character)))) {\n\t\t\t\tend -= range.end.character;\n\t\t\t\tlastLineRange = Range.create(Position.create(range.end.line, 0), range.end);\n\t\t\t}\n\t\t\tconst edits = jsLanguageService.getFormattingEditsForRange(jsDocument.uri, start, end, formatSettings);\n\t\t\tif (edits) {\n\t\t\t\tconst result = [];\n\t\t\t\tfor (const edit of edits) {\n\t\t\t\t\tif (edit.span.start >= start && edit.span.start + edit.span.length <= end) {\n\t\t\t\t\t\tresult.push({\n\t\t\t\t\t\t\trange: convertRange(jsDocument, edit.span),\n\t\t\t\t\t\t\tnewText: edit.newText\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (lastLineRange) {\n\t\t\t\t\tresult.push({\n\t\t\t\t\t\trange: lastLineRange,\n\t\t\t\t\t\tnewText: generateIndent(initialIndentLevel, formatParams)\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t}\n\t\t\treturn [];\n\t\t},\n\t\tasync getFoldingRanges(document: TextDocument): Promise<FoldingRange[]> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\tconst spans = jsLanguageService.getOutliningSpans(jsDocument.uri);\n\t\t\tconst ranges: FoldingRange[] = [];\n\t\t\tfor (const span of spans) {\n\t\t\t\tconst curr = convertRange(jsDocument, span.textSpan);\n\t\t\t\tconst startLine = curr.start.line;\n\t\t\t\tconst endLine = curr.end.line;\n\t\t\t\tif (startLine < endLine) {\n\t\t\t\t\tconst foldingRange: FoldingRange = { startLine, endLine };\n\t\t\t\t\tconst match = document.getText(curr).match(/^\\s*\\/(?:(\\/\\s*#(?:end)?region\\b)|(\\*|\\/))/);\n\t\t\t\t\tif (match) {\n\t\t\t\t\t\tfoldingRange.kind = match[1] ? FoldingRangeKind.Region : FoldingRangeKind.Comment;\n\t\t\t\t\t}\n\t\t\t\t\tranges.push(foldingRange);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ranges;\n\t\t},\n\t\tonDocumentRemoved(document: TextDocument) {\n\t\t\tjsDocuments.onDocumentRemoved(document);\n\t\t},\n\t\tasync getSemanticTokens(document: TextDocument): Promise<SemanticTokenData[]> {\n\t\t\tconst jsDocument = jsDocuments.get(document);\n\t\t\tconst jsLanguageService = await host.getLanguageService(jsDocument);\n\t\t\treturn [...getSemanticTokens(jsLanguageService, jsDocument, jsDocument.uri)];\n\t\t},\n\t\tgetSemanticTokenLegend(): { types: string[]; modifiers: string[] } {\n\t\t\treturn getSemanticTokenLegend();\n\t\t},\n\t\tdispose() {\n\t\t\thost.dispose();\n\t\t\tjsDocuments.dispose();\n\t\t}\n\t};\n}\n\n\n\n\nfunction convertRange(document: TextDocument, span: { start: number | undefined; length: number | undefined }): Range {\n\tif (typeof span.start === 'undefined') {\n\t\tconst pos = document.positionAt(0);\n\t\treturn Range.create(pos, pos);\n\t}\n\tconst startPosition = document.positionAt(span.start);\n\tconst endPosition = document.positionAt(span.start + (span.length || 0));\n\treturn Range.create(startPosition, endPosition);\n}\n\nfunction convertKind(kind: string): CompletionItemKind {\n\tswitch (kind) {\n\t\tcase Kind.primitiveType:\n\t\tcase Kind.keyword:\n\t\t\treturn CompletionItemKind.Keyword;\n\n\t\tcase Kind.const:\n\t\tcase Kind.let:\n\t\tcase Kind.variable:\n\t\tcase Kind.localVariable:\n\t\tcase Kind.alias:\n\t\tcase Kind.parameter:\n\t\t\treturn CompletionItemKind.Variable;\n\n\t\tcase Kind.memberVariable:\n\t\tcase Kind.memberGetAccessor:\n\t\tcase Kind.memberSetAccessor:\n\t\t\treturn CompletionItemKind.Field;\n\n\t\tcase Kind.function:\n\t\tcase Kind.localFunction:\n\t\t\treturn CompletionItemKind.Function;\n\n\t\tcase Kind.method:\n\t\tcase Kind.constructSignature:\n\t\tcase Kind.callSignature:\n\t\tcase Kind.indexSignature:\n\t\t\treturn CompletionItemKind.Method;\n\n\t\tcase Kind.enum:\n\t\t\treturn CompletionItemKind.Enum;\n\n\t\tcase Kind.enumMember:\n\t\t\treturn CompletionItemKind.EnumMember;\n\n\t\tcase Kind.module:\n\t\tcase Kind.externalModuleName:\n\t\t\treturn CompletionItemKind.Module;\n\n\t\tcase Kind.class:\n\t\tcase Kind.type:\n\t\t\treturn CompletionItemKind.Class;\n\n\t\tcase Kind.interface:\n\t\t\treturn CompletionItemKind.Interface;\n\n\t\tcase Kind.warning:\n\t\t\treturn CompletionItemKind.Text;\n\n\t\tcase Kind.script:\n\t\t\treturn CompletionItemKind.File;\n\n\t\tcase Kind.directory:\n\t\t\treturn CompletionItemKind.Folder;\n\n\t\tcase Kind.string:\n\t\t\treturn CompletionItemKind.Constant;\n\n\t\tdefault:\n\t\t\treturn CompletionItemKind.Property;\n\t}\n}\nconst enum Kind {\n\talias = 'alias',\n\tcallSignature = 'call',\n\tclass = 'class',\n\tconst = 'const',\n\tconstructorImplementation = 'constructor',\n\tconstructSignature = 'construct',\n\tdirectory = 'directory',\n\tenum = 'enum',\n\tenumMember = 'enum member',\n\texternalModuleName = 'external module name',\n\tfunction = 'function',\n\tindexSignature = 'index',\n\tinterface = 'interface',\n\tkeyword = 'keyword',\n\tlet = 'let',\n\tlocalFunction = 'local function',\n\tlocalVariable = 'local var',\n\tmethod = 'method',\n\tmemberGetAccessor = 'getter',\n\tmemberSetAccessor = 'setter',\n\tmemberVariable = 'property',\n\tmodule = 'module',\n\tprimitiveType = 'primitive type',\n\tscript = 'script',\n\ttype = 'type',\n\tvariable = 'var',\n\twarning = 'warning',\n\tstring = 'string',\n\tparameter = 'parameter',\n\ttypeParameter = 'type parameter'\n}\n\nfunction convertSymbolKind(kind: string): SymbolKind {\n\tswitch (kind) {\n\t\tcase Kind.module: return SymbolKind.Module;\n\t\tcase Kind.class: return SymbolKind.Class;\n\t\tcase Kind.enum: return SymbolKind.Enum;\n\t\tcase Kind.enumMember: return SymbolKind.EnumMember;\n\t\tcase Kind.interface: return SymbolKind.Interface;\n\t\tcase Kind.indexSignature: return SymbolKind.Method;\n\t\tcase Kind.callSignature: return SymbolKind.Method;\n\t\tcase Kind.method: return SymbolKind.Method;\n\t\tcase Kind.memberVariable: return SymbolKind.Property;\n\t\tcase Kind.memberGetAccessor: return SymbolKind.Property;\n\t\tcase Kind.memberSetAccessor: return SymbolKind.Property;\n\t\tcase Kind.variable: return SymbolKind.Variable;\n\t\tcase Kind.let: return SymbolKind.Variable;\n\t\tcase Kind.const: return SymbolKind.Variable;\n\t\tcase Kind.localVariable: return SymbolKind.Variable;\n\t\tcase Kind.alias: return SymbolKind.Variable;\n\t\tcase Kind.function: return SymbolKind.Function;\n\t\tcase Kind.localFunction: return SymbolKind.Function;\n\t\tcase Kind.constructSignature: return SymbolKind.Constructor;\n\t\tcase Kind.constructorImplementation: return SymbolKind.Constructor;\n\t\tcase Kind.typeParameter: return SymbolKind.TypeParameter;\n\t\tcase Kind.string: return SymbolKind.String;\n\t\tdefault: return SymbolKind.Variable;\n\t}\n}\n\nfunction convertOptions(options: FormattingOptions, formatSettings: any, initialIndentLevel: number): ts.FormatCodeSettings {\n\treturn {\n\t\tconvertTabsToSpaces: options.insertSpaces,\n\t\ttabSize: options.tabSize,\n\t\tindentSize: options.tabSize,\n\t\tindentStyle: ts.IndentStyle.Smart,\n\t\tnewLineCharacter: '\\n',\n\t\tbaseIndentSize: options.tabSize * initialIndentLevel,\n\t\tinsertSpaceAfterCommaDelimiter: Boolean(!formatSettings || formatSettings.insertSpaceAfterCommaDelimiter),\n\t\tinsertSpaceAfterConstructor: Boolean(formatSettings && formatSettings.insertSpaceAfterConstructor),\n\t\tinsertSpaceAfterSemicolonInForStatements: Boolean(!formatSettings || formatSettings.insertSpaceAfterSemicolonInForStatements),\n\t\tinsertSpaceBeforeAndAfterBinaryOperators: Boolean(!formatSettings || formatSettings.insertSpaceBeforeAndAfterBinaryOperators),\n\t\tinsertSpaceAfterKeywordsInControlFlowStatements: Boolean(!formatSettings || formatSettings.insertSpaceAfterKeywordsInControlFlowStatements),\n\t\tinsertSpaceAfterFunctionKeywordForAnonymousFunctions: Boolean(!formatSettings || formatSettings.insertSpaceAfterFunctionKeywordForAnonymousFunctions),\n\t\tinsertSpaceBeforeFunctionParenthesis: Boolean(formatSettings && formatSettings.insertSpaceBeforeFunctionParenthesis),\n\t\tinsertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis: Boolean(formatSettings && formatSettings.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis),\n\t\tinsertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets: Boolean(formatSettings && formatSettings.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets),\n\t\tinsertSpaceAfterOpeningAndBeforeClosingNonemptyBraces: Boolean(formatSettings && formatSettings.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces),\n\t\tinsertSpaceAfterOpeningAndBeforeClosingEmptyBraces: Boolean(!formatSettings || formatSettings.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces),\n\t\tinsertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces: Boolean(formatSettings && formatSettings.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces),\n\t\tinsertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces: Boolean(formatSettings && formatSettings.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces),\n\t\tinsertSpaceAfterTypeAssertion: Boolean(formatSettings && formatSettings.insertSpaceAfterTypeAssertion),\n\t\tplaceOpenBraceOnNewLineForControlBlocks: Boolean(formatSettings && formatSettings.placeOpenBraceOnNewLineForFunctions),\n\t\tplaceOpenBraceOnNewLineForFunctions: Boolean(formatSettings && formatSettings.placeOpenBraceOnNewLineForControlBlocks),\n\t\tsemicolons: formatSettings?.semicolons\n\t};\n}\n\nfunction computeInitialIndent(document: TextDocument, range: Range, options: FormattingOptions) {\n\tconst lineStart = document.offsetAt(Position.create(range.start.line, 0));\n\tconst content = document.getText();\n\n\tlet i = lineStart;\n\tlet nChars = 0;\n\tconst tabSize = options.tabSize || 4;\n\twhile (i < content.length) {\n\t\tconst ch = content.charAt(i);\n\t\tif (ch === ' ') {\n\t\t\tnChars++;\n\t\t} else if (ch === '\\t') {\n\t\t\tnChars += tabSize;\n\t\t} else {\n\t\t\tbreak;\n\t\t}\n\t\ti++;\n\t}\n\treturn Math.floor(nChars / tabSize);\n}\n\nfunction generateIndent(level: number, options: FormattingOptions) {\n\tif (options.insertSpaces) {\n\t\treturn repeat(' ', level * options.tabSize);\n\t} else {\n\t\treturn repeat('\\t', level);\n\t}\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { TextDocument, SemanticTokenData } from './languageModes';\nimport * as ts from 'typescript';\n\nexport function getSemanticTokenLegend() {\n\tif (tokenTypes.length !== TokenType._) {\n\t\tconsole.warn('TokenType has added new entries.');\n\t}\n\tif (tokenModifiers.length !== TokenModifier._) {\n\t\tconsole.warn('TokenModifier has added new entries.');\n\t}\n\treturn { types: tokenTypes, modifiers: tokenModifiers };\n}\n\nexport function* getSemanticTokens(jsLanguageService: ts.LanguageService, document: TextDocument, fileName: string): Iterable<SemanticTokenData> {\n\tconst { spans } = jsLanguageService.getEncodedSemanticClassifications(fileName, { start: 0, length: document.getText().length }, '2020' as ts.SemanticClassificationFormat);\n\n\tfor (let i = 0; i < spans.length;) {\n\t\tconst offset = spans[i++];\n\t\tconst length = spans[i++];\n\t\tconst tsClassification = spans[i++];\n\n\t\tconst tokenType = getTokenTypeFromClassification(tsClassification);\n\t\tif (tokenType === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst tokenModifiers = getTokenModifierFromClassification(tsClassification);\n\t\tconst startPos = document.positionAt(offset);\n\t\tyield {\n\t\t\tstart: startPos,\n\t\t\tlength: length,\n\t\t\ttypeIdx: tokenType,\n\t\t\tmodifierSet: tokenModifiers\n\t\t};\n\t}\n}\n\n\n// typescript encodes type and modifiers in the classification:\n// TSClassification = (TokenType + 1) << 8 + TokenModifier\n\nconst enum TokenType {\n\tclass = 0,\n\tenum = 1,\n\tinterface = 2,\n\tnamespace = 3,\n\ttypeParameter = 4,\n\ttype = 5,\n\tparameter = 6,\n\tvariable = 7,\n\tenumMember = 8,\n\tproperty = 9,\n\tfunction = 10,\n\tmethod = 11,\n\t_ = 12\n}\n\nconst enum TokenModifier {\n\tdeclaration = 0,\n\tstatic = 1,\n\tasync = 2,\n\treadonly = 3,\n\tdefaultLibrary = 4,\n\tlocal = 5,\n\t_ = 6\n}\n\nconst enum TokenEncodingConsts {\n\ttypeOffset = 8,\n\tmodifierMask = 255\n}\n\nfunction getTokenTypeFromClassification(tsClassification: number): number | undefined {\n\tif (tsClassification > TokenEncodingConsts.modifierMask) {\n\t\treturn (tsClassification >> TokenEncodingConsts.typeOffset) - 1;\n\t}\n\treturn undefined;\n}\n\nfunction getTokenModifierFromClassification(tsClassification: number) {\n\treturn tsClassification & TokenEncodingConsts.modifierMask;\n}\n\nconst tokenTypes: string[] = [];\ntokenTypes[TokenType.class] = 'class';\ntokenTypes[TokenType.enum] = 'enum';\ntokenTypes[TokenType.interface] = 'interface';\ntokenTypes[TokenType.namespace] = 'namespace';\ntokenTypes[TokenType.typeParameter] = 'typeParameter';\ntokenTypes[TokenType.type] = 'type';\ntokenTypes[TokenType.parameter] = 'parameter';\ntokenTypes[TokenType.variable] = 'variable';\ntokenTypes[TokenType.enumMember] = 'enumMember';\ntokenTypes[TokenType.property] = 'property';\ntokenTypes[TokenType.function] = 'function';\ntokenTypes[TokenType.method] = 'method';\n\nconst tokenModifiers: string[] = [];\ntokenModifiers[TokenModifier.async] = 'async';\ntokenModifiers[TokenModifier.declaration] = 'declaration';\ntokenModifiers[TokenModifier.readonly] = 'readonly';\ntokenModifiers[TokenModifier.static] = 'static';\ntokenModifiers[TokenModifier.local] = 'local';\ntokenModifiers[TokenModifier.defaultLibrary] = 'defaultLibrary';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { getCSSLanguageService } from 'vscode-css-languageservice';\nimport {\n\tDocumentContext, getLanguageService as getHTMLLanguageService, IHTMLDataProvider, ClientCapabilities\n} from 'vscode-html-languageservice';\nimport {\n\tSelectionRange,\n\tCompletionItem, CompletionList, Definition, Diagnostic, DocumentHighlight, DocumentLink, FoldingRange, FormattingOptions,\n\tHover, Location, Position, Range, SignatureHelp, SymbolInformation, TextEdit,\n\tColor, ColorInformation, ColorPresentation, WorkspaceEdit,\n\tWorkspaceFolder\n} from 'vscode-languageserver';\nimport { TextDocument } from 'vscode-languageserver-textdocument';\n\nimport { getLanguageModelCache, LanguageModelCache } from '../languageModelCache';\nimport { getCSSMode } from './cssMode';\nimport { getDocumentRegions, HTMLDocumentRegions } from './embeddedSupport';\nimport { getHTMLMode } from './htmlMode';\nimport { getJavaScriptMode } from './javascriptMode';\nimport { FileSystemProvider } from '../requests';\n\nexport {\n\tWorkspaceFolder, CompletionItem, CompletionList, CompletionItemKind, Definition, Diagnostic, DocumentHighlight, DocumentHighlightKind,\n\tDocumentLink, FoldingRange, FoldingRangeKind, FormattingOptions,\n\tHover, Location, Position, Range, SignatureHelp, SymbolInformation, SymbolKind, TextEdit,\n\tColor, ColorInformation, ColorPresentation, WorkspaceEdit,\n\tSignatureInformation, ParameterInformation, DiagnosticSeverity,\n\tSelectionRange, TextDocumentIdentifier\n} from 'vscode-languageserver';\n\nexport { ClientCapabilities, DocumentContext, LanguageService, HTMLDocument, HTMLFormatConfiguration, TokenType } from 'vscode-html-languageservice';\n\nexport { TextDocument } from 'vscode-languageserver-textdocument';\n\nexport interface Settings {\n\treadonly css?: any;\n\treadonly html?: any;\n\treadonly javascript?: any;\n\treadonly 'js/ts'?: any;\n}\n\nexport interface Workspace {\n\treadonly settings: Settings;\n\treadonly folders: WorkspaceFolder[];\n}\n\nexport interface SemanticTokenData {\n\tstart: Position;\n\tlength: number;\n\ttypeIdx: number;\n\tmodifierSet: number;\n}\n\nexport type CompletionItemData = {\n\tlanguageId: string;\n\turi: string;\n\toffset: number;\n};\n\nexport function isCompletionItemData(value: any): value is CompletionItemData {\n\treturn value && typeof value.languageId === 'string' && typeof value.uri === 'string' && typeof value.offset === 'number';\n}\n\nexport interface LanguageMode {\n\tgetId(): string;\n\tgetSelectionRange?: (document: TextDocument, position: Position) => Promise<SelectionRange>;\n\tdoValidation?: (document: TextDocument, settings?: Settings) => Promise<Diagnostic[]>;\n\tdoComplete?: (document: TextDocument, position: Position, documentContext: DocumentContext, settings?: Settings) => Promise<CompletionList>;\n\tdoResolve?: (document: TextDocument, item: CompletionItem) => Promise<CompletionItem>;\n\tdoHover?: (document: TextDocument, position: Position, settings?: Settings) => Promise<Hover | null>;\n\tdoSignatureHelp?: (document: TextDocument, position: Position) => Promise<SignatureHelp | null>;\n\tdoRename?: (document: TextDocument, position: Position, newName: string) => Promise<WorkspaceEdit | null>;\n\tdoLinkedEditing?: (document: TextDocument, position: Position) => Promise<Range[] | null>;\n\tfindDocumentHighlight?: (document: TextDocument, position: Position) => Promise<DocumentHighlight[]>;\n\tfindDocumentSymbols?: (document: TextDocument) => Promise<SymbolInformation[]>;\n\tfindDocumentLinks?: (document: TextDocument, documentContext: DocumentContext) => Promise<DocumentLink[]>;\n\tfindDefinition?: (document: TextDocument, position: Position) => Promise<Definition | null>;\n\tfindReferences?: (document: TextDocument, position: Position) => Promise<Location[]>;\n\tformat?: (document: TextDocument, range: Range, options: FormattingOptions, settings?: Settings) => Promise<TextEdit[]>;\n\tfindDocumentColors?: (document: TextDocument) => Promise<ColorInformation[]>;\n\tgetColorPresentations?: (document: TextDocument, color: Color, range: Range) => Promise<ColorPresentation[]>;\n\tdoAutoInsert?: (document: TextDocument, position: Position, kind: 'autoClose' | 'autoQuote') => Promise<string | null>;\n\tfindMatchingTagPosition?: (document: TextDocument, position: Position) => Promise<Position | null>;\n\tgetFoldingRanges?: (document: TextDocument) => Promise<FoldingRange[]>;\n\tonDocumentRemoved(document: TextDocument): void;\n\tgetSemanticTokens?(document: TextDocument): Promise<SemanticTokenData[]>;\n\tgetSemanticTokenLegend?(): { types: string[]; modifiers: string[] };\n\tdispose(): void;\n}\n\nexport interface LanguageModes {\n\tupdateDataProviders(dataProviders: IHTMLDataProvider[]): void;\n\tgetModeAtPosition(document: TextDocument, position: Position): LanguageMode | undefined;\n\tgetModesInRange(document: TextDocument, range: Range): LanguageModeRange[];\n\tgetAllModes(): LanguageMode[];\n\tgetAllModesInDocument(document: TextDocument): LanguageMode[];\n\tgetMode(languageId: string): LanguageMode | undefined;\n\tonDocumentRemoved(document: TextDocument): void;\n\tdispose(): void;\n}\n\nexport interface LanguageModeRange extends Range {\n\tmode: LanguageMode | undefined;\n\tattributeValue?: boolean;\n}\n\nexport function getLanguageModes(supportedLanguages: { [languageId: string]: boolean }, workspace: Workspace, clientCapabilities: ClientCapabilities, requestService: FileSystemProvider): LanguageModes {\n\tconst htmlLanguageService = getHTMLLanguageService({ clientCapabilities, fileSystemProvider: requestService });\n\tconst cssLanguageService = getCSSLanguageService({ clientCapabilities, fileSystemProvider: requestService });\n\n\tconst documentRegions = getLanguageModelCache<HTMLDocumentRegions>(10, 60, document => getDocumentRegions(htmlLanguageService, document));\n\n\tlet modelCaches: LanguageModelCache<any>[] = [];\n\tmodelCaches.push(documentRegions);\n\n\tlet modes = Object.create(null);\n\tmodes['html'] = getHTMLMode(htmlLanguageService, workspace);\n\tif (supportedLanguages['css']) {\n\t\tmodes['css'] = getCSSMode(cssLanguageService, documentRegions, workspace);\n\t}\n\tif (supportedLanguages['javascript']) {\n\t\tmodes['javascript'] = getJavaScriptMode(documentRegions, 'javascript', workspace);\n\t\tmodes['typescript'] = getJavaScriptMode(documentRegions, 'typescript', workspace);\n\t}\n\treturn {\n\t\tasync updateDataProviders(dataProviders: IHTMLDataProvider[]): Promise<void> {\n\t\t\thtmlLanguageService.setDataProviders(true, dataProviders);\n\t\t},\n\t\tgetModeAtPosition(document: TextDocument, position: Position): LanguageMode | undefined {\n\t\t\tconst languageId = documentRegions.get(document).getLanguageAtPosition(position);\n\t\t\tif (languageId) {\n\t\t\t\treturn modes[languageId];\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\t\tgetModesInRange(document: TextDocument, range: Range): LanguageModeRange[] {\n\t\t\treturn documentRegions.get(document).getLanguageRanges(range).map((r): LanguageModeRange => {\n\t\t\t\treturn {\n\t\t\t\t\tstart: r.start,\n\t\t\t\t\tend: r.end,\n\t\t\t\t\tmode: r.languageId && modes[r.languageId],\n\t\t\t\t\tattributeValue: r.attributeValue\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tgetAllModesInDocument(document: TextDocument): LanguageMode[] {\n\t\t\tconst result = [];\n\t\t\tfor (const languageId of documentRegions.get(document).getLanguagesInDocument()) {\n\t\t\t\tconst mode = modes[languageId];\n\t\t\t\tif (mode) {\n\t\t\t\t\tresult.push(mode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\tgetAllModes(): LanguageMode[] {\n\t\t\tconst result = [];\n\t\t\tfor (const languageId in modes) {\n\t\t\t\tconst mode = modes[languageId];\n\t\t\t\tif (mode) {\n\t\t\t\t\tresult.push(mode);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\tgetMode(languageId: string): LanguageMode {\n\t\t\treturn modes[languageId];\n\t\t},\n\t\tonDocumentRemoved(document: TextDocument) {\n\t\t\tmodelCaches.forEach(mc => mc.onDocumentRemoved(document));\n\t\t\tfor (const mode in modes) {\n\t\t\t\tmodes[mode].onDocumentRemoved(document);\n\t\t\t}\n\t\t},\n\t\tdispose(): void {\n\t\t\tmodelCaches.forEach(mc => mc.dispose());\n\t\t\tmodelCaches = [];\n\t\t\tfor (const mode in modes) {\n\t\t\t\tmodes[mode].dispose();\n\t\t\t}\n\t\t\tmodes = {};\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { LanguageModes, TextDocument, Position, Range, SelectionRange } from './languageModes';\nimport { insideRangeButNotSame } from '../utils/positions';\n\nexport async function getSelectionRanges(languageModes: LanguageModes, document: TextDocument, positions: Position[]) {\n\tconst htmlMode = languageModes.getMode('html');\n\treturn Promise.all(positions.map(async position => {\n\t\tconst htmlRange = await htmlMode!.getSelectionRange!(document, position);\n\t\tconst mode = languageModes.getModeAtPosition(document, position);\n\t\tif (mode && mode.getSelectionRange) {\n\t\t\tconst range = await mode.getSelectionRange(document, position);\n\t\t\tlet top = range;\n\t\t\twhile (top.parent && insideRangeButNotSame(htmlRange.range, top.parent.range)) {\n\t\t\t\ttop = top.parent;\n\t\t\t}\n\t\t\ttop.parent = htmlRange;\n\t\t\treturn range;\n\t\t}\n\t\treturn htmlRange || SelectionRange.create(Range.create(position, position));\n\t}));\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { SemanticTokenData, Range, TextDocument, LanguageModes, Position } from './languageModes';\nimport { beforeOrSame } from '../utils/positions';\n\ninterface LegendMapping {\n\ttypes: number[] | undefined;\n\tmodifiers: number[] | undefined;\n}\n\nexport interface SemanticTokenProvider {\n\treadonly legend: { types: string[]; modifiers: string[] };\n\tgetSemanticTokens(document: TextDocument, ranges?: Range[]): Promise<number[]>;\n}\n\n\nexport function newSemanticTokenProvider(languageModes: LanguageModes): SemanticTokenProvider {\n\n\t// combined legend across modes\n\tconst legend: { types: string[]; modifiers: string[] } = { types: [], modifiers: [] };\n\tconst legendMappings: { [modeId: string]: LegendMapping } = {};\n\n\tfor (const mode of languageModes.getAllModes()) {\n\t\tif (mode.getSemanticTokenLegend && mode.getSemanticTokens) {\n\t\t\tconst modeLegend = mode.getSemanticTokenLegend();\n\t\t\tlegendMappings[mode.getId()] = { types: createMapping(modeLegend.types, legend.types), modifiers: createMapping(modeLegend.modifiers, legend.modifiers) };\n\t\t}\n\t}\n\n\treturn {\n\t\tlegend,\n\t\tasync getSemanticTokens(document: TextDocument, ranges?: Range[]): Promise<number[]> {\n\t\t\tconst allTokens: SemanticTokenData[] = [];\n\t\t\tfor (const mode of languageModes.getAllModesInDocument(document)) {\n\t\t\t\tif (mode.getSemanticTokens) {\n\t\t\t\t\tconst mapping = legendMappings[mode.getId()];\n\t\t\t\t\tconst tokens = await mode.getSemanticTokens(document);\n\t\t\t\t\tapplyTypesMapping(tokens, mapping.types);\n\t\t\t\t\tapplyModifiersMapping(tokens, mapping.modifiers);\n\t\t\t\t\tfor (const token of tokens) {\n\t\t\t\t\t\tallTokens.push(token);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn encodeTokens(allTokens, ranges, document);\n\t\t}\n\t};\n}\n\nfunction createMapping(origLegend: string[], newLegend: string[]): number[] | undefined {\n\tconst mapping: number[] = [];\n\tlet needsMapping = false;\n\tfor (let origIndex = 0; origIndex < origLegend.length; origIndex++) {\n\t\tconst entry = origLegend[origIndex];\n\t\tlet newIndex = newLegend.indexOf(entry);\n\t\tif (newIndex === -1) {\n\t\t\tnewIndex = newLegend.length;\n\t\t\tnewLegend.push(entry);\n\t\t}\n\t\tmapping.push(newIndex);\n\t\tneedsMapping = needsMapping || (newIndex !== origIndex);\n\t}\n\treturn needsMapping ? mapping : undefined;\n}\n\nfunction applyTypesMapping(tokens: SemanticTokenData[], typesMapping: number[] | undefined): void {\n\tif (typesMapping) {\n\t\tfor (const token of tokens) {\n\t\t\ttoken.typeIdx = typesMapping[token.typeIdx];\n\t\t}\n\t}\n}\n\nfunction applyModifiersMapping(tokens: SemanticTokenData[], modifiersMapping: number[] | undefined): void {\n\tif (modifiersMapping) {\n\t\tfor (const token of tokens) {\n\t\t\tlet modifierSet = token.modifierSet;\n\t\t\tif (modifierSet) {\n\t\t\t\tlet index = 0;\n\t\t\t\tlet result = 0;\n\t\t\t\twhile (modifierSet > 0) {\n\t\t\t\t\tif ((modifierSet & 1) !== 0) {\n\t\t\t\t\t\tresult = result + (1 << modifiersMapping[index]);\n\t\t\t\t\t}\n\t\t\t\t\tindex++;\n\t\t\t\t\tmodifierSet = modifierSet >> 1;\n\t\t\t\t}\n\t\t\t\ttoken.modifierSet = result;\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction encodeTokens(tokens: SemanticTokenData[], ranges: Range[] | undefined, document: TextDocument): number[] {\n\n\tconst resultTokens = tokens.sort((d1, d2) => d1.start.line - d2.start.line || d1.start.character - d2.start.character);\n\tif (ranges) {\n\t\tranges = ranges.sort((d1, d2) => d1.start.line - d2.start.line || d1.start.character - d2.start.character);\n\t} else {\n\t\tranges = [Range.create(Position.create(0, 0), Position.create(document.lineCount, 0))];\n\t}\n\n\tlet rangeIndex = 0;\n\tlet currRange = ranges[rangeIndex++];\n\n\tlet prefLine = 0;\n\tlet prevChar = 0;\n\n\tconst encodedResult: number[] = [];\n\n\tfor (let k = 0; k < resultTokens.length && currRange; k++) {\n\t\tconst curr = resultTokens[k];\n\t\tconst start = curr.start;\n\t\twhile (currRange && beforeOrSame(currRange.end, start)) {\n\t\t\tcurrRange = ranges[rangeIndex++];\n\t\t}\n\t\tif (currRange && beforeOrSame(currRange.start, start) && beforeOrSame({ line: start.line, character: start.character + curr.length }, currRange.end)) {\n\t\t\t// token inside a range\n\n\t\t\tif (prefLine !== start.line) {\n\t\t\t\tprevChar = 0;\n\t\t\t}\n\t\t\tencodedResult.push(start.line - prefLine); // line delta\n\t\t\tencodedResult.push(start.character - prevChar); // line delta\n\t\t\tencodedResult.push(curr.length); // length\n\t\t\tencodedResult.push(curr.typeIdx); // tokenType\n\t\t\tencodedResult.push(curr.modifierSet); // tokenModifier\n\n\t\t\tprefLine = start.line;\n\t\t\tprevChar = start.character;\n\t\t}\n\t}\n\treturn encodedResult;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { createConnection, Connection, Disposable } from 'vscode-languageserver/node';\nimport { formatError } from '../utils/runner';\nimport { RuntimeEnvironment, startServer } from '../htmlServer';\nimport { getNodeFileFS } from './nodeFs';\n\n\n// Create a connection for the server.\nconst connection: Connection = createConnection();\n\nconsole.log = connection.console.log.bind(connection.console);\nconsole.error = connection.console.error.bind(connection.console);\n\nprocess.on('unhandledRejection', (e: any) => {\n\tconnection.console.error(formatError(`Unhandled exception`, e));\n});\n\nconst runtime: RuntimeEnvironment = {\n\ttimer: {\n\t\tsetImmediate(callback: (...args: any[]) => void, ...args: any[]): Disposable {\n\t\t\tconst handle = setImmediate(callback, ...args);\n\t\t\treturn { dispose: () => clearImmediate(handle) };\n\t\t},\n\t\tsetTimeout(callback: (...args: any[]) => void, ms: number, ...args: any[]): Disposable {\n\t\t\tconst handle = setTimeout(callback, ms, ...args);\n\t\t\treturn { dispose: () => clearTimeout(handle) };\n\t\t}\n\t},\n\tfileFs: getNodeFileFS()\n};\n\nstartServer(connection, runtime);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { FileSystemProvider } from '../requests';\nimport { URI as Uri } from 'vscode-uri';\n\nimport * as fs from 'fs';\nimport { FileType } from 'vscode-css-languageservice';\n\nexport function getNodeFileFS(): FileSystemProvider {\n\tfunction ensureFileUri(location: string) {\n\t\tif (!location.startsWith('file:')) {\n\t\t\tthrow new Error('fileSystemProvider can only handle file URLs');\n\t\t}\n\t}\n\treturn {\n\t\tstat(location: string) {\n\t\t\tensureFileUri(location);\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tconst uri = Uri.parse(location);\n\t\t\t\tfs.stat(uri.fsPath, (err, stats) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tif (err.code === 'ENOENT') {\n\t\t\t\t\t\t\treturn c({ type: FileType.Unknown, ctime: -1, mtime: -1, size: -1 });\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn e(err);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tlet type = FileType.Unknown;\n\t\t\t\t\tif (stats.isFile()) {\n\t\t\t\t\t\ttype = FileType.File;\n\t\t\t\t\t} else if (stats.isDirectory()) {\n\t\t\t\t\t\ttype = FileType.Directory;\n\t\t\t\t\t} else if (stats.isSymbolicLink()) {\n\t\t\t\t\t\ttype = FileType.SymbolicLink;\n\t\t\t\t\t}\n\n\t\t\t\t\tc({\n\t\t\t\t\t\ttype,\n\t\t\t\t\t\tctime: stats.ctime.getTime(),\n\t\t\t\t\t\tmtime: stats.mtime.getTime(),\n\t\t\t\t\t\tsize: stats.size\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t},\n\t\treadDirectory(location: string) {\n\t\t\tensureFileUri(location);\n\t\t\treturn new Promise((c, e) => {\n\t\t\t\tconst path = Uri.parse(location).fsPath;\n\n\t\t\t\tfs.readdir(path, { withFileTypes: true }, (err, children) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn e(err);\n\t\t\t\t\t}\n\t\t\t\t\tc(children.map(stat => {\n\t\t\t\t\t\tif (stat.isSymbolicLink()) {\n\t\t\t\t\t\t\treturn [stat.name, FileType.SymbolicLink];\n\t\t\t\t\t\t} else if (stat.isDirectory()) {\n\t\t\t\t\t\t\treturn [stat.name, FileType.Directory];\n\t\t\t\t\t\t} else if (stat.isFile()) {\n\t\t\t\t\t\t\treturn [stat.name, FileType.File];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn [stat.name, FileType.Unknown];\n\t\t\t\t\t\t}\n\t\t\t\t\t}));\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { RequestType, Connection } from 'vscode-languageserver';\nimport { RuntimeEnvironment } from './htmlServer';\n\nexport namespace FsStatRequest {\n\texport const type: RequestType<string, FileStat, any> = new RequestType('fs/stat');\n}\n\nexport namespace FsReadDirRequest {\n\texport const type: RequestType<string, [string, FileType][], any> = new RequestType('fs/readDir');\n}\n\nexport enum FileType {\n\t/**\n\t * The file type is unknown.\n\t */\n\tUnknown = 0,\n\t/**\n\t * A regular file.\n\t */\n\tFile = 1,\n\t/**\n\t * A directory.\n\t */\n\tDirectory = 2,\n\t/**\n\t * A symbolic link to a file.\n\t */\n\tSymbolicLink = 64\n}\nexport interface FileStat {\n\t/**\n\t * The type of the file, e.g. is a regular file, a directory, or symbolic link\n\t * to a file.\n\t */\n\ttype: FileType;\n\t/**\n\t * The creation timestamp in milliseconds elapsed since January 1, 1970 00:00:00 UTC.\n\t */\n\tctime: number;\n\t/**\n\t * The modification timestamp in milliseconds elapsed since January 1, 1970 00:00:00 UTC.\n\t */\n\tmtime: number;\n\t/**\n\t * The size in bytes.\n\t */\n\tsize: number;\n}\n\nexport interface FileSystemProvider {\n\tstat(uri: string): Promise<FileStat>;\n\treadDirectory(uri: string): Promise<[string, FileType][]>;\n}\n\n\nexport function getFileSystemProvider(handledSchemas: string[], connection: Connection, runtime: RuntimeEnvironment): FileSystemProvider {\n\tconst fileFs = runtime.fileFs && handledSchemas.indexOf('file') !== -1 ? runtime.fileFs : undefined;\n\treturn {\n\t\tasync stat(uri: string): Promise<FileStat> {\n\t\t\tif (fileFs && uri.startsWith('file:')) {\n\t\t\t\treturn fileFs.stat(uri);\n\t\t\t}\n\t\t\tconst res = await connection.sendRequest(FsStatRequest.type, uri.toString());\n\t\t\treturn res;\n\t\t},\n\t\treadDirectory(uri: string): Promise<[string, FileType][]> {\n\t\t\tif (fileFs && uri.startsWith('file:')) {\n\t\t\t\treturn fileFs.readDirectory(uri);\n\t\t\t}\n\t\t\treturn connection.sendRequest(FsReadDirRequest.type, uri.toString());\n\t\t}\n\t};\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function pushAll<T>(to: T[], from: T[]) {\n\tif (from) {\n\t\tfor (const e of from) {\n\t\t\tto.push(e);\n\t\t}\n\t}\n}\n\nexport function contains<T>(arr: T[], val: T) {\n\treturn arr.indexOf(val) !== -1;\n}\n\n/**\n * Like `Array#sort` but always stable. Usually runs a little slower `than Array#sort`\n * so only use this when actually needing stable sort.\n */\nexport function mergeSort<T>(data: T[], compare: (a: T, b: T) => number): T[] {\n\t_divideAndMerge(data, compare);\n\treturn data;\n}\n\nfunction _divideAndMerge<T>(data: T[], compare: (a: T, b: T) => number): void {\n\tif (data.length <= 1) {\n\t\t// sorted\n\t\treturn;\n\t}\n\tconst p = (data.length / 2) | 0;\n\tconst left = data.slice(0, p);\n\tconst right = data.slice(p);\n\n\t_divideAndMerge(left, compare);\n\t_divideAndMerge(right, compare);\n\n\tlet leftIdx = 0;\n\tlet rightIdx = 0;\n\tlet i = 0;\n\twhile (leftIdx < left.length && rightIdx < right.length) {\n\t\tconst ret = compare(left[leftIdx], right[rightIdx]);\n\t\tif (ret <= 0) {\n\t\t\t// smaller_equal -> take left to preserve order\n\t\t\tdata[i++] = left[leftIdx++];\n\t\t} else {\n\t\t\t// greater -> take right\n\t\t\tdata[i++] = right[rightIdx++];\n\t\t}\n\t}\n\twhile (leftIdx < left.length) {\n\t\tdata[i++] = left[leftIdx++];\n\t}\n\twhile (rightIdx < right.length) {\n\t\tdata[i++] = right[rightIdx++];\n\t}\n}\n\nexport function binarySearch<T>(array: T[], key: T, comparator: (op1: T, op2: T) => number): number {\n\tlet low = 0,\n\t\thigh = array.length - 1;\n\n\twhile (low <= high) {\n\t\tconst mid = ((low + high) / 2) | 0;\n\t\tconst comp = comparator(array[mid], key);\n\t\tif (comp < 0) {\n\t\t\tlow = mid + 1;\n\t\t} else if (comp > 0) {\n\t\t\thigh = mid - 1;\n\t\t} else {\n\t\t\treturn mid;\n\t\t}\n\t}\n\treturn -(low + 1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { DocumentContext } from 'vscode-css-languageservice';\nimport { endsWith, startsWith } from '../utils/strings';\nimport { WorkspaceFolder } from 'vscode-languageserver';\nimport { URI, Utils } from 'vscode-uri';\n\nexport function getDocumentContext(documentUri: string, workspaceFolders: WorkspaceFolder[]): DocumentContext {\n\tfunction getRootFolder(): string | undefined {\n\t\tfor (const folder of workspaceFolders) {\n\t\t\tlet folderURI = folder.uri;\n\t\t\tif (!endsWith(folderURI, '/')) {\n\t\t\t\tfolderURI = folderURI + '/';\n\t\t\t}\n\t\t\tif (startsWith(documentUri, folderURI)) {\n\t\t\t\treturn folderURI;\n\t\t\t}\n\t\t}\n\t\treturn undefined;\n\t}\n\n\treturn {\n\t\tresolveReference: (ref: string, base = documentUri) => {\n\t\t\tif (ref.match(/^\\w[\\w\\d+.-]*:/)) {\n\t\t\t\t// starts with a schema\n\t\t\t\treturn ref;\n\t\t\t}\n\t\t\tif (ref[0] === '/') { // resolve absolute path against the current workspace folder\n\t\t\t\tconst folderUri = getRootFolder();\n\t\t\t\tif (folderUri) {\n\t\t\t\t\treturn folderUri + ref.substr(1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst baseUri = URI.parse(base);\n\t\t\tconst baseUriDir = baseUri.path.endsWith('/') ? baseUri : Utils.dirname(baseUri);\n\t\t\treturn Utils.resolvePath(baseUriDir, ref).toString(true);\n\t\t},\n\t};\n}\n\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { Position, Range } from '../modes/languageModes';\n\nexport function beforeOrSame(p1: Position, p2: Position) {\n\treturn p1.line < p2.line || p1.line === p2.line && p1.character <= p2.character;\n}\nexport function insideRangeButNotSame(r1: Range, r2: Range) {\n\treturn beforeOrSame(r1.start, r2.start) && beforeOrSame(r2.end, r1.end) && !equalRange(r1, r2);\n}\nexport function equalRange(r1: Range, r2: Range) {\n\treturn r1.start.line === r2.start.line && r1.start.character === r2.start.character && r1.end.line === r2.end.line && r1.end.character === r2.end.character;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { ResponseError, CancellationToken, LSPErrorCodes } from 'vscode-languageserver';\nimport { RuntimeEnvironment } from '../htmlServer';\n\nexport function formatError(message: string, err: any): string {\n\tif (err instanceof Error) {\n\t\tconst error = <Error>err;\n\t\treturn `${message}: ${error.message}\\n${error.stack}`;\n\t} else if (typeof err === 'string') {\n\t\treturn `${message}: ${err}`;\n\t} else if (err) {\n\t\treturn `${message}: ${err.toString()}`;\n\t}\n\treturn message;\n}\n\nexport function runSafe<T>(runtime: RuntimeEnvironment, func: () => Thenable<T>, errorVal: T, errorMessage: string, token: CancellationToken): Thenable<T | ResponseError<any>> {\n\treturn new Promise<T | ResponseError<any>>((resolve) => {\n\t\truntime.timer.setImmediate(() => {\n\t\t\tif (token.isCancellationRequested) {\n\t\t\t\tresolve(cancelValue());\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn func().then(result => {\n\t\t\t\tif (token.isCancellationRequested) {\n\t\t\t\t\tresolve(cancelValue());\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\tresolve(result);\n\t\t\t\t}\n\t\t\t}, e => {\n\t\t\t\tconsole.error(formatError(errorMessage, e));\n\t\t\t\tresolve(errorVal);\n\t\t\t});\n\t\t});\n\t});\n}\n\n\n\nfunction cancelValue<E>() {\n\treturn new ResponseError<E>(LSPErrorCodes.RequestCancelled, 'Request cancelled');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nexport function getWordAtText(text: string, offset: number, wordDefinition: RegExp): { start: number; length: number } {\n\tlet lineStart = offset;\n\twhile (lineStart > 0 && !isNewlineCharacter(text.charCodeAt(lineStart - 1))) {\n\t\tlineStart--;\n\t}\n\tconst offsetInLine = offset - lineStart;\n\tconst lineText = text.substr(lineStart);\n\n\t// make a copy of the regex as to not keep the state\n\tconst flags = wordDefinition.ignoreCase ? 'gi' : 'g';\n\twordDefinition = new RegExp(wordDefinition.source, flags);\n\n\tlet match = wordDefinition.exec(lineText);\n\twhile (match && match.index + match[0].length < offsetInLine) {\n\t\tmatch = wordDefinition.exec(lineText);\n\t}\n\tif (match && match.index <= offsetInLine) {\n\t\treturn { start: match.index + lineStart, length: match[0].length };\n\t}\n\n\treturn { start: offset, length: 0 };\n}\n\nexport function startsWith(haystack: string, needle: string): boolean {\n\tif (haystack.length < needle.length) {\n\t\treturn false;\n\t}\n\n\tfor (let i = 0; i < needle.length; i++) {\n\t\tif (haystack[i] !== needle[i]) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\treturn true;\n}\n\nexport function endsWith(haystack: string, needle: string): boolean {\n\tconst diff = haystack.length - needle.length;\n\tif (diff > 0) {\n\t\treturn haystack.indexOf(needle, diff) === diff;\n\t} else if (diff === 0) {\n\t\treturn haystack === needle;\n\t} else {\n\t\treturn false;\n\t}\n}\n\nexport function repeat(value: string, count: number) {\n\tlet s = '';\n\twhile (count > 0) {\n\t\tif ((count & 1) === 1) {\n\t\t\ts += value;\n\t\t}\n\t\tvalue += value;\n\t\tcount = count >>> 1;\n\t}\n\treturn s;\n}\n\nexport function isWhitespaceOnly(str: string) {\n\treturn /^\\s*$/.test(str);\n}\n\nexport function isEOL(content: string, offset: number) {\n\treturn isNewlineCharacter(content.charCodeAt(offset));\n}\n\nconst CR = '\\r'.charCodeAt(0);\nconst NL = '\\n'.charCodeAt(0);\nexport function isNewlineCharacter(charCode: number) {\n\treturn charCode === CR || charCode === NL;\n}","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n\nimport { CancellationToken, Connection, Diagnostic, Disposable, DocumentDiagnosticParams, DocumentDiagnosticReport, DocumentDiagnosticReportKind, TextDocuments } from 'vscode-languageserver';\nimport { TextDocument } from 'vscode-html-languageservice';\nimport { formatError, runSafe } from './runner';\nimport { RuntimeEnvironment } from '../htmlServer';\n\nexport type Validator = (textDocument: TextDocument) => Promise<Diagnostic[]>;\nexport type DiagnosticsSupport = {\n\tdispose(): void;\n\trequestRefresh(): void;\n};\n\nexport function registerDiagnosticsPushSupport(documents: TextDocuments<TextDocument>, connection: Connection, runtime: RuntimeEnvironment, validate: Validator): DiagnosticsSupport {\n\n\tconst pendingValidationRequests: { [uri: string]: Disposable } = {};\n\tconst validationDelayMs = 500;\n\n\tconst disposables: Disposable[] = [];\n\n\t// The content of a text document has changed. This event is emitted\n\t// when the text document first opened or when its content has changed.\n\tdocuments.onDidChangeContent(change => {\n\t\ttriggerValidation(change.document);\n\t}, undefined, disposables);\n\n\t// a document has closed: clear all diagnostics\n\tdocuments.onDidClose(event => {\n\t\tcleanPendingValidation(event.document);\n\t\tconnection.sendDiagnostics({ uri: event.document.uri, diagnostics: [] });\n\t}, undefined, disposables);\n\n\tfunction cleanPendingValidation(textDocument: TextDocument): void {\n\t\tconst request = pendingValidationRequests[textDocument.uri];\n\t\tif (request) {\n\t\t\trequest.dispose();\n\t\t\tdelete pendingValidationRequests[textDocument.uri];\n\t\t}\n\t}\n\n\tfunction triggerValidation(textDocument: TextDocument): void {\n\t\tcleanPendingValidation(textDocument);\n\t\tconst request = pendingValidationRequests[textDocument.uri] = runtime.timer.setTimeout(async () => {\n\t\t\tif (request === pendingValidationRequests[textDocument.uri]) {\n\t\t\t\ttry {\n\t\t\t\t\tconst diagnostics = await validate(textDocument);\n\t\t\t\t\tif (request === pendingValidationRequests[textDocument.uri]) {\n\t\t\t\t\t\tconnection.sendDiagnostics({ uri: textDocument.uri, diagnostics });\n\t\t\t\t\t}\n\t\t\t\t\tdelete pendingValidationRequests[textDocument.uri];\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconnection.console.error(formatError(`Error while validating ${textDocument.uri}`, e));\n\t\t\t\t}\n\t\t\t}\n\t\t}, validationDelayMs);\n\t}\n\n\treturn {\n\t\trequestRefresh: () => {\n\t\t\tdocuments.all().forEach(triggerValidation);\n\t\t},\n\t\tdispose: () => {\n\t\t\tdisposables.forEach(d => d.dispose());\n\t\t\tdisposables.length = 0;\n\t\t\tconst keys = Object.keys(pendingValidationRequests);\n\t\t\tfor (const key of keys) {\n\t\t\t\tpendingValidationRequests[key].dispose();\n\t\t\t\tdelete pendingValidationRequests[key];\n\t\t\t}\n\t\t}\n\t};\n}\n\nexport function registerDiagnosticsPullSupport(documents: TextDocuments<TextDocument>, connection: Connection, runtime: RuntimeEnvironment, validate: Validator): DiagnosticsSupport {\n\n\tfunction newDocumentDiagnosticReport(diagnostics: Diagnostic[]): DocumentDiagnosticReport {\n\t\treturn {\n\t\t\tkind: DocumentDiagnosticReportKind.Full,\n\t\t\titems: diagnostics\n\t\t};\n\t}\n\n\tconst registration = connection.languages.diagnostics.on(async (params: DocumentDiagnosticParams, token: CancellationToken) => {\n\t\treturn runSafe(runtime, async () => {\n\t\t\tconst document = documents.get(params.textDocument.uri);\n\t\t\tif (document) {\n\t\t\t\treturn newDocumentDiagnosticReport(await validate(document));\n\t\t\t}\n\t\t\treturn newDocumentDiagnosticReport([]);\n\n\t\t}, newDocumentDiagnosticReport([]), `Error while computing diagnostics for ${params.textDocument.uri}`, token);\n\t});\n\n\tfunction requestRefresh(): void {\n\t\tconnection.languages.diagnostics.refresh();\n\t}\n\n\treturn {\n\t\trequestRefresh,\n\t\tdispose: () => {\n\t\t\tregistration.dispose();\n\t\t}\n\t};\n\n}\n"],"names":["dataPaths","requestService","providers","map","async","p","id","source","rawData","JSON","parse","err","newHTMLDataProvider","version","tags","globalAttributes","valueSets","parseHTMLData","getContent","e","Promise","all","connection","runtime","documents","TextDocuments","TextDocument","listen","languageModes","diagnosticsSupport","workspaceFolders","clientSnippetSupport","dynamicFormatterRegistration","scopedSettingsSupport","workspaceFoldersSupport","foldingRangeLimit","Number","MAX_VALUE","formatterMaxNumberOfEdits","customDataRequestService","uri","sendRequest","CustomDataContent","type","globalSettings","documentSettings","getDocumentSettings","textDocument","needsDocumentSettings","promise","scopeUri","configRequestParam","items","section","ConfigurationRequest","then","s","css","html","javascript","resolve","undefined","onDidClose","document","onInitialize","params","initializationOptions","Array","isArray","rootPath","push","name","URI","file","toString","handledSchemas","fileSystemProvider","getFileSystemProvider","workspace","settings","folders","getLanguageModes","embeddedLanguages","capabilities","getClientCapability","def","keys","split","c","i","length","hasOwnProperty","fetchHTMLDataProviders","dataProviders","updateDataProviders","onDocumentRemoved","onShutdown","dispose","provideFormatter","customCapabilities","rangeFormatting","editLimit","supportsDiagnosticPull","registerDiagnosticsPushSupport","validateTextDocument","registerDiagnosticsPullSupport","textDocumentSync","TextDocumentSyncKind","Incremental","completionProvider","resolveProvider","triggerCharacters","hoverProvider","documentHighlightProvider","documentRangeFormattingProvider","documentFormattingProvider","documentLinkProvider","documentSymbolProvider","definitionProvider","signatureHelpProvider","referencesProvider","colorProvider","foldingRangeProvider","selectionRangeProvider","renameProvider","linkedEditingRangeProvider","diagnosticProvider","documentSelector","interFileDependencies","workspaceDiagnostics","onInitialized","client","register","DidChangeWorkspaceFoldersNotification","onNotification","toAdd","event","added","toRemove","removed","updatedFolders","folder","some","r","concat","requestRefresh","semanticTokensProvider","formatterRegistrations","isValidationEnabled","languageId","validationSettings","validate","styles","scripts","diagnostics","modes","getAllModesInDocument","m","doValidation","latestTextDocument","get","mode","getId","pushAll","console","error","formatError","onFormat","range","options","unformattedTags","format","unformatted","enabledModes","match","edits","getFullRange","newText","applyEdits","TextEdit","replace","getSemanticTokenProvider","newSemanticTokenProvider","onDidChangeConfiguration","change","enable","language","DocumentRangeFormattingRequest","DocumentFormattingRequest","forEach","onCompletion","textDocumentPosition","token","runSafe","getModeAtPosition","position","doComplete","isIncomplete","documentContext","getDocumentContext","onCompletionResolve","item","data","isCompletionItemData","getMode","doResolve","onHover","doHover","onDocumentHighlight","documentHighlightParams","findDocumentHighlight","onDefinition","definitionParams","findDefinition","onReferences","referenceParams","findReferences","onSignatureHelp","signatureHelpParms","doSignatureHelp","onDocumentRangeFormatting","formatParams","onDocumentFormatting","onDocumentLinks","documentLinkParam","links","findDocumentLinks","onDocumentSymbol","documentSymbolParms","symbols","findDocumentSymbols","onRequest","DocumentColorRequest","infos","findDocumentColors","ColorPresentationRequest","start","getColorPresentations","color","AutoInsertRequest","pos","character","Position","create","line","doAutoInsert","kind","onFoldingRanges","getFoldingRanges","onSelectionRanges","getSelectionRanges","positions","onRenameRequest","doRename","newName","languages","onLinkedEditingRange","doLinkedEditing","ranges","SemanticTokenRequest","getSemanticTokens","SemanticTokenLegendRequest","legend","CustomDataChangedNotification","Range","positionAt","getText","NotificationType","RequestType","RequestType0","maxEntries","cleanupIntervalTimeInSec","cleanupInterval","languageModels","nModels","setInterval","cutoffTime","Date","now","uris","Object","cTime","languageModelInfo","languageModel","oldestTime","oldestUri","clearInterval","cssLanguageService","documentRegions","embeddedCSSDocuments","getLanguageModelCache","getEmbeddedDocument","cssStylesheets","parseStylesheet","embedded","_settings","stylesheet","doComplete2","completion","CompletionList","hover","findDocumentHighlights","filter","CSS_STYLE_RULE","getSelectionRange","languageService","regions","scanner","createScanner","languageIdFromType","lastTagName","lastAttributeName","importedScripts","scan","TokenType","EOS","StartTag","getTokenText","Styles","getTokenOffset","end","getTokenEnd","Script","AttributeName","AttributeValue","toLowerCase","value","substr","test","attributeLanguageId","getAttributeLanguage","firstChar","attributeValue","getLanguageRanges","result","currentPos","currentOffset","offsetAt","endOffset","region","Math","max","startPos","min","endPos","ignoreAttributeValues","contents","oldContent","lastSuffix","substituteWithWhitespace","getPrefix","updateContent","substring","getSuffix","getLanguageAtPosition","offset","getLanguagesInDocument","_document","indexOf","getImportedScripts","content","before","after","accumulatedWS","ch","str","n","append","attributeName","formatRange","formattingOptions","prevLineStart","isEOL","allRanges","getModesInRange","htmlMode","htmlEdits","htmlFormattedContent","insertFinalNewline","endsWith","insert","newDocument","afterFormatRangeLength","newFormatRange","embeddedRanges","embeddedEdits","edit","resultContent","resultReplaceText","maxRanges","_cancellationToken","lineCount","rangesPerMode","getRangesForMode","modeRanges","modeRange","startLine","endLine","top","sort","r1","r2","diff","previous","nestingLevels","nestingLevelCounts","setNestingLevel","index","level","entry","pop","entries","maxLevel","limitRanges","htmlLanguageService","htmlDocuments","parseHTMLDocument","htmlSettings","merge","suggest","hideAutoCompleteProposals","autoClosingTags","attributeDefaultValue","htmlDocument","formatSettings","contentUnformatted","text","charAt","doQuoteComplete","doTagComplete","findMatchingTagPosition","findLinkedEditingRanges","src","dst","key","jsDocuments","host","scriptKind","compilerOptions","allowNonTsExtensions","allowJs","lib","target","ts","ScriptTarget","Latest","moduleResolution","ModuleResolutionKind","Classic","experimentalDecorators","currentTextDocument","jsLanguageService","libs","getCompilationSettings","getScriptFileNames","getScriptKind","fileName","ScriptKind","TS","JS","getScriptVersion","String","getScriptSnapshot","loadLibrary","getLength","getChangeRange","getCurrentDirectory","getDefaultLibFileName","_options","readFile","path","_encoding","fileExists","directoryExists","startsWith","createLanguageService","jsDocument","getLanguageServiceHost","hostSettings","implicitProjectConfig","strictNullChecks","updateHostSettings","getLanguageService","syntaxDiagnostics","getSyntacticDiagnostics","semanticDiagnostics","getSemanticDiagnostics","d","ignoredErrors","includes","code","diag","convertRange","severity","DiagnosticSeverity","Error","message","flattenDiagnosticMessageText","messageText","_documentContext","completions","getCompletionsAtPosition","includeExternalModuleExports","includeInsertTextCompletions","replaceRange","getWordAtText","JS_WORD_REGEX","label","sortText","convertKind","textEdit","details","getCompletionEntryDetails","detail","displayPartsToString","displayParts","documentation","info","getQuickInfoAtPosition","textSpan","join","signHelp","getSignatureHelpItems","ret","activeSignature","selectedItemIndex","activeParameter","argumentIndex","signatures","signature","parameters","prefixDisplayParts","a","parameter","separatorDisplayParts","suffixDisplayParts","jsDocumentPosition","canRename","getRenameInfo","renameInfos","findRenameLocations","renameInfo","changes","highlights","getDocumentHighlights","out","highlight","highlightSpans","DocumentHighlightKind","Write","Text","getNavigationBarItems","existing","collectSymbols","containerLabel","sig","spans","symbol","convertSymbolKind","location","containerName","childItems","child","definition","getDefinitionAtPosition","references","getReferencesAtPosition","convertSelectionRange","selectionRange","parent","SelectionRange","getSmartSelectionRange","formatterSettings","initialIndentLevel","lineStart","nChars","tabSize","floor","computeInitialIndent","convertTabsToSpaces","insertSpaces","indentSize","indentStyle","IndentStyle","Smart","newLineCharacter","baseIndentSize","insertSpaceAfterCommaDelimiter","Boolean","insertSpaceAfterConstructor","insertSpaceAfterSemicolonInForStatements","insertSpaceBeforeAndAfterBinaryOperators","insertSpaceAfterKeywordsInControlFlowStatements","insertSpaceAfterFunctionKeywordForAnonymousFunctions","insertSpaceBeforeFunctionParenthesis","insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis","insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets","insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces","insertSpaceAfterOpeningAndBeforeClosingEmptyBraces","insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces","insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces","insertSpaceAfterTypeAssertion","placeOpenBraceOnNewLineForControlBlocks","placeOpenBraceOnNewLineForFunctions","semicolons","convertOptions","lastLineRange","isWhitespaceOnly","getFormattingEditsForRange","span","repeat","getOutliningSpans","curr","foldingRange","FoldingRangeKind","Region","Comment","getSemanticTokenLegend","startPosition","endPosition","CompletionItemKind","Keyword","Variable","Field","Function","Method","Enum","EnumMember","Module","Class","Interface","File","Folder","Constant","Property","SymbolKind","Constructor","TypeParameter","getTokenTypeFromClassification","tsClassification","getTokenModifierFromClassification","tokenTypes","warn","tokenModifiers","types","modifiers","getEncodedSemanticClassifications","tokenType","typeIdx","modifierSet","supportedLanguages","clientCapabilities","getCSSLanguageService","getDocumentRegions","modelCaches","getHTMLMode","getCSSMode","getJavaScriptMode","setDataProviders","getAllModes","mc","WorkspaceFolder","CompletionItem","Diagnostic","DocumentHighlight","DocumentLink","FoldingRange","FormattingOptions","Hover","Location","SymbolInformation","Color","ColorInformation","ColorPresentation","WorkspaceEdit","SignatureInformation","ParameterInformation","TextDocumentIdentifier","ClientCapabilities","htmlRange","insideRangeButNotSame","legendMappings","modeLegend","createMapping","allTokens","mapping","tokens","applyTypesMapping","applyModifiersMapping","resultTokens","d1","d2","rangeIndex","currRange","prefLine","prevChar","encodedResult","k","beforeOrSame","encodeTokens","origLegend","newLegend","needsMapping","origIndex","newIndex","typesMapping","modifiersMapping","createConnection","log","bind","process","on","timer","setImmediate","callback","args","handle","clearImmediate","setTimeout","ms","clearTimeout","fileFs","getNodeFileFS","startServer","ensureFileUri","stat","fs","fsPath","stats","FileType","Unknown","ctime","mtime","size","isFile","isDirectory","Directory","isSymbolicLink","SymbolicLink","getTime","readDirectory","readdir","withFileTypes","children","FsStatRequest","FsReadDirRequest","_divideAndMerge","compare","left","slice","right","leftIdx","rightIdx","to","from","arr","val","array","comparator","low","high","mid","comp","documentUri","resolveReference","ref","base","folderUri","folderURI","getRootFolder","baseUri","baseUriDir","Utils","dirname","resolvePath","p1","p2","equalRange","func","errorVal","errorMessage","isCancellationRequested","cancelValue","stack","ResponseError","LSPErrorCodes","RequestCancelled","wordDefinition","isNewlineCharacter","charCodeAt","offsetInLine","lineText","flags","ignoreCase","RegExp","exec","haystack","needle","count","CR","NL","charCode","pendingValidationRequests","disposables","cleanPendingValidation","request","triggerValidation","sendDiagnostics","onDidChangeContent","newDocumentDiagnosticReport","DocumentDiagnosticReportKind","Full","registration","refresh"],"sourceRoot":""}